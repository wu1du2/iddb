// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/datacatalog/v1beta1/schema.proto

package datacatalog

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
type Schema struct {
	// Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be
	// specified.
	Columns              []*ColumnSchema `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_834760e0ed3be1cb, []int{0}
}

func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (m *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(m, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetColumns() []*ColumnSchema {
	if m != nil {
		return m.Columns
	}
	return nil
}

// Representation of a column within a schema. Columns could be nested inside
// other columns.
type ColumnSchema struct {
	// Required. Name of the column.
	Column string `protobuf:"bytes,6,opt,name=column,proto3" json:"column,omitempty"`
	// Required. Type of the column.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Optional. Description of the column. Default value is an empty string.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Optional. A column's mode indicates whether the values in this column are required,
	// nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported.
	// Default mode is `NULLABLE`.
	Mode string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	// Optional. Schema of sub-columns. A column can have zero or more sub-columns.
	Subcolumns           []*ColumnSchema `protobuf:"bytes,7,rep,name=subcolumns,proto3" json:"subcolumns,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ColumnSchema) Reset()         { *m = ColumnSchema{} }
func (m *ColumnSchema) String() string { return proto.CompactTextString(m) }
func (*ColumnSchema) ProtoMessage()    {}
func (*ColumnSchema) Descriptor() ([]byte, []int) {
	return fileDescriptor_834760e0ed3be1cb, []int{1}
}

func (m *ColumnSchema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ColumnSchema.Unmarshal(m, b)
}
func (m *ColumnSchema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ColumnSchema.Marshal(b, m, deterministic)
}
func (m *ColumnSchema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ColumnSchema.Merge(m, src)
}
func (m *ColumnSchema) XXX_Size() int {
	return xxx_messageInfo_ColumnSchema.Size(m)
}
func (m *ColumnSchema) XXX_DiscardUnknown() {
	xxx_messageInfo_ColumnSchema.DiscardUnknown(m)
}

var xxx_messageInfo_ColumnSchema proto.InternalMessageInfo

func (m *ColumnSchema) GetColumn() string {
	if m != nil {
		return m.Column
	}
	return ""
}

func (m *ColumnSchema) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ColumnSchema) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ColumnSchema) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *ColumnSchema) GetSubcolumns() []*ColumnSchema {
	if m != nil {
		return m.Subcolumns
	}
	return nil
}

func init() {
	proto.RegisterType((*Schema)(nil), "google.cloud.datacatalog.v1beta1.Schema")
	proto.RegisterType((*ColumnSchema)(nil), "google.cloud.datacatalog.v1beta1.ColumnSchema")
}

func init() {
	proto.RegisterFile("google/cloud/datacatalog/v1beta1/schema.proto", fileDescriptor_834760e0ed3be1cb)
}

var fileDescriptor_834760e0ed3be1cb = []byte{
	// 336 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x86, 0x99, 0xf4, 0x92, 0x72, 0xa7, 0xae, 0xb2, 0x31, 0xe8, 0xc2, 0x50, 0x15, 0xba, 0x71,
	0x86, 0xea, 0x2e, 0xae, 0x6c, 0x05, 0x17, 0x22, 0x48, 0x0b, 0x15, 0xa4, 0x20, 0x27, 0xc9, 0x38,
	0x0d, 0x24, 0x39, 0x21, 0x99, 0x14, 0x7c, 0x25, 0x1f, 0xc5, 0x37, 0x70, 0xe7, 0xc2, 0x95, 0x4f,
	0xe0, 0x52, 0x3a, 0x93, 0xd0, 0xd9, 0x48, 0xc1, 0xed, 0xff, 0x7f, 0xe7, 0x3b, 0x39, 0x19, 0x7a,
	0x26, 0x11, 0x65, 0x26, 0x78, 0x9c, 0x61, 0x93, 0xf0, 0x04, 0x14, 0xc4, 0xa0, 0x20, 0x43, 0xc9,
	0xd7, 0xe3, 0x48, 0x28, 0x18, 0xf3, 0x3a, 0x5e, 0x89, 0x1c, 0x58, 0x59, 0xa1, 0x42, 0x2f, 0x30,
	0x38, 0xd3, 0x38, 0xb3, 0x70, 0xd6, 0xe2, 0x07, 0x47, 0xad, 0x10, 0xca, 0x94, 0x3f, 0xa7, 0x22,
	0x4b, 0x9e, 0x22, 0xb1, 0x82, 0x75, 0x8a, 0x95, 0x51, 0x0c, 0x1f, 0xa8, 0x3b, 0xd7, 0x4a, 0xef,
	0x8e, 0xf6, 0x63, 0xcc, 0x9a, 0xbc, 0xa8, 0x7d, 0x27, 0xe8, 0x8d, 0x06, 0xe7, 0x8c, 0xed, 0xd2,
	0xb3, 0xa9, 0x1e, 0x30, 0x82, 0x49, 0xef, 0xe3, 0xca, 0x99, 0x75, 0x8e, 0xe1, 0x3b, 0xa1, 0x7b,
	0x76, 0xed, 0x1d, 0x52, 0xd7, 0x74, 0xbe, 0x1b, 0x90, 0xd1, 0x7f, 0x83, 0xb7, 0x91, 0xb7, 0x4f,
	0xff, 0xa9, 0x97, 0x52, 0xf8, 0x64, 0x5b, 0xe9, 0xc0, 0x3b, 0xa5, 0x83, 0x44, 0xd4, 0x71, 0x95,
	0x96, 0x2a, 0xc5, 0xc2, 0x77, 0xba, 0x9e, 0xcc, 0xec, 0x7c, 0x33, 0x9f, 0x63, 0x22, 0xfc, 0xde,
	0xb6, 0xd7, 0x81, 0x37, 0xa7, 0xb4, 0x6e, 0xa2, 0xee, 0xb0, 0xfe, 0x5f, 0x0f, 0x23, 0x33, 0x4b,
	0x33, 0xf9, 0x24, 0xf4, 0x24, 0xc6, 0x7c, 0xa7, 0xe6, 0x9e, 0x3c, 0xde, 0xb6, 0x8c, 0xc4, 0x0c,
	0x0a, 0xc9, 0xb0, 0x92, 0x5c, 0x8a, 0x42, 0xff, 0x7b, 0x6e, 0x2a, 0x28, 0xd3, 0xfa, 0xf7, 0x07,
	0xbf, 0xb4, 0xb2, 0x6f, 0x42, 0x5e, 0x9d, 0xe0, 0xc6, 0x08, 0xa7, 0x7a, 0xe9, 0x35, 0x28, 0x98,
	0xb6, 0x4b, 0x17, 0xe3, 0xc9, 0x66, 0xe2, 0xad, 0x43, 0x96, 0x1a, 0x59, 0x5a, 0xc8, 0x72, 0x61,
	0xa4, 0x5f, 0xce, 0xb1, 0x41, 0xc2, 0x50, 0x33, 0x61, 0x68, 0x41, 0x61, 0xd8, 0x52, 0x91, 0xab,
	0x3f, 0xf3, 0xe2, 0x27, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xc7, 0x19, 0xd1, 0x96, 0x02, 0x00, 0x00,
}
