// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/datacatalog/v1beta1/gcs_fileset_spec.proto

package datacatalog

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Describes a Cloud Storage fileset entry.
type GcsFilesetSpec struct {
	// Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud
	// Storage documentation](/storage/docs/gsutil/addlhelp/WildcardNames) for
	// more information. Note that bucket wildcards are currently not supported.
	//
	// Examples of valid file_patterns:
	//
	//  * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir`
	//                              directory.
	//  * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir`
	//                               spanning all subdirectories.
	//  * `gs://bucket_name/file*`: matches files prefixed by `file` in
	//                              `bucket_name`
	//  * `gs://bucket_name/??.txt`: matches files with two characters followed by
	//                               `.txt` in `bucket_name`
	//  * `gs://bucket_name/[aeiou].txt`: matches files that contain a single
	//                                    vowel character followed by `.txt` in
	//                                    `bucket_name`
	//  * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ...
	//                                  or `m` followed by `.txt` in `bucket_name`
	//  * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match
	//                              `a/*/b` pattern, such as `a/c/b`, `a/d/b`
	//  * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt`
	//
	// You can combine wildcards to provide more powerful matches, for example:
	//
	//  * `gs://bucket_name/[a-m]??.j*g`
	FilePatterns []string `protobuf:"bytes,1,rep,name=file_patterns,json=filePatterns,proto3" json:"file_patterns,omitempty"`
	// Output only. Sample files contained in this fileset, not all files contained in this
	// fileset are represented here.
	SampleGcsFileSpecs   []*GcsFileSpec `protobuf:"bytes,2,rep,name=sample_gcs_file_specs,json=sampleGcsFileSpecs,proto3" json:"sample_gcs_file_specs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GcsFilesetSpec) Reset()         { *m = GcsFilesetSpec{} }
func (m *GcsFilesetSpec) String() string { return proto.CompactTextString(m) }
func (*GcsFilesetSpec) ProtoMessage()    {}
func (*GcsFilesetSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6379beb7306c38, []int{0}
}

func (m *GcsFilesetSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcsFilesetSpec.Unmarshal(m, b)
}
func (m *GcsFilesetSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcsFilesetSpec.Marshal(b, m, deterministic)
}
func (m *GcsFilesetSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcsFilesetSpec.Merge(m, src)
}
func (m *GcsFilesetSpec) XXX_Size() int {
	return xxx_messageInfo_GcsFilesetSpec.Size(m)
}
func (m *GcsFilesetSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_GcsFilesetSpec.DiscardUnknown(m)
}

var xxx_messageInfo_GcsFilesetSpec proto.InternalMessageInfo

func (m *GcsFilesetSpec) GetFilePatterns() []string {
	if m != nil {
		return m.FilePatterns
	}
	return nil
}

func (m *GcsFilesetSpec) GetSampleGcsFileSpecs() []*GcsFileSpec {
	if m != nil {
		return m.SampleGcsFileSpecs
	}
	return nil
}

// Specifications of a single file in Cloud Storage.
type GcsFileSpec struct {
	// Required. The full file path. Example: `gs://bucket_name/a/b.txt`.
	FilePath string `protobuf:"bytes,1,opt,name=file_path,json=filePath,proto3" json:"file_path,omitempty"`
	// Output only. Timestamps about the Cloud Storage file.
	GcsTimestamps *SystemTimestamps `protobuf:"bytes,2,opt,name=gcs_timestamps,json=gcsTimestamps,proto3" json:"gcs_timestamps,omitempty"`
	// Output only. The size of the file, in bytes.
	SizeBytes            int64    `protobuf:"varint,4,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GcsFileSpec) Reset()         { *m = GcsFileSpec{} }
func (m *GcsFileSpec) String() string { return proto.CompactTextString(m) }
func (*GcsFileSpec) ProtoMessage()    {}
func (*GcsFileSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_4d6379beb7306c38, []int{1}
}

func (m *GcsFileSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GcsFileSpec.Unmarshal(m, b)
}
func (m *GcsFileSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GcsFileSpec.Marshal(b, m, deterministic)
}
func (m *GcsFileSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GcsFileSpec.Merge(m, src)
}
func (m *GcsFileSpec) XXX_Size() int {
	return xxx_messageInfo_GcsFileSpec.Size(m)
}
func (m *GcsFileSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_GcsFileSpec.DiscardUnknown(m)
}

var xxx_messageInfo_GcsFileSpec proto.InternalMessageInfo

func (m *GcsFileSpec) GetFilePath() string {
	if m != nil {
		return m.FilePath
	}
	return ""
}

func (m *GcsFileSpec) GetGcsTimestamps() *SystemTimestamps {
	if m != nil {
		return m.GcsTimestamps
	}
	return nil
}

func (m *GcsFileSpec) GetSizeBytes() int64 {
	if m != nil {
		return m.SizeBytes
	}
	return 0
}

func init() {
	proto.RegisterType((*GcsFilesetSpec)(nil), "google.cloud.datacatalog.v1beta1.GcsFilesetSpec")
	proto.RegisterType((*GcsFileSpec)(nil), "google.cloud.datacatalog.v1beta1.GcsFileSpec")
}

func init() {
	proto.RegisterFile("google/cloud/datacatalog/v1beta1/gcs_fileset_spec.proto", fileDescriptor_4d6379beb7306c38)
}

var fileDescriptor_4d6379beb7306c38 = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x3f, 0xce, 0xd3, 0x30,
	0x18, 0xc6, 0xe5, 0x04, 0x21, 0xea, 0xf2, 0x7d, 0x43, 0x24, 0xa4, 0xa8, 0x0b, 0x56, 0x61, 0xc8,
	0x42, 0xa2, 0x94, 0x01, 0x29, 0x4c, 0xa4, 0x88, 0x0e, 0x2c, 0x55, 0x8b, 0x3a, 0xa0, 0x8a, 0xc8,
	0x71, 0xdf, 0xba, 0x91, 0x92, 0xda, 0x8a, 0x4d, 0xa5, 0x72, 0x1b, 0x56, 0x56, 0x6e, 0xc1, 0x29,
	0x18, 0x98, 0x38, 0x01, 0x23, 0x72, 0xec, 0xd0, 0x2c, 0x28, 0xeb, 0xe3, 0xe7, 0xcf, 0xef, 0x95,
	0xf1, 0x2b, 0x2e, 0x04, 0xaf, 0x21, 0x61, 0xb5, 0xf8, 0x7c, 0x48, 0x0e, 0x54, 0x53, 0x46, 0x35,
	0xad, 0x05, 0x4f, 0x2e, 0x69, 0x09, 0x9a, 0xa6, 0x09, 0x67, 0xaa, 0x38, 0x56, 0x35, 0x28, 0xd0,
	0x85, 0x92, 0xc0, 0x62, 0xd9, 0x0a, 0x2d, 0x02, 0x62, 0x83, 0x71, 0x17, 0x8c, 0x07, 0xc1, 0xd8,
	0x05, 0x67, 0x4f, 0x5d, 0x35, 0x95, 0x55, 0x72, 0xac, 0xa0, 0x3e, 0x14, 0x25, 0x9c, 0xe8, 0xa5,
	0x12, 0xad, 0xad, 0x98, 0xa5, 0xa3, 0xdb, 0xba, 0x6a, 0x40, 0x69, 0xda, 0x48, 0x65, 0x23, 0xf3,
	0xaf, 0x08, 0xdf, 0xaf, 0x98, 0x7a, 0x67, 0x79, 0xb6, 0x12, 0x58, 0x10, 0xe1, 0x3b, 0x83, 0x57,
	0x48, 0xaa, 0x35, 0xb4, 0x67, 0x15, 0x22, 0xe2, 0x47, 0x93, 0xdc, 0xff, 0xf9, 0xc6, 0xdb, 0x3c,
	0x36, 0x2f, 0x6b, 0xf7, 0x10, 0x00, 0x7e, 0xa2, 0x68, 0x23, 0x6b, 0x28, 0xfa, 0x9b, 0xba, 0x83,
	0x54, 0xe8, 0x11, 0x3f, 0x9a, 0x2e, 0x5e, 0xc4, 0x63, 0x27, 0xc5, 0x6e, 0xda, 0xec, 0x9a, 0x01,
	0x7f, 0x13, 0xd8, 0xc2, 0x81, 0xae, 0xe6, 0xdf, 0x11, 0x9e, 0x0e, 0x84, 0x80, 0xe0, 0x49, 0x0f,
	0x78, 0x0a, 0x11, 0x41, 0x3d, 0xdc, 0x23, 0x07, 0x77, 0x0a, 0x3e, 0xe1, 0x7b, 0x43, 0x74, 0xbb,
	0x36, 0xf4, 0x08, 0x8a, 0xa6, 0x8b, 0xc5, 0x38, 0xd1, 0xf6, 0xaa, 0x34, 0x34, 0x1f, 0xfe, 0x25,
	0x2d, 0xd6, 0x1d, 0x67, 0xea, 0xa6, 0x05, 0x73, 0x8c, 0x55, 0xf5, 0x05, 0x8a, 0xf2, 0xaa, 0x41,
	0x85, 0x0f, 0x08, 0x8a, 0x7c, 0xeb, 0x9b, 0x18, 0x39, 0x37, 0x6a, 0xfe, 0x0b, 0xe1, 0xe7, 0x4c,
	0x34, 0xa3, 0x8b, 0x6b, 0xf4, 0xf1, 0xbd, 0xf3, 0x70, 0x51, 0xd3, 0x33, 0x8f, 0x45, 0xcb, 0x13,
	0x0e, 0xe7, 0xee, 0x83, 0x12, 0xfb, 0x44, 0x65, 0xa5, 0xfe, 0xff, 0xad, 0xaf, 0x07, 0xda, 0x1f,
	0x84, 0xbe, 0x79, 0x64, 0x65, 0x0b, 0x97, 0xdd, 0xe8, 0x5b, 0xaa, 0xe9, 0xd2, 0x8d, 0xee, 0xd2,
	0xdc, 0x24, 0x7e, 0xf4, 0x96, 0x7d, 0x67, 0xd9, 0x0f, 0x2c, 0xfb, 0x9d, 0x2d, 0xfd, 0xed, 0x3d,
	0xb3, 0x96, 0x2c, 0xeb, 0x3c, 0x59, 0x36, 0x30, 0x65, 0x99, 0x73, 0x95, 0x0f, 0x3b, 0xcc, 0x97,
	0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xc1, 0x28, 0xf4, 0x1b, 0xf8, 0x02, 0x00, 0x00,
}
