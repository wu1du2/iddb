// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/monitoring/dashboard/v1/text.proto

package dashboard

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The format type of the text content.
type Text_Format int32

const (
	// Format is unspecified. Defaults to MARKDOWN.
	Text_FORMAT_UNSPECIFIED Text_Format = 0
	// The text contains Markdown formatting.
	Text_MARKDOWN Text_Format = 1
	// The text contains no special formatting.
	Text_RAW Text_Format = 2
)

var Text_Format_name = map[int32]string{
	0: "FORMAT_UNSPECIFIED",
	1: "MARKDOWN",
	2: "RAW",
}

var Text_Format_value = map[string]int32{
	"FORMAT_UNSPECIFIED": 0,
	"MARKDOWN":           1,
	"RAW":                2,
}

func (x Text_Format) String() string {
	return proto.EnumName(Text_Format_name, int32(x))
}

func (Text_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8da82840ad79b13d, []int{0, 0}
}

// A widget that displays textual content.
type Text struct {
	// The text content to be displayed.
	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	// How the text content is formatted.
	Format               Text_Format `protobuf:"varint,2,opt,name=format,proto3,enum=google.monitoring.dashboard.v1.Text_Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Text) Reset()         { *m = Text{} }
func (m *Text) String() string { return proto.CompactTextString(m) }
func (*Text) ProtoMessage()    {}
func (*Text) Descriptor() ([]byte, []int) {
	return fileDescriptor_8da82840ad79b13d, []int{0}
}

func (m *Text) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Text.Unmarshal(m, b)
}
func (m *Text) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Text.Marshal(b, m, deterministic)
}
func (m *Text) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Text.Merge(m, src)
}
func (m *Text) XXX_Size() int {
	return xxx_messageInfo_Text.Size(m)
}
func (m *Text) XXX_DiscardUnknown() {
	xxx_messageInfo_Text.DiscardUnknown(m)
}

var xxx_messageInfo_Text proto.InternalMessageInfo

func (m *Text) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Text) GetFormat() Text_Format {
	if m != nil {
		return m.Format
	}
	return Text_FORMAT_UNSPECIFIED
}

func init() {
	proto.RegisterEnum("google.monitoring.dashboard.v1.Text_Format", Text_Format_name, Text_Format_value)
	proto.RegisterType((*Text)(nil), "google.monitoring.dashboard.v1.Text")
}

func init() {
	proto.RegisterFile("google/monitoring/dashboard/v1/text.proto", fileDescriptor_8da82840ad79b13d)
}

var fileDescriptor_8da82840ad79b13d = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4c, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0xcf, 0xcd, 0xcf, 0xcb, 0x2c, 0xc9, 0x2f, 0xca, 0xcc, 0x4b, 0xd7, 0x4f, 0x49,
	0x2c, 0xce, 0x48, 0xca, 0x4f, 0x2c, 0x4a, 0xd1, 0x2f, 0x33, 0xd4, 0x2f, 0x49, 0xad, 0x28, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x83, 0x28, 0xd5, 0x43, 0x28, 0xd5, 0x83, 0x2b, 0xd5,
	0x2b, 0x33, 0x54, 0x9a, 0xc7, 0xc8, 0xc5, 0x12, 0x92, 0x5a, 0x51, 0x22, 0x24, 0xc1, 0xc5, 0x9e,
	0x9c, 0x9f, 0x57, 0x92, 0x9a, 0x57, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0xe3, 0x0a,
	0x39, 0x73, 0xb1, 0xa5, 0xe5, 0x17, 0xe5, 0x26, 0x96, 0x48, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x19,
	0x69, 0xeb, 0xe1, 0x37, 0x53, 0x0f, 0x64, 0x9e, 0x9e, 0x1b, 0x58, 0x4b, 0x10, 0x54, 0xab, 0x92,
	0x39, 0x17, 0x1b, 0x44, 0x44, 0x48, 0x8c, 0x4b, 0xc8, 0xcd, 0x3f, 0xc8, 0xd7, 0x31, 0x24, 0x3e,
	0xd4, 0x2f, 0x38, 0xc0, 0xd5, 0xd9, 0xd3, 0xcd, 0xd3, 0xd5, 0x45, 0x80, 0x41, 0x88, 0x87, 0x8b,
	0xc3, 0xd7, 0x31, 0xc8, 0xdb, 0xc5, 0x3f, 0xdc, 0x4f, 0x80, 0x51, 0x88, 0x9d, 0x8b, 0x39, 0xc8,
	0x31, 0x5c, 0x80, 0xc9, 0x69, 0x29, 0x23, 0x97, 0x52, 0x72, 0x7e, 0x2e, 0x01, 0x3b, 0x9d, 0x38,
	0x41, 0x96, 0x06, 0x80, 0xbc, 0x1c, 0xc0, 0x18, 0xe5, 0x0e, 0x55, 0x9c, 0x9e, 0x9f, 0x93, 0x98,
	0x97, 0xae, 0x97, 0x5f, 0x94, 0xae, 0x9f, 0x9e, 0x9a, 0x07, 0x0e, 0x10, 0x7d, 0x88, 0x54, 0x62,
	0x41, 0x66, 0x31, 0xae, 0xe0, 0xb3, 0x86, 0x73, 0x5e, 0x31, 0x69, 0xb8, 0x83, 0x95, 0x5b, 0x59,
	0x39, 0xe7, 0xe4, 0x97, 0xa6, 0x58, 0x59, 0xf9, 0xc2, 0xb5, 0x58, 0x59, 0xb9, 0xc0, 0x94, 0x59,
	0x59, 0x85, 0x19, 0x26, 0xb1, 0x81, 0x8d, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x55,
	0x2a, 0xba, 0x9c, 0x01, 0x00, 0x00,
}
