// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/services/video_service.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	resources "google.golang.org/genproto/googleapis/ads/googleads/v3/resources"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for [VideoService.GetVideo][google.ads.googleads.v3.services.VideoService.GetVideo].
type GetVideoRequest struct {
	// Required. The resource name of the video to fetch.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVideoRequest) Reset()         { *m = GetVideoRequest{} }
func (m *GetVideoRequest) String() string { return proto.CompactTextString(m) }
func (*GetVideoRequest) ProtoMessage()    {}
func (*GetVideoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a293e66e60f3b801, []int{0}
}

func (m *GetVideoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVideoRequest.Unmarshal(m, b)
}
func (m *GetVideoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVideoRequest.Marshal(b, m, deterministic)
}
func (m *GetVideoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVideoRequest.Merge(m, src)
}
func (m *GetVideoRequest) XXX_Size() int {
	return xxx_messageInfo_GetVideoRequest.Size(m)
}
func (m *GetVideoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVideoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVideoRequest proto.InternalMessageInfo

func (m *GetVideoRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetVideoRequest)(nil), "google.ads.googleads.v3.services.GetVideoRequest")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/services/video_service.proto", fileDescriptor_a293e66e60f3b801)
}

var fileDescriptor_a293e66e60f3b801 = []byte{
	// 419 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x31, 0x6b, 0xdb, 0x40,
	0x14, 0x46, 0x2a, 0x94, 0x56, 0xb8, 0x94, 0x6a, 0xa9, 0xab, 0x96, 0x56, 0x18, 0x53, 0x8c, 0xa1,
	0x77, 0xb4, 0xea, 0x74, 0xa5, 0x90, 0xf3, 0xe2, 0x40, 0x20, 0x98, 0x04, 0x34, 0x04, 0x11, 0x73,
	0x96, 0x2e, 0xca, 0x81, 0xa4, 0x73, 0x74, 0xb2, 0x96, 0x90, 0x25, 0x7f, 0x21, 0xff, 0x20, 0x5b,
	0xf2, 0x53, 0xbc, 0x66, 0x08, 0x64, 0xca, 0x90, 0x29, 0xbf, 0x20, 0x64, 0x0a, 0xd2, 0xe9, 0x64,
	0x39, 0x20, 0xbc, 0x7d, 0xba, 0xef, 0xfb, 0xde, 0x7b, 0xdf, 0x7b, 0x32, 0xfe, 0x86, 0x9c, 0x87,
	0x11, 0x85, 0x24, 0x10, 0x50, 0xc2, 0x02, 0xe5, 0x0e, 0x14, 0x34, 0xcd, 0x99, 0x4f, 0x05, 0xcc,
	0x59, 0x40, 0xf9, 0xb4, 0xfa, 0x04, 0xf3, 0x94, 0x67, 0xdc, 0xb4, 0xa5, 0x14, 0x90, 0x40, 0x80,
	0xda, 0x05, 0x72, 0x07, 0x28, 0x97, 0xf5, 0xab, 0xad, 0x6e, 0x4a, 0x05, 0x5f, 0xa4, 0x75, 0x61,
	0x59, 0xd0, 0xfa, 0xa6, 0xe4, 0x73, 0x06, 0x49, 0x92, 0xf0, 0x8c, 0x64, 0x8c, 0x27, 0xa2, 0x62,
	0x3f, 0x37, 0x58, 0x3f, 0x62, 0x34, 0xc9, 0x2a, 0xe2, 0x47, 0x83, 0x38, 0x62, 0x34, 0x0a, 0xa6,
	0x33, 0x7a, 0x4c, 0x72, 0xc6, 0xd3, 0x4a, 0xf0, 0xa5, 0x21, 0x50, 0x9d, 0x25, 0xd5, 0x3b, 0x34,
	0x3e, 0x8e, 0x69, 0xe6, 0x16, 0x43, 0xec, 0xd1, 0x93, 0x05, 0x15, 0x99, 0xb9, 0x63, 0x7c, 0x50,
	0xa2, 0x69, 0x42, 0x62, 0xda, 0xd5, 0x6c, 0x6d, 0xf0, 0x7e, 0xf4, 0xf3, 0x1e, 0xeb, 0xcf, 0xd8,
	0x36, 0xbe, 0xaf, 0xa2, 0x56, 0x68, 0xce, 0x04, 0xf0, 0x79, 0x0c, 0x65, 0x95, 0x8e, 0x32, 0xef,
	0x92, 0x98, 0xfe, 0xb9, 0xd5, 0x8c, 0x4e, 0xf9, 0xbe, 0x2f, 0x77, 0x62, 0x5e, 0x69, 0xc6, 0x3b,
	0xd5, 0xd1, 0xfc, 0x0d, 0x36, 0xad, 0x10, 0xbc, 0x9a, 0xce, 0x1a, 0xb4, 0x5a, 0xea, 0x9d, 0x82,
	0xd2, 0xd0, 0xdb, 0xba, 0xc3, 0xeb, 0x41, 0xce, 0x6f, 0x1e, 0x2e, 0xf4, 0xa1, 0x39, 0x28, 0x0e,
	0x70, 0xba, 0xc6, 0xfc, 0xf7, 0x17, 0x22, 0xe3, 0x31, 0x4d, 0x05, 0x1c, 0xca, 0x8b, 0x08, 0x38,
	0x3c, 0xb3, 0xbe, 0x2e, 0x71, 0xb7, 0x2d, 0xed, 0xe8, 0x49, 0x33, 0xfa, 0x3e, 0x8f, 0x37, 0x26,
	0x18, 0x7d, 0x6a, 0xe6, 0x9f, 0x14, 0x5b, 0x9f, 0x68, 0x07, 0xdb, 0x95, 0x2d, 0xe4, 0x11, 0x49,
	0x42, 0xc0, 0xd3, 0x10, 0x86, 0x34, 0x29, 0x6f, 0x02, 0x57, 0x8d, 0xda, 0x7f, 0xc8, 0x7f, 0x0a,
	0x5c, 0xea, 0x6f, 0xc6, 0x18, 0x5f, 0xeb, 0xf6, 0x58, 0x16, 0xc4, 0x81, 0x00, 0x12, 0x16, 0xc8,
	0x75, 0x40, 0xd5, 0x58, 0x2c, 0x95, 0xc4, 0xc3, 0x81, 0xf0, 0x6a, 0x89, 0xe7, 0x3a, 0x9e, 0x92,
	0x3c, 0xea, 0x7d, 0xf9, 0x8e, 0x10, 0x0e, 0x04, 0x42, 0xb5, 0x08, 0x21, 0xd7, 0x41, 0x48, 0xc9,
	0x66, 0x6f, 0xcb, 0x39, 0x9d, 0x97, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xc3, 0xf8, 0x9b, 0x37,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// VideoServiceClient is the client API for VideoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VideoServiceClient interface {
	// Returns the requested video in full detail.
	GetVideo(ctx context.Context, in *GetVideoRequest, opts ...grpc.CallOption) (*resources.Video, error)
}

type videoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewVideoServiceClient(cc grpc.ClientConnInterface) VideoServiceClient {
	return &videoServiceClient{cc}
}

func (c *videoServiceClient) GetVideo(ctx context.Context, in *GetVideoRequest, opts ...grpc.CallOption) (*resources.Video, error) {
	out := new(resources.Video)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v3.services.VideoService/GetVideo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VideoServiceServer is the server API for VideoService service.
type VideoServiceServer interface {
	// Returns the requested video in full detail.
	GetVideo(context.Context, *GetVideoRequest) (*resources.Video, error)
}

// UnimplementedVideoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedVideoServiceServer struct {
}

func (*UnimplementedVideoServiceServer) GetVideo(ctx context.Context, req *GetVideoRequest) (*resources.Video, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVideo not implemented")
}

func RegisterVideoServiceServer(s *grpc.Server, srv VideoServiceServer) {
	s.RegisterService(&_VideoService_serviceDesc, srv)
}

func _VideoService_GetVideo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVideoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VideoServiceServer).GetVideo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v3.services.VideoService/GetVideo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VideoServiceServer).GetVideo(ctx, req.(*GetVideoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VideoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v3.services.VideoService",
	HandlerType: (*VideoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetVideo",
			Handler:    _VideoService_GetVideo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v3/services/video_service.proto",
}
