// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/errors/errors.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	common "google.golang.org/genproto/googleapis/ads/googleads/v3/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Describes how a GoogleAds API call failed. It's returned inside
// google.rpc.Status.details when a call fails.
type GoogleAdsFailure struct {
	// The list of errors that occurred.
	Errors               []*GoogleAdsError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GoogleAdsFailure) Reset()         { *m = GoogleAdsFailure{} }
func (m *GoogleAdsFailure) String() string { return proto.CompactTextString(m) }
func (*GoogleAdsFailure) ProtoMessage()    {}
func (*GoogleAdsFailure) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{0}
}

func (m *GoogleAdsFailure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleAdsFailure.Unmarshal(m, b)
}
func (m *GoogleAdsFailure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleAdsFailure.Marshal(b, m, deterministic)
}
func (m *GoogleAdsFailure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleAdsFailure.Merge(m, src)
}
func (m *GoogleAdsFailure) XXX_Size() int {
	return xxx_messageInfo_GoogleAdsFailure.Size(m)
}
func (m *GoogleAdsFailure) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleAdsFailure.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleAdsFailure proto.InternalMessageInfo

func (m *GoogleAdsFailure) GetErrors() []*GoogleAdsError {
	if m != nil {
		return m.Errors
	}
	return nil
}

// GoogleAds-specific error.
type GoogleAdsError struct {
	// An enum value that indicates which error occurred.
	ErrorCode *ErrorCode `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// A human-readable description of the error.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The value that triggered the error.
	Trigger *common.Value `protobuf:"bytes,3,opt,name=trigger,proto3" json:"trigger,omitempty"`
	// Describes the part of the request proto that caused the error.
	Location *ErrorLocation `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	// Additional error details, which are returned by certain error codes. Most
	// error codes do not include details.
	Details              *ErrorDetails `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GoogleAdsError) Reset()         { *m = GoogleAdsError{} }
func (m *GoogleAdsError) String() string { return proto.CompactTextString(m) }
func (*GoogleAdsError) ProtoMessage()    {}
func (*GoogleAdsError) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{1}
}

func (m *GoogleAdsError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoogleAdsError.Unmarshal(m, b)
}
func (m *GoogleAdsError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoogleAdsError.Marshal(b, m, deterministic)
}
func (m *GoogleAdsError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoogleAdsError.Merge(m, src)
}
func (m *GoogleAdsError) XXX_Size() int {
	return xxx_messageInfo_GoogleAdsError.Size(m)
}
func (m *GoogleAdsError) XXX_DiscardUnknown() {
	xxx_messageInfo_GoogleAdsError.DiscardUnknown(m)
}

var xxx_messageInfo_GoogleAdsError proto.InternalMessageInfo

func (m *GoogleAdsError) GetErrorCode() *ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return nil
}

func (m *GoogleAdsError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GoogleAdsError) GetTrigger() *common.Value {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *GoogleAdsError) GetLocation() *ErrorLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *GoogleAdsError) GetDetails() *ErrorDetails {
	if m != nil {
		return m.Details
	}
	return nil
}

// The error reason represented by type and enum.
type ErrorCode struct {
	// The list of error enums
	//
	// Types that are valid to be assigned to ErrorCode:
	//	*ErrorCode_RequestError
	//	*ErrorCode_BiddingStrategyError
	//	*ErrorCode_UrlFieldError
	//	*ErrorCode_ListOperationError
	//	*ErrorCode_QueryError
	//	*ErrorCode_MutateError
	//	*ErrorCode_FieldMaskError
	//	*ErrorCode_AuthorizationError
	//	*ErrorCode_InternalError
	//	*ErrorCode_QuotaError
	//	*ErrorCode_AdError
	//	*ErrorCode_AdGroupError
	//	*ErrorCode_CampaignBudgetError
	//	*ErrorCode_CampaignError
	//	*ErrorCode_AuthenticationError
	//	*ErrorCode_AdGroupCriterionError
	//	*ErrorCode_AdCustomizerError
	//	*ErrorCode_AdGroupAdError
	//	*ErrorCode_AdSharingError
	//	*ErrorCode_AdxError
	//	*ErrorCode_AssetError
	//	*ErrorCode_BiddingError
	//	*ErrorCode_CampaignCriterionError
	//	*ErrorCode_CollectionSizeError
	//	*ErrorCode_CountryCodeError
	//	*ErrorCode_CriterionError
	//	*ErrorCode_CustomerError
	//	*ErrorCode_DateError
	//	*ErrorCode_DateRangeError
	//	*ErrorCode_DistinctError
	//	*ErrorCode_FeedAttributeReferenceError
	//	*ErrorCode_FunctionError
	//	*ErrorCode_FunctionParsingError
	//	*ErrorCode_IdError
	//	*ErrorCode_ImageError
	//	*ErrorCode_LanguageCodeError
	//	*ErrorCode_MediaBundleError
	//	*ErrorCode_MediaUploadError
	//	*ErrorCode_MediaFileError
	//	*ErrorCode_MultiplierError
	//	*ErrorCode_NewResourceCreationError
	//	*ErrorCode_NotEmptyError
	//	*ErrorCode_NullError
	//	*ErrorCode_OperatorError
	//	*ErrorCode_RangeError
	//	*ErrorCode_RecommendationError
	//	*ErrorCode_RegionCodeError
	//	*ErrorCode_SettingError
	//	*ErrorCode_StringFormatError
	//	*ErrorCode_StringLengthError
	//	*ErrorCode_OperationAccessDeniedError
	//	*ErrorCode_ResourceAccessDeniedError
	//	*ErrorCode_ResourceCountLimitExceededError
	//	*ErrorCode_YoutubeVideoRegistrationError
	//	*ErrorCode_AdGroupBidModifierError
	//	*ErrorCode_ContextError
	//	*ErrorCode_FieldError
	//	*ErrorCode_SharedSetError
	//	*ErrorCode_SharedCriterionError
	//	*ErrorCode_CampaignSharedSetError
	//	*ErrorCode_ConversionActionError
	//	*ErrorCode_ConversionAdjustmentUploadError
	//	*ErrorCode_ConversionUploadError
	//	*ErrorCode_HeaderError
	//	*ErrorCode_DatabaseError
	//	*ErrorCode_PolicyFindingError
	//	*ErrorCode_EnumError
	//	*ErrorCode_KeywordPlanError
	//	*ErrorCode_KeywordPlanCampaignError
	//	*ErrorCode_KeywordPlanNegativeKeywordError
	//	*ErrorCode_KeywordPlanAdGroupError
	//	*ErrorCode_KeywordPlanKeywordError
	//	*ErrorCode_KeywordPlanIdeaError
	//	*ErrorCode_AccountBudgetProposalError
	//	*ErrorCode_UserListError
	//	*ErrorCode_ChangeStatusError
	//	*ErrorCode_FeedError
	//	*ErrorCode_GeoTargetConstantSuggestionError
	//	*ErrorCode_CampaignDraftError
	//	*ErrorCode_FeedItemError
	//	*ErrorCode_LabelError
	//	*ErrorCode_BillingSetupError
	//	*ErrorCode_CustomerClientLinkError
	//	*ErrorCode_CustomerManagerLinkError
	//	*ErrorCode_FeedMappingError
	//	*ErrorCode_CustomerFeedError
	//	*ErrorCode_AdGroupFeedError
	//	*ErrorCode_CampaignFeedError
	//	*ErrorCode_CustomInterestError
	//	*ErrorCode_CampaignExperimentError
	//	*ErrorCode_ExtensionFeedItemError
	//	*ErrorCode_AdParameterError
	//	*ErrorCode_FeedItemValidationError
	//	*ErrorCode_ExtensionSettingError
	//	*ErrorCode_FeedItemTargetError
	//	*ErrorCode_PolicyViolationError
	//	*ErrorCode_MutateJobError
	//	*ErrorCode_PartialFailureError
	//	*ErrorCode_PolicyValidationParameterError
	//	*ErrorCode_SizeLimitError
	//	*ErrorCode_OfflineUserDataJobError
	//	*ErrorCode_NotWhitelistedError
	//	*ErrorCode_ManagerLinkError
	//	*ErrorCode_CurrencyCodeError
	//	*ErrorCode_AccessInvitationError
	//	*ErrorCode_ReachPlanError
	//	*ErrorCode_InvoiceError
	//	*ErrorCode_PaymentsAccountError
	//	*ErrorCode_TimeZoneError
	//	*ErrorCode_AssetLinkError
	//	*ErrorCode_UserDataError
	ErrorCode            isErrorCode_ErrorCode `protobuf_oneof:"error_code"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ErrorCode) Reset()         { *m = ErrorCode{} }
func (m *ErrorCode) String() string { return proto.CompactTextString(m) }
func (*ErrorCode) ProtoMessage()    {}
func (*ErrorCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{2}
}

func (m *ErrorCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorCode.Unmarshal(m, b)
}
func (m *ErrorCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorCode.Marshal(b, m, deterministic)
}
func (m *ErrorCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorCode.Merge(m, src)
}
func (m *ErrorCode) XXX_Size() int {
	return xxx_messageInfo_ErrorCode.Size(m)
}
func (m *ErrorCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorCode.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorCode proto.InternalMessageInfo

type isErrorCode_ErrorCode interface {
	isErrorCode_ErrorCode()
}

type ErrorCode_RequestError struct {
	RequestError RequestErrorEnum_RequestError `protobuf:"varint,1,opt,name=request_error,json=requestError,proto3,enum=google.ads.googleads.v3.errors.RequestErrorEnum_RequestError,oneof"`
}

type ErrorCode_BiddingStrategyError struct {
	BiddingStrategyError BiddingStrategyErrorEnum_BiddingStrategyError `protobuf:"varint,2,opt,name=bidding_strategy_error,json=biddingStrategyError,proto3,enum=google.ads.googleads.v3.errors.BiddingStrategyErrorEnum_BiddingStrategyError,oneof"`
}

type ErrorCode_UrlFieldError struct {
	UrlFieldError UrlFieldErrorEnum_UrlFieldError `protobuf:"varint,3,opt,name=url_field_error,json=urlFieldError,proto3,enum=google.ads.googleads.v3.errors.UrlFieldErrorEnum_UrlFieldError,oneof"`
}

type ErrorCode_ListOperationError struct {
	ListOperationError ListOperationErrorEnum_ListOperationError `protobuf:"varint,4,opt,name=list_operation_error,json=listOperationError,proto3,enum=google.ads.googleads.v3.errors.ListOperationErrorEnum_ListOperationError,oneof"`
}

type ErrorCode_QueryError struct {
	QueryError QueryErrorEnum_QueryError `protobuf:"varint,5,opt,name=query_error,json=queryError,proto3,enum=google.ads.googleads.v3.errors.QueryErrorEnum_QueryError,oneof"`
}

type ErrorCode_MutateError struct {
	MutateError MutateErrorEnum_MutateError `protobuf:"varint,7,opt,name=mutate_error,json=mutateError,proto3,enum=google.ads.googleads.v3.errors.MutateErrorEnum_MutateError,oneof"`
}

type ErrorCode_FieldMaskError struct {
	FieldMaskError FieldMaskErrorEnum_FieldMaskError `protobuf:"varint,8,opt,name=field_mask_error,json=fieldMaskError,proto3,enum=google.ads.googleads.v3.errors.FieldMaskErrorEnum_FieldMaskError,oneof"`
}

type ErrorCode_AuthorizationError struct {
	AuthorizationError AuthorizationErrorEnum_AuthorizationError `protobuf:"varint,9,opt,name=authorization_error,json=authorizationError,proto3,enum=google.ads.googleads.v3.errors.AuthorizationErrorEnum_AuthorizationError,oneof"`
}

type ErrorCode_InternalError struct {
	InternalError InternalErrorEnum_InternalError `protobuf:"varint,10,opt,name=internal_error,json=internalError,proto3,enum=google.ads.googleads.v3.errors.InternalErrorEnum_InternalError,oneof"`
}

type ErrorCode_QuotaError struct {
	QuotaError QuotaErrorEnum_QuotaError `protobuf:"varint,11,opt,name=quota_error,json=quotaError,proto3,enum=google.ads.googleads.v3.errors.QuotaErrorEnum_QuotaError,oneof"`
}

type ErrorCode_AdError struct {
	AdError AdErrorEnum_AdError `protobuf:"varint,12,opt,name=ad_error,json=adError,proto3,enum=google.ads.googleads.v3.errors.AdErrorEnum_AdError,oneof"`
}

type ErrorCode_AdGroupError struct {
	AdGroupError AdGroupErrorEnum_AdGroupError `protobuf:"varint,13,opt,name=ad_group_error,json=adGroupError,proto3,enum=google.ads.googleads.v3.errors.AdGroupErrorEnum_AdGroupError,oneof"`
}

type ErrorCode_CampaignBudgetError struct {
	CampaignBudgetError CampaignBudgetErrorEnum_CampaignBudgetError `protobuf:"varint,14,opt,name=campaign_budget_error,json=campaignBudgetError,proto3,enum=google.ads.googleads.v3.errors.CampaignBudgetErrorEnum_CampaignBudgetError,oneof"`
}

type ErrorCode_CampaignError struct {
	CampaignError CampaignErrorEnum_CampaignError `protobuf:"varint,15,opt,name=campaign_error,json=campaignError,proto3,enum=google.ads.googleads.v3.errors.CampaignErrorEnum_CampaignError,oneof"`
}

type ErrorCode_AuthenticationError struct {
	AuthenticationError AuthenticationErrorEnum_AuthenticationError `protobuf:"varint,17,opt,name=authentication_error,json=authenticationError,proto3,enum=google.ads.googleads.v3.errors.AuthenticationErrorEnum_AuthenticationError,oneof"`
}

type ErrorCode_AdGroupCriterionError struct {
	AdGroupCriterionError AdGroupCriterionErrorEnum_AdGroupCriterionError `protobuf:"varint,18,opt,name=ad_group_criterion_error,json=adGroupCriterionError,proto3,enum=google.ads.googleads.v3.errors.AdGroupCriterionErrorEnum_AdGroupCriterionError,oneof"`
}

type ErrorCode_AdCustomizerError struct {
	AdCustomizerError AdCustomizerErrorEnum_AdCustomizerError `protobuf:"varint,19,opt,name=ad_customizer_error,json=adCustomizerError,proto3,enum=google.ads.googleads.v3.errors.AdCustomizerErrorEnum_AdCustomizerError,oneof"`
}

type ErrorCode_AdGroupAdError struct {
	AdGroupAdError AdGroupAdErrorEnum_AdGroupAdError `protobuf:"varint,21,opt,name=ad_group_ad_error,json=adGroupAdError,proto3,enum=google.ads.googleads.v3.errors.AdGroupAdErrorEnum_AdGroupAdError,oneof"`
}

type ErrorCode_AdSharingError struct {
	AdSharingError AdSharingErrorEnum_AdSharingError `protobuf:"varint,24,opt,name=ad_sharing_error,json=adSharingError,proto3,enum=google.ads.googleads.v3.errors.AdSharingErrorEnum_AdSharingError,oneof"`
}

type ErrorCode_AdxError struct {
	AdxError AdxErrorEnum_AdxError `protobuf:"varint,25,opt,name=adx_error,json=adxError,proto3,enum=google.ads.googleads.v3.errors.AdxErrorEnum_AdxError,oneof"`
}

type ErrorCode_AssetError struct {
	AssetError AssetErrorEnum_AssetError `protobuf:"varint,107,opt,name=asset_error,json=assetError,proto3,enum=google.ads.googleads.v3.errors.AssetErrorEnum_AssetError,oneof"`
}

type ErrorCode_BiddingError struct {
	BiddingError BiddingErrorEnum_BiddingError `protobuf:"varint,26,opt,name=bidding_error,json=biddingError,proto3,enum=google.ads.googleads.v3.errors.BiddingErrorEnum_BiddingError,oneof"`
}

type ErrorCode_CampaignCriterionError struct {
	CampaignCriterionError CampaignCriterionErrorEnum_CampaignCriterionError `protobuf:"varint,29,opt,name=campaign_criterion_error,json=campaignCriterionError,proto3,enum=google.ads.googleads.v3.errors.CampaignCriterionErrorEnum_CampaignCriterionError,oneof"`
}

type ErrorCode_CollectionSizeError struct {
	CollectionSizeError CollectionSizeErrorEnum_CollectionSizeError `protobuf:"varint,31,opt,name=collection_size_error,json=collectionSizeError,proto3,enum=google.ads.googleads.v3.errors.CollectionSizeErrorEnum_CollectionSizeError,oneof"`
}

type ErrorCode_CountryCodeError struct {
	CountryCodeError CountryCodeErrorEnum_CountryCodeError `protobuf:"varint,109,opt,name=country_code_error,json=countryCodeError,proto3,enum=google.ads.googleads.v3.errors.CountryCodeErrorEnum_CountryCodeError,oneof"`
}

type ErrorCode_CriterionError struct {
	CriterionError CriterionErrorEnum_CriterionError `protobuf:"varint,32,opt,name=criterion_error,json=criterionError,proto3,enum=google.ads.googleads.v3.errors.CriterionErrorEnum_CriterionError,oneof"`
}

type ErrorCode_CustomerError struct {
	CustomerError CustomerErrorEnum_CustomerError `protobuf:"varint,90,opt,name=customer_error,json=customerError,proto3,enum=google.ads.googleads.v3.errors.CustomerErrorEnum_CustomerError,oneof"`
}

type ErrorCode_DateError struct {
	DateError DateErrorEnum_DateError `protobuf:"varint,33,opt,name=date_error,json=dateError,proto3,enum=google.ads.googleads.v3.errors.DateErrorEnum_DateError,oneof"`
}

type ErrorCode_DateRangeError struct {
	DateRangeError DateRangeErrorEnum_DateRangeError `protobuf:"varint,34,opt,name=date_range_error,json=dateRangeError,proto3,enum=google.ads.googleads.v3.errors.DateRangeErrorEnum_DateRangeError,oneof"`
}

type ErrorCode_DistinctError struct {
	DistinctError DistinctErrorEnum_DistinctError `protobuf:"varint,35,opt,name=distinct_error,json=distinctError,proto3,enum=google.ads.googleads.v3.errors.DistinctErrorEnum_DistinctError,oneof"`
}

type ErrorCode_FeedAttributeReferenceError struct {
	FeedAttributeReferenceError FeedAttributeReferenceErrorEnum_FeedAttributeReferenceError `protobuf:"varint,36,opt,name=feed_attribute_reference_error,json=feedAttributeReferenceError,proto3,enum=google.ads.googleads.v3.errors.FeedAttributeReferenceErrorEnum_FeedAttributeReferenceError,oneof"`
}

type ErrorCode_FunctionError struct {
	FunctionError FunctionErrorEnum_FunctionError `protobuf:"varint,37,opt,name=function_error,json=functionError,proto3,enum=google.ads.googleads.v3.errors.FunctionErrorEnum_FunctionError,oneof"`
}

type ErrorCode_FunctionParsingError struct {
	FunctionParsingError FunctionParsingErrorEnum_FunctionParsingError `protobuf:"varint,38,opt,name=function_parsing_error,json=functionParsingError,proto3,enum=google.ads.googleads.v3.errors.FunctionParsingErrorEnum_FunctionParsingError,oneof"`
}

type ErrorCode_IdError struct {
	IdError IdErrorEnum_IdError `protobuf:"varint,39,opt,name=id_error,json=idError,proto3,enum=google.ads.googleads.v3.errors.IdErrorEnum_IdError,oneof"`
}

type ErrorCode_ImageError struct {
	ImageError ImageErrorEnum_ImageError `protobuf:"varint,40,opt,name=image_error,json=imageError,proto3,enum=google.ads.googleads.v3.errors.ImageErrorEnum_ImageError,oneof"`
}

type ErrorCode_LanguageCodeError struct {
	LanguageCodeError LanguageCodeErrorEnum_LanguageCodeError `protobuf:"varint,110,opt,name=language_code_error,json=languageCodeError,proto3,enum=google.ads.googleads.v3.errors.LanguageCodeErrorEnum_LanguageCodeError,oneof"`
}

type ErrorCode_MediaBundleError struct {
	MediaBundleError MediaBundleErrorEnum_MediaBundleError `protobuf:"varint,42,opt,name=media_bundle_error,json=mediaBundleError,proto3,enum=google.ads.googleads.v3.errors.MediaBundleErrorEnum_MediaBundleError,oneof"`
}

type ErrorCode_MediaUploadError struct {
	MediaUploadError MediaUploadErrorEnum_MediaUploadError `protobuf:"varint,116,opt,name=media_upload_error,json=mediaUploadError,proto3,enum=google.ads.googleads.v3.errors.MediaUploadErrorEnum_MediaUploadError,oneof"`
}

type ErrorCode_MediaFileError struct {
	MediaFileError MediaFileErrorEnum_MediaFileError `protobuf:"varint,86,opt,name=media_file_error,json=mediaFileError,proto3,enum=google.ads.googleads.v3.errors.MediaFileErrorEnum_MediaFileError,oneof"`
}

type ErrorCode_MultiplierError struct {
	MultiplierError MultiplierErrorEnum_MultiplierError `protobuf:"varint,44,opt,name=multiplier_error,json=multiplierError,proto3,enum=google.ads.googleads.v3.errors.MultiplierErrorEnum_MultiplierError,oneof"`
}

type ErrorCode_NewResourceCreationError struct {
	NewResourceCreationError NewResourceCreationErrorEnum_NewResourceCreationError `protobuf:"varint,45,opt,name=new_resource_creation_error,json=newResourceCreationError,proto3,enum=google.ads.googleads.v3.errors.NewResourceCreationErrorEnum_NewResourceCreationError,oneof"`
}

type ErrorCode_NotEmptyError struct {
	NotEmptyError NotEmptyErrorEnum_NotEmptyError `protobuf:"varint,46,opt,name=not_empty_error,json=notEmptyError,proto3,enum=google.ads.googleads.v3.errors.NotEmptyErrorEnum_NotEmptyError,oneof"`
}

type ErrorCode_NullError struct {
	NullError NullErrorEnum_NullError `protobuf:"varint,47,opt,name=null_error,json=nullError,proto3,enum=google.ads.googleads.v3.errors.NullErrorEnum_NullError,oneof"`
}

type ErrorCode_OperatorError struct {
	OperatorError OperatorErrorEnum_OperatorError `protobuf:"varint,48,opt,name=operator_error,json=operatorError,proto3,enum=google.ads.googleads.v3.errors.OperatorErrorEnum_OperatorError,oneof"`
}

type ErrorCode_RangeError struct {
	RangeError RangeErrorEnum_RangeError `protobuf:"varint,49,opt,name=range_error,json=rangeError,proto3,enum=google.ads.googleads.v3.errors.RangeErrorEnum_RangeError,oneof"`
}

type ErrorCode_RecommendationError struct {
	RecommendationError RecommendationErrorEnum_RecommendationError `protobuf:"varint,58,opt,name=recommendation_error,json=recommendationError,proto3,enum=google.ads.googleads.v3.errors.RecommendationErrorEnum_RecommendationError,oneof"`
}

type ErrorCode_RegionCodeError struct {
	RegionCodeError RegionCodeErrorEnum_RegionCodeError `protobuf:"varint,51,opt,name=region_code_error,json=regionCodeError,proto3,enum=google.ads.googleads.v3.errors.RegionCodeErrorEnum_RegionCodeError,oneof"`
}

type ErrorCode_SettingError struct {
	SettingError SettingErrorEnum_SettingError `protobuf:"varint,52,opt,name=setting_error,json=settingError,proto3,enum=google.ads.googleads.v3.errors.SettingErrorEnum_SettingError,oneof"`
}

type ErrorCode_StringFormatError struct {
	StringFormatError StringFormatErrorEnum_StringFormatError `protobuf:"varint,53,opt,name=string_format_error,json=stringFormatError,proto3,enum=google.ads.googleads.v3.errors.StringFormatErrorEnum_StringFormatError,oneof"`
}

type ErrorCode_StringLengthError struct {
	StringLengthError StringLengthErrorEnum_StringLengthError `protobuf:"varint,54,opt,name=string_length_error,json=stringLengthError,proto3,enum=google.ads.googleads.v3.errors.StringLengthErrorEnum_StringLengthError,oneof"`
}

type ErrorCode_OperationAccessDeniedError struct {
	OperationAccessDeniedError OperationAccessDeniedErrorEnum_OperationAccessDeniedError `protobuf:"varint,55,opt,name=operation_access_denied_error,json=operationAccessDeniedError,proto3,enum=google.ads.googleads.v3.errors.OperationAccessDeniedErrorEnum_OperationAccessDeniedError,oneof"`
}

type ErrorCode_ResourceAccessDeniedError struct {
	ResourceAccessDeniedError ResourceAccessDeniedErrorEnum_ResourceAccessDeniedError `protobuf:"varint,56,opt,name=resource_access_denied_error,json=resourceAccessDeniedError,proto3,enum=google.ads.googleads.v3.errors.ResourceAccessDeniedErrorEnum_ResourceAccessDeniedError,oneof"`
}

type ErrorCode_ResourceCountLimitExceededError struct {
	ResourceCountLimitExceededError ResourceCountLimitExceededErrorEnum_ResourceCountLimitExceededError `protobuf:"varint,57,opt,name=resource_count_limit_exceeded_error,json=resourceCountLimitExceededError,proto3,enum=google.ads.googleads.v3.errors.ResourceCountLimitExceededErrorEnum_ResourceCountLimitExceededError,oneof"`
}

type ErrorCode_YoutubeVideoRegistrationError struct {
	YoutubeVideoRegistrationError YoutubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationError `protobuf:"varint,117,opt,name=youtube_video_registration_error,json=youtubeVideoRegistrationError,proto3,enum=google.ads.googleads.v3.errors.YoutubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationError,oneof"`
}

type ErrorCode_AdGroupBidModifierError struct {
	AdGroupBidModifierError AdGroupBidModifierErrorEnum_AdGroupBidModifierError `protobuf:"varint,59,opt,name=ad_group_bid_modifier_error,json=adGroupBidModifierError,proto3,enum=google.ads.googleads.v3.errors.AdGroupBidModifierErrorEnum_AdGroupBidModifierError,oneof"`
}

type ErrorCode_ContextError struct {
	ContextError ContextErrorEnum_ContextError `protobuf:"varint,60,opt,name=context_error,json=contextError,proto3,enum=google.ads.googleads.v3.errors.ContextErrorEnum_ContextError,oneof"`
}

type ErrorCode_FieldError struct {
	FieldError FieldErrorEnum_FieldError `protobuf:"varint,61,opt,name=field_error,json=fieldError,proto3,enum=google.ads.googleads.v3.errors.FieldErrorEnum_FieldError,oneof"`
}

type ErrorCode_SharedSetError struct {
	SharedSetError SharedSetErrorEnum_SharedSetError `protobuf:"varint,62,opt,name=shared_set_error,json=sharedSetError,proto3,enum=google.ads.googleads.v3.errors.SharedSetErrorEnum_SharedSetError,oneof"`
}

type ErrorCode_SharedCriterionError struct {
	SharedCriterionError SharedCriterionErrorEnum_SharedCriterionError `protobuf:"varint,63,opt,name=shared_criterion_error,json=sharedCriterionError,proto3,enum=google.ads.googleads.v3.errors.SharedCriterionErrorEnum_SharedCriterionError,oneof"`
}

type ErrorCode_CampaignSharedSetError struct {
	CampaignSharedSetError CampaignSharedSetErrorEnum_CampaignSharedSetError `protobuf:"varint,64,opt,name=campaign_shared_set_error,json=campaignSharedSetError,proto3,enum=google.ads.googleads.v3.errors.CampaignSharedSetErrorEnum_CampaignSharedSetError,oneof"`
}

type ErrorCode_ConversionActionError struct {
	ConversionActionError ConversionActionErrorEnum_ConversionActionError `protobuf:"varint,65,opt,name=conversion_action_error,json=conversionActionError,proto3,enum=google.ads.googleads.v3.errors.ConversionActionErrorEnum_ConversionActionError,oneof"`
}

type ErrorCode_ConversionAdjustmentUploadError struct {
	ConversionAdjustmentUploadError ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError `protobuf:"varint,115,opt,name=conversion_adjustment_upload_error,json=conversionAdjustmentUploadError,proto3,enum=google.ads.googleads.v3.errors.ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError,oneof"`
}

type ErrorCode_ConversionUploadError struct {
	ConversionUploadError ConversionUploadErrorEnum_ConversionUploadError `protobuf:"varint,111,opt,name=conversion_upload_error,json=conversionUploadError,proto3,enum=google.ads.googleads.v3.errors.ConversionUploadErrorEnum_ConversionUploadError,oneof"`
}

type ErrorCode_HeaderError struct {
	HeaderError HeaderErrorEnum_HeaderError `protobuf:"varint,66,opt,name=header_error,json=headerError,proto3,enum=google.ads.googleads.v3.errors.HeaderErrorEnum_HeaderError,oneof"`
}

type ErrorCode_DatabaseError struct {
	DatabaseError DatabaseErrorEnum_DatabaseError `protobuf:"varint,67,opt,name=database_error,json=databaseError,proto3,enum=google.ads.googleads.v3.errors.DatabaseErrorEnum_DatabaseError,oneof"`
}

type ErrorCode_PolicyFindingError struct {
	PolicyFindingError PolicyFindingErrorEnum_PolicyFindingError `protobuf:"varint,68,opt,name=policy_finding_error,json=policyFindingError,proto3,enum=google.ads.googleads.v3.errors.PolicyFindingErrorEnum_PolicyFindingError,oneof"`
}

type ErrorCode_EnumError struct {
	EnumError EnumErrorEnum_EnumError `protobuf:"varint,70,opt,name=enum_error,json=enumError,proto3,enum=google.ads.googleads.v3.errors.EnumErrorEnum_EnumError,oneof"`
}

type ErrorCode_KeywordPlanError struct {
	KeywordPlanError KeywordPlanErrorEnum_KeywordPlanError `protobuf:"varint,71,opt,name=keyword_plan_error,json=keywordPlanError,proto3,enum=google.ads.googleads.v3.errors.KeywordPlanErrorEnum_KeywordPlanError,oneof"`
}

type ErrorCode_KeywordPlanCampaignError struct {
	KeywordPlanCampaignError KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError `protobuf:"varint,72,opt,name=keyword_plan_campaign_error,json=keywordPlanCampaignError,proto3,enum=google.ads.googleads.v3.errors.KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError,oneof"`
}

type ErrorCode_KeywordPlanNegativeKeywordError struct {
	KeywordPlanNegativeKeywordError KeywordPlanNegativeKeywordErrorEnum_KeywordPlanNegativeKeywordError `protobuf:"varint,73,opt,name=keyword_plan_negative_keyword_error,json=keywordPlanNegativeKeywordError,proto3,enum=google.ads.googleads.v3.errors.KeywordPlanNegativeKeywordErrorEnum_KeywordPlanNegativeKeywordError,oneof"`
}

type ErrorCode_KeywordPlanAdGroupError struct {
	KeywordPlanAdGroupError KeywordPlanAdGroupErrorEnum_KeywordPlanAdGroupError `protobuf:"varint,74,opt,name=keyword_plan_ad_group_error,json=keywordPlanAdGroupError,proto3,enum=google.ads.googleads.v3.errors.KeywordPlanAdGroupErrorEnum_KeywordPlanAdGroupError,oneof"`
}

type ErrorCode_KeywordPlanKeywordError struct {
	KeywordPlanKeywordError KeywordPlanKeywordErrorEnum_KeywordPlanKeywordError `protobuf:"varint,75,opt,name=keyword_plan_keyword_error,json=keywordPlanKeywordError,proto3,enum=google.ads.googleads.v3.errors.KeywordPlanKeywordErrorEnum_KeywordPlanKeywordError,oneof"`
}

type ErrorCode_KeywordPlanIdeaError struct {
	KeywordPlanIdeaError KeywordPlanIdeaErrorEnum_KeywordPlanIdeaError `protobuf:"varint,76,opt,name=keyword_plan_idea_error,json=keywordPlanIdeaError,proto3,enum=google.ads.googleads.v3.errors.KeywordPlanIdeaErrorEnum_KeywordPlanIdeaError,oneof"`
}

type ErrorCode_AccountBudgetProposalError struct {
	AccountBudgetProposalError AccountBudgetProposalErrorEnum_AccountBudgetProposalError `protobuf:"varint,77,opt,name=account_budget_proposal_error,json=accountBudgetProposalError,proto3,enum=google.ads.googleads.v3.errors.AccountBudgetProposalErrorEnum_AccountBudgetProposalError,oneof"`
}

type ErrorCode_UserListError struct {
	UserListError UserListErrorEnum_UserListError `protobuf:"varint,78,opt,name=user_list_error,json=userListError,proto3,enum=google.ads.googleads.v3.errors.UserListErrorEnum_UserListError,oneof"`
}

type ErrorCode_ChangeStatusError struct {
	ChangeStatusError ChangeStatusErrorEnum_ChangeStatusError `protobuf:"varint,79,opt,name=change_status_error,json=changeStatusError,proto3,enum=google.ads.googleads.v3.errors.ChangeStatusErrorEnum_ChangeStatusError,oneof"`
}

type ErrorCode_FeedError struct {
	FeedError FeedErrorEnum_FeedError `protobuf:"varint,80,opt,name=feed_error,json=feedError,proto3,enum=google.ads.googleads.v3.errors.FeedErrorEnum_FeedError,oneof"`
}

type ErrorCode_GeoTargetConstantSuggestionError struct {
	GeoTargetConstantSuggestionError GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError `protobuf:"varint,81,opt,name=geo_target_constant_suggestion_error,json=geoTargetConstantSuggestionError,proto3,enum=google.ads.googleads.v3.errors.GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError,oneof"`
}

type ErrorCode_CampaignDraftError struct {
	CampaignDraftError CampaignDraftErrorEnum_CampaignDraftError `protobuf:"varint,82,opt,name=campaign_draft_error,json=campaignDraftError,proto3,enum=google.ads.googleads.v3.errors.CampaignDraftErrorEnum_CampaignDraftError,oneof"`
}

type ErrorCode_FeedItemError struct {
	FeedItemError FeedItemErrorEnum_FeedItemError `protobuf:"varint,83,opt,name=feed_item_error,json=feedItemError,proto3,enum=google.ads.googleads.v3.errors.FeedItemErrorEnum_FeedItemError,oneof"`
}

type ErrorCode_LabelError struct {
	LabelError LabelErrorEnum_LabelError `protobuf:"varint,84,opt,name=label_error,json=labelError,proto3,enum=google.ads.googleads.v3.errors.LabelErrorEnum_LabelError,oneof"`
}

type ErrorCode_BillingSetupError struct {
	BillingSetupError BillingSetupErrorEnum_BillingSetupError `protobuf:"varint,87,opt,name=billing_setup_error,json=billingSetupError,proto3,enum=google.ads.googleads.v3.errors.BillingSetupErrorEnum_BillingSetupError,oneof"`
}

type ErrorCode_CustomerClientLinkError struct {
	CustomerClientLinkError CustomerClientLinkErrorEnum_CustomerClientLinkError `protobuf:"varint,88,opt,name=customer_client_link_error,json=customerClientLinkError,proto3,enum=google.ads.googleads.v3.errors.CustomerClientLinkErrorEnum_CustomerClientLinkError,oneof"`
}

type ErrorCode_CustomerManagerLinkError struct {
	CustomerManagerLinkError CustomerManagerLinkErrorEnum_CustomerManagerLinkError `protobuf:"varint,91,opt,name=customer_manager_link_error,json=customerManagerLinkError,proto3,enum=google.ads.googleads.v3.errors.CustomerManagerLinkErrorEnum_CustomerManagerLinkError,oneof"`
}

type ErrorCode_FeedMappingError struct {
	FeedMappingError FeedMappingErrorEnum_FeedMappingError `protobuf:"varint,92,opt,name=feed_mapping_error,json=feedMappingError,proto3,enum=google.ads.googleads.v3.errors.FeedMappingErrorEnum_FeedMappingError,oneof"`
}

type ErrorCode_CustomerFeedError struct {
	CustomerFeedError CustomerFeedErrorEnum_CustomerFeedError `protobuf:"varint,93,opt,name=customer_feed_error,json=customerFeedError,proto3,enum=google.ads.googleads.v3.errors.CustomerFeedErrorEnum_CustomerFeedError,oneof"`
}

type ErrorCode_AdGroupFeedError struct {
	AdGroupFeedError AdGroupFeedErrorEnum_AdGroupFeedError `protobuf:"varint,94,opt,name=ad_group_feed_error,json=adGroupFeedError,proto3,enum=google.ads.googleads.v3.errors.AdGroupFeedErrorEnum_AdGroupFeedError,oneof"`
}

type ErrorCode_CampaignFeedError struct {
	CampaignFeedError CampaignFeedErrorEnum_CampaignFeedError `protobuf:"varint,96,opt,name=campaign_feed_error,json=campaignFeedError,proto3,enum=google.ads.googleads.v3.errors.CampaignFeedErrorEnum_CampaignFeedError,oneof"`
}

type ErrorCode_CustomInterestError struct {
	CustomInterestError CustomInterestErrorEnum_CustomInterestError `protobuf:"varint,97,opt,name=custom_interest_error,json=customInterestError,proto3,enum=google.ads.googleads.v3.errors.CustomInterestErrorEnum_CustomInterestError,oneof"`
}

type ErrorCode_CampaignExperimentError struct {
	CampaignExperimentError CampaignExperimentErrorEnum_CampaignExperimentError `protobuf:"varint,98,opt,name=campaign_experiment_error,json=campaignExperimentError,proto3,enum=google.ads.googleads.v3.errors.CampaignExperimentErrorEnum_CampaignExperimentError,oneof"`
}

type ErrorCode_ExtensionFeedItemError struct {
	ExtensionFeedItemError ExtensionFeedItemErrorEnum_ExtensionFeedItemError `protobuf:"varint,100,opt,name=extension_feed_item_error,json=extensionFeedItemError,proto3,enum=google.ads.googleads.v3.errors.ExtensionFeedItemErrorEnum_ExtensionFeedItemError,oneof"`
}

type ErrorCode_AdParameterError struct {
	AdParameterError AdParameterErrorEnum_AdParameterError `protobuf:"varint,101,opt,name=ad_parameter_error,json=adParameterError,proto3,enum=google.ads.googleads.v3.errors.AdParameterErrorEnum_AdParameterError,oneof"`
}

type ErrorCode_FeedItemValidationError struct {
	FeedItemValidationError FeedItemValidationErrorEnum_FeedItemValidationError `protobuf:"varint,102,opt,name=feed_item_validation_error,json=feedItemValidationError,proto3,enum=google.ads.googleads.v3.errors.FeedItemValidationErrorEnum_FeedItemValidationError,oneof"`
}

type ErrorCode_ExtensionSettingError struct {
	ExtensionSettingError ExtensionSettingErrorEnum_ExtensionSettingError `protobuf:"varint,103,opt,name=extension_setting_error,json=extensionSettingError,proto3,enum=google.ads.googleads.v3.errors.ExtensionSettingErrorEnum_ExtensionSettingError,oneof"`
}

type ErrorCode_FeedItemTargetError struct {
	FeedItemTargetError FeedItemTargetErrorEnum_FeedItemTargetError `protobuf:"varint,104,opt,name=feed_item_target_error,json=feedItemTargetError,proto3,enum=google.ads.googleads.v3.errors.FeedItemTargetErrorEnum_FeedItemTargetError,oneof"`
}

type ErrorCode_PolicyViolationError struct {
	PolicyViolationError PolicyViolationErrorEnum_PolicyViolationError `protobuf:"varint,105,opt,name=policy_violation_error,json=policyViolationError,proto3,enum=google.ads.googleads.v3.errors.PolicyViolationErrorEnum_PolicyViolationError,oneof"`
}

type ErrorCode_MutateJobError struct {
	MutateJobError MutateJobErrorEnum_MutateJobError `protobuf:"varint,108,opt,name=mutate_job_error,json=mutateJobError,proto3,enum=google.ads.googleads.v3.errors.MutateJobErrorEnum_MutateJobError,oneof"`
}

type ErrorCode_PartialFailureError struct {
	PartialFailureError PartialFailureErrorEnum_PartialFailureError `protobuf:"varint,112,opt,name=partial_failure_error,json=partialFailureError,proto3,enum=google.ads.googleads.v3.errors.PartialFailureErrorEnum_PartialFailureError,oneof"`
}

type ErrorCode_PolicyValidationParameterError struct {
	PolicyValidationParameterError PolicyValidationParameterErrorEnum_PolicyValidationParameterError `protobuf:"varint,114,opt,name=policy_validation_parameter_error,json=policyValidationParameterError,proto3,enum=google.ads.googleads.v3.errors.PolicyValidationParameterErrorEnum_PolicyValidationParameterError,oneof"`
}

type ErrorCode_SizeLimitError struct {
	SizeLimitError SizeLimitErrorEnum_SizeLimitError `protobuf:"varint,118,opt,name=size_limit_error,json=sizeLimitError,proto3,enum=google.ads.googleads.v3.errors.SizeLimitErrorEnum_SizeLimitError,oneof"`
}

type ErrorCode_OfflineUserDataJobError struct {
	OfflineUserDataJobError OfflineUserDataJobErrorEnum_OfflineUserDataJobError `protobuf:"varint,119,opt,name=offline_user_data_job_error,json=offlineUserDataJobError,proto3,enum=google.ads.googleads.v3.errors.OfflineUserDataJobErrorEnum_OfflineUserDataJobError,oneof"`
}

type ErrorCode_NotWhitelistedError struct {
	NotWhitelistedError NotWhitelistedErrorEnum_NotWhitelistedError `protobuf:"varint,120,opt,name=not_whitelisted_error,json=notWhitelistedError,proto3,enum=google.ads.googleads.v3.errors.NotWhitelistedErrorEnum_NotWhitelistedError,oneof"`
}

type ErrorCode_ManagerLinkError struct {
	ManagerLinkError ManagerLinkErrorEnum_ManagerLinkError `protobuf:"varint,121,opt,name=manager_link_error,json=managerLinkError,proto3,enum=google.ads.googleads.v3.errors.ManagerLinkErrorEnum_ManagerLinkError,oneof"`
}

type ErrorCode_CurrencyCodeError struct {
	CurrencyCodeError CurrencyCodeErrorEnum_CurrencyCodeError `protobuf:"varint,122,opt,name=currency_code_error,json=currencyCodeError,proto3,enum=google.ads.googleads.v3.errors.CurrencyCodeErrorEnum_CurrencyCodeError,oneof"`
}

type ErrorCode_AccessInvitationError struct {
	AccessInvitationError AccessInvitationErrorEnum_AccessInvitationError `protobuf:"varint,124,opt,name=access_invitation_error,json=accessInvitationError,proto3,enum=google.ads.googleads.v3.errors.AccessInvitationErrorEnum_AccessInvitationError,oneof"`
}

type ErrorCode_ReachPlanError struct {
	ReachPlanError ReachPlanErrorEnum_ReachPlanError `protobuf:"varint,125,opt,name=reach_plan_error,json=reachPlanError,proto3,enum=google.ads.googleads.v3.errors.ReachPlanErrorEnum_ReachPlanError,oneof"`
}

type ErrorCode_InvoiceError struct {
	InvoiceError InvoiceErrorEnum_InvoiceError `protobuf:"varint,126,opt,name=invoice_error,json=invoiceError,proto3,enum=google.ads.googleads.v3.errors.InvoiceErrorEnum_InvoiceError,oneof"`
}

type ErrorCode_PaymentsAccountError struct {
	PaymentsAccountError PaymentsAccountErrorEnum_PaymentsAccountError `protobuf:"varint,127,opt,name=payments_account_error,json=paymentsAccountError,proto3,enum=google.ads.googleads.v3.errors.PaymentsAccountErrorEnum_PaymentsAccountError,oneof"`
}

type ErrorCode_TimeZoneError struct {
	TimeZoneError TimeZoneErrorEnum_TimeZoneError `protobuf:"varint,128,opt,name=time_zone_error,json=timeZoneError,proto3,enum=google.ads.googleads.v3.errors.TimeZoneErrorEnum_TimeZoneError,oneof"`
}

type ErrorCode_AssetLinkError struct {
	AssetLinkError AssetLinkErrorEnum_AssetLinkError `protobuf:"varint,129,opt,name=asset_link_error,json=assetLinkError,proto3,enum=google.ads.googleads.v3.errors.AssetLinkErrorEnum_AssetLinkError,oneof"`
}

type ErrorCode_UserDataError struct {
	UserDataError UserDataErrorEnum_UserDataError `protobuf:"varint,130,opt,name=user_data_error,json=userDataError,proto3,enum=google.ads.googleads.v3.errors.UserDataErrorEnum_UserDataError,oneof"`
}

func (*ErrorCode_RequestError) isErrorCode_ErrorCode() {}

func (*ErrorCode_BiddingStrategyError) isErrorCode_ErrorCode() {}

func (*ErrorCode_UrlFieldError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ListOperationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_QueryError) isErrorCode_ErrorCode() {}

func (*ErrorCode_MutateError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FieldMaskError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AuthorizationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_InternalError) isErrorCode_ErrorCode() {}

func (*ErrorCode_QuotaError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdGroupError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignBudgetError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AuthenticationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdGroupCriterionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdCustomizerError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdGroupAdError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdSharingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdxError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AssetError) isErrorCode_ErrorCode() {}

func (*ErrorCode_BiddingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignCriterionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CollectionSizeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CountryCodeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CriterionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CustomerError) isErrorCode_ErrorCode() {}

func (*ErrorCode_DateError) isErrorCode_ErrorCode() {}

func (*ErrorCode_DateRangeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_DistinctError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FeedAttributeReferenceError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FunctionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FunctionParsingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_IdError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ImageError) isErrorCode_ErrorCode() {}

func (*ErrorCode_LanguageCodeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_MediaBundleError) isErrorCode_ErrorCode() {}

func (*ErrorCode_MediaUploadError) isErrorCode_ErrorCode() {}

func (*ErrorCode_MediaFileError) isErrorCode_ErrorCode() {}

func (*ErrorCode_MultiplierError) isErrorCode_ErrorCode() {}

func (*ErrorCode_NewResourceCreationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_NotEmptyError) isErrorCode_ErrorCode() {}

func (*ErrorCode_NullError) isErrorCode_ErrorCode() {}

func (*ErrorCode_OperatorError) isErrorCode_ErrorCode() {}

func (*ErrorCode_RangeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_RecommendationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_RegionCodeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_SettingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_StringFormatError) isErrorCode_ErrorCode() {}

func (*ErrorCode_StringLengthError) isErrorCode_ErrorCode() {}

func (*ErrorCode_OperationAccessDeniedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ResourceAccessDeniedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ResourceCountLimitExceededError) isErrorCode_ErrorCode() {}

func (*ErrorCode_YoutubeVideoRegistrationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdGroupBidModifierError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ContextError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FieldError) isErrorCode_ErrorCode() {}

func (*ErrorCode_SharedSetError) isErrorCode_ErrorCode() {}

func (*ErrorCode_SharedCriterionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignSharedSetError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ConversionActionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ConversionAdjustmentUploadError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ConversionUploadError) isErrorCode_ErrorCode() {}

func (*ErrorCode_HeaderError) isErrorCode_ErrorCode() {}

func (*ErrorCode_DatabaseError) isErrorCode_ErrorCode() {}

func (*ErrorCode_PolicyFindingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_EnumError) isErrorCode_ErrorCode() {}

func (*ErrorCode_KeywordPlanError) isErrorCode_ErrorCode() {}

func (*ErrorCode_KeywordPlanCampaignError) isErrorCode_ErrorCode() {}

func (*ErrorCode_KeywordPlanNegativeKeywordError) isErrorCode_ErrorCode() {}

func (*ErrorCode_KeywordPlanAdGroupError) isErrorCode_ErrorCode() {}

func (*ErrorCode_KeywordPlanKeywordError) isErrorCode_ErrorCode() {}

func (*ErrorCode_KeywordPlanIdeaError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AccountBudgetProposalError) isErrorCode_ErrorCode() {}

func (*ErrorCode_UserListError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ChangeStatusError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FeedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_GeoTargetConstantSuggestionError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignDraftError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FeedItemError) isErrorCode_ErrorCode() {}

func (*ErrorCode_LabelError) isErrorCode_ErrorCode() {}

func (*ErrorCode_BillingSetupError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CustomerClientLinkError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CustomerManagerLinkError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FeedMappingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CustomerFeedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdGroupFeedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignFeedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CustomInterestError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CampaignExperimentError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ExtensionFeedItemError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AdParameterError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FeedItemValidationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ExtensionSettingError) isErrorCode_ErrorCode() {}

func (*ErrorCode_FeedItemTargetError) isErrorCode_ErrorCode() {}

func (*ErrorCode_PolicyViolationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_MutateJobError) isErrorCode_ErrorCode() {}

func (*ErrorCode_PartialFailureError) isErrorCode_ErrorCode() {}

func (*ErrorCode_PolicyValidationParameterError) isErrorCode_ErrorCode() {}

func (*ErrorCode_SizeLimitError) isErrorCode_ErrorCode() {}

func (*ErrorCode_OfflineUserDataJobError) isErrorCode_ErrorCode() {}

func (*ErrorCode_NotWhitelistedError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ManagerLinkError) isErrorCode_ErrorCode() {}

func (*ErrorCode_CurrencyCodeError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AccessInvitationError) isErrorCode_ErrorCode() {}

func (*ErrorCode_ReachPlanError) isErrorCode_ErrorCode() {}

func (*ErrorCode_InvoiceError) isErrorCode_ErrorCode() {}

func (*ErrorCode_PaymentsAccountError) isErrorCode_ErrorCode() {}

func (*ErrorCode_TimeZoneError) isErrorCode_ErrorCode() {}

func (*ErrorCode_AssetLinkError) isErrorCode_ErrorCode() {}

func (*ErrorCode_UserDataError) isErrorCode_ErrorCode() {}

func (m *ErrorCode) GetErrorCode() isErrorCode_ErrorCode {
	if m != nil {
		return m.ErrorCode
	}
	return nil
}

func (m *ErrorCode) GetRequestError() RequestErrorEnum_RequestError {
	if x, ok := m.GetErrorCode().(*ErrorCode_RequestError); ok {
		return x.RequestError
	}
	return RequestErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetBiddingStrategyError() BiddingStrategyErrorEnum_BiddingStrategyError {
	if x, ok := m.GetErrorCode().(*ErrorCode_BiddingStrategyError); ok {
		return x.BiddingStrategyError
	}
	return BiddingStrategyErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetUrlFieldError() UrlFieldErrorEnum_UrlFieldError {
	if x, ok := m.GetErrorCode().(*ErrorCode_UrlFieldError); ok {
		return x.UrlFieldError
	}
	return UrlFieldErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetListOperationError() ListOperationErrorEnum_ListOperationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ListOperationError); ok {
		return x.ListOperationError
	}
	return ListOperationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetQueryError() QueryErrorEnum_QueryError {
	if x, ok := m.GetErrorCode().(*ErrorCode_QueryError); ok {
		return x.QueryError
	}
	return QueryErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetMutateError() MutateErrorEnum_MutateError {
	if x, ok := m.GetErrorCode().(*ErrorCode_MutateError); ok {
		return x.MutateError
	}
	return MutateErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFieldMaskError() FieldMaskErrorEnum_FieldMaskError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FieldMaskError); ok {
		return x.FieldMaskError
	}
	return FieldMaskErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAuthorizationError() AuthorizationErrorEnum_AuthorizationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AuthorizationError); ok {
		return x.AuthorizationError
	}
	return AuthorizationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetInternalError() InternalErrorEnum_InternalError {
	if x, ok := m.GetErrorCode().(*ErrorCode_InternalError); ok {
		return x.InternalError
	}
	return InternalErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetQuotaError() QuotaErrorEnum_QuotaError {
	if x, ok := m.GetErrorCode().(*ErrorCode_QuotaError); ok {
		return x.QuotaError
	}
	return QuotaErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdError() AdErrorEnum_AdError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdError); ok {
		return x.AdError
	}
	return AdErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdGroupError() AdGroupErrorEnum_AdGroupError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdGroupError); ok {
		return x.AdGroupError
	}
	return AdGroupErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignBudgetError() CampaignBudgetErrorEnum_CampaignBudgetError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignBudgetError); ok {
		return x.CampaignBudgetError
	}
	return CampaignBudgetErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignError() CampaignErrorEnum_CampaignError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignError); ok {
		return x.CampaignError
	}
	return CampaignErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAuthenticationError() AuthenticationErrorEnum_AuthenticationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AuthenticationError); ok {
		return x.AuthenticationError
	}
	return AuthenticationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdGroupCriterionError() AdGroupCriterionErrorEnum_AdGroupCriterionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdGroupCriterionError); ok {
		return x.AdGroupCriterionError
	}
	return AdGroupCriterionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdCustomizerError() AdCustomizerErrorEnum_AdCustomizerError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdCustomizerError); ok {
		return x.AdCustomizerError
	}
	return AdCustomizerErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdGroupAdError() AdGroupAdErrorEnum_AdGroupAdError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdGroupAdError); ok {
		return x.AdGroupAdError
	}
	return AdGroupAdErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdSharingError() AdSharingErrorEnum_AdSharingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdSharingError); ok {
		return x.AdSharingError
	}
	return AdSharingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdxError() AdxErrorEnum_AdxError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdxError); ok {
		return x.AdxError
	}
	return AdxErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAssetError() AssetErrorEnum_AssetError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AssetError); ok {
		return x.AssetError
	}
	return AssetErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetBiddingError() BiddingErrorEnum_BiddingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_BiddingError); ok {
		return x.BiddingError
	}
	return BiddingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignCriterionError() CampaignCriterionErrorEnum_CampaignCriterionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignCriterionError); ok {
		return x.CampaignCriterionError
	}
	return CampaignCriterionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCollectionSizeError() CollectionSizeErrorEnum_CollectionSizeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CollectionSizeError); ok {
		return x.CollectionSizeError
	}
	return CollectionSizeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCountryCodeError() CountryCodeErrorEnum_CountryCodeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CountryCodeError); ok {
		return x.CountryCodeError
	}
	return CountryCodeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCriterionError() CriterionErrorEnum_CriterionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CriterionError); ok {
		return x.CriterionError
	}
	return CriterionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCustomerError() CustomerErrorEnum_CustomerError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CustomerError); ok {
		return x.CustomerError
	}
	return CustomerErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetDateError() DateErrorEnum_DateError {
	if x, ok := m.GetErrorCode().(*ErrorCode_DateError); ok {
		return x.DateError
	}
	return DateErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetDateRangeError() DateRangeErrorEnum_DateRangeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_DateRangeError); ok {
		return x.DateRangeError
	}
	return DateRangeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetDistinctError() DistinctErrorEnum_DistinctError {
	if x, ok := m.GetErrorCode().(*ErrorCode_DistinctError); ok {
		return x.DistinctError
	}
	return DistinctErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFeedAttributeReferenceError() FeedAttributeReferenceErrorEnum_FeedAttributeReferenceError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FeedAttributeReferenceError); ok {
		return x.FeedAttributeReferenceError
	}
	return FeedAttributeReferenceErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFunctionError() FunctionErrorEnum_FunctionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FunctionError); ok {
		return x.FunctionError
	}
	return FunctionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFunctionParsingError() FunctionParsingErrorEnum_FunctionParsingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FunctionParsingError); ok {
		return x.FunctionParsingError
	}
	return FunctionParsingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetIdError() IdErrorEnum_IdError {
	if x, ok := m.GetErrorCode().(*ErrorCode_IdError); ok {
		return x.IdError
	}
	return IdErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetImageError() ImageErrorEnum_ImageError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ImageError); ok {
		return x.ImageError
	}
	return ImageErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetLanguageCodeError() LanguageCodeErrorEnum_LanguageCodeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_LanguageCodeError); ok {
		return x.LanguageCodeError
	}
	return LanguageCodeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetMediaBundleError() MediaBundleErrorEnum_MediaBundleError {
	if x, ok := m.GetErrorCode().(*ErrorCode_MediaBundleError); ok {
		return x.MediaBundleError
	}
	return MediaBundleErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetMediaUploadError() MediaUploadErrorEnum_MediaUploadError {
	if x, ok := m.GetErrorCode().(*ErrorCode_MediaUploadError); ok {
		return x.MediaUploadError
	}
	return MediaUploadErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetMediaFileError() MediaFileErrorEnum_MediaFileError {
	if x, ok := m.GetErrorCode().(*ErrorCode_MediaFileError); ok {
		return x.MediaFileError
	}
	return MediaFileErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetMultiplierError() MultiplierErrorEnum_MultiplierError {
	if x, ok := m.GetErrorCode().(*ErrorCode_MultiplierError); ok {
		return x.MultiplierError
	}
	return MultiplierErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetNewResourceCreationError() NewResourceCreationErrorEnum_NewResourceCreationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_NewResourceCreationError); ok {
		return x.NewResourceCreationError
	}
	return NewResourceCreationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetNotEmptyError() NotEmptyErrorEnum_NotEmptyError {
	if x, ok := m.GetErrorCode().(*ErrorCode_NotEmptyError); ok {
		return x.NotEmptyError
	}
	return NotEmptyErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetNullError() NullErrorEnum_NullError {
	if x, ok := m.GetErrorCode().(*ErrorCode_NullError); ok {
		return x.NullError
	}
	return NullErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetOperatorError() OperatorErrorEnum_OperatorError {
	if x, ok := m.GetErrorCode().(*ErrorCode_OperatorError); ok {
		return x.OperatorError
	}
	return OperatorErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetRangeError() RangeErrorEnum_RangeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_RangeError); ok {
		return x.RangeError
	}
	return RangeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetRecommendationError() RecommendationErrorEnum_RecommendationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_RecommendationError); ok {
		return x.RecommendationError
	}
	return RecommendationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetRegionCodeError() RegionCodeErrorEnum_RegionCodeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_RegionCodeError); ok {
		return x.RegionCodeError
	}
	return RegionCodeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetSettingError() SettingErrorEnum_SettingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_SettingError); ok {
		return x.SettingError
	}
	return SettingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetStringFormatError() StringFormatErrorEnum_StringFormatError {
	if x, ok := m.GetErrorCode().(*ErrorCode_StringFormatError); ok {
		return x.StringFormatError
	}
	return StringFormatErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetStringLengthError() StringLengthErrorEnum_StringLengthError {
	if x, ok := m.GetErrorCode().(*ErrorCode_StringLengthError); ok {
		return x.StringLengthError
	}
	return StringLengthErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetOperationAccessDeniedError() OperationAccessDeniedErrorEnum_OperationAccessDeniedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_OperationAccessDeniedError); ok {
		return x.OperationAccessDeniedError
	}
	return OperationAccessDeniedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetResourceAccessDeniedError() ResourceAccessDeniedErrorEnum_ResourceAccessDeniedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ResourceAccessDeniedError); ok {
		return x.ResourceAccessDeniedError
	}
	return ResourceAccessDeniedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetResourceCountLimitExceededError() ResourceCountLimitExceededErrorEnum_ResourceCountLimitExceededError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ResourceCountLimitExceededError); ok {
		return x.ResourceCountLimitExceededError
	}
	return ResourceCountLimitExceededErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetYoutubeVideoRegistrationError() YoutubeVideoRegistrationErrorEnum_YoutubeVideoRegistrationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_YoutubeVideoRegistrationError); ok {
		return x.YoutubeVideoRegistrationError
	}
	return YoutubeVideoRegistrationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdGroupBidModifierError() AdGroupBidModifierErrorEnum_AdGroupBidModifierError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdGroupBidModifierError); ok {
		return x.AdGroupBidModifierError
	}
	return AdGroupBidModifierErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetContextError() ContextErrorEnum_ContextError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ContextError); ok {
		return x.ContextError
	}
	return ContextErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFieldError() FieldErrorEnum_FieldError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FieldError); ok {
		return x.FieldError
	}
	return FieldErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetSharedSetError() SharedSetErrorEnum_SharedSetError {
	if x, ok := m.GetErrorCode().(*ErrorCode_SharedSetError); ok {
		return x.SharedSetError
	}
	return SharedSetErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetSharedCriterionError() SharedCriterionErrorEnum_SharedCriterionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_SharedCriterionError); ok {
		return x.SharedCriterionError
	}
	return SharedCriterionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignSharedSetError() CampaignSharedSetErrorEnum_CampaignSharedSetError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignSharedSetError); ok {
		return x.CampaignSharedSetError
	}
	return CampaignSharedSetErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetConversionActionError() ConversionActionErrorEnum_ConversionActionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ConversionActionError); ok {
		return x.ConversionActionError
	}
	return ConversionActionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetConversionAdjustmentUploadError() ConversionAdjustmentUploadErrorEnum_ConversionAdjustmentUploadError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ConversionAdjustmentUploadError); ok {
		return x.ConversionAdjustmentUploadError
	}
	return ConversionAdjustmentUploadErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetConversionUploadError() ConversionUploadErrorEnum_ConversionUploadError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ConversionUploadError); ok {
		return x.ConversionUploadError
	}
	return ConversionUploadErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetHeaderError() HeaderErrorEnum_HeaderError {
	if x, ok := m.GetErrorCode().(*ErrorCode_HeaderError); ok {
		return x.HeaderError
	}
	return HeaderErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetDatabaseError() DatabaseErrorEnum_DatabaseError {
	if x, ok := m.GetErrorCode().(*ErrorCode_DatabaseError); ok {
		return x.DatabaseError
	}
	return DatabaseErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetPolicyFindingError() PolicyFindingErrorEnum_PolicyFindingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_PolicyFindingError); ok {
		return x.PolicyFindingError
	}
	return PolicyFindingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetEnumError() EnumErrorEnum_EnumError {
	if x, ok := m.GetErrorCode().(*ErrorCode_EnumError); ok {
		return x.EnumError
	}
	return EnumErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetKeywordPlanError() KeywordPlanErrorEnum_KeywordPlanError {
	if x, ok := m.GetErrorCode().(*ErrorCode_KeywordPlanError); ok {
		return x.KeywordPlanError
	}
	return KeywordPlanErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetKeywordPlanCampaignError() KeywordPlanCampaignErrorEnum_KeywordPlanCampaignError {
	if x, ok := m.GetErrorCode().(*ErrorCode_KeywordPlanCampaignError); ok {
		return x.KeywordPlanCampaignError
	}
	return KeywordPlanCampaignErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetKeywordPlanNegativeKeywordError() KeywordPlanNegativeKeywordErrorEnum_KeywordPlanNegativeKeywordError {
	if x, ok := m.GetErrorCode().(*ErrorCode_KeywordPlanNegativeKeywordError); ok {
		return x.KeywordPlanNegativeKeywordError
	}
	return KeywordPlanNegativeKeywordErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetKeywordPlanAdGroupError() KeywordPlanAdGroupErrorEnum_KeywordPlanAdGroupError {
	if x, ok := m.GetErrorCode().(*ErrorCode_KeywordPlanAdGroupError); ok {
		return x.KeywordPlanAdGroupError
	}
	return KeywordPlanAdGroupErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetKeywordPlanKeywordError() KeywordPlanKeywordErrorEnum_KeywordPlanKeywordError {
	if x, ok := m.GetErrorCode().(*ErrorCode_KeywordPlanKeywordError); ok {
		return x.KeywordPlanKeywordError
	}
	return KeywordPlanKeywordErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetKeywordPlanIdeaError() KeywordPlanIdeaErrorEnum_KeywordPlanIdeaError {
	if x, ok := m.GetErrorCode().(*ErrorCode_KeywordPlanIdeaError); ok {
		return x.KeywordPlanIdeaError
	}
	return KeywordPlanIdeaErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAccountBudgetProposalError() AccountBudgetProposalErrorEnum_AccountBudgetProposalError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AccountBudgetProposalError); ok {
		return x.AccountBudgetProposalError
	}
	return AccountBudgetProposalErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetUserListError() UserListErrorEnum_UserListError {
	if x, ok := m.GetErrorCode().(*ErrorCode_UserListError); ok {
		return x.UserListError
	}
	return UserListErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetChangeStatusError() ChangeStatusErrorEnum_ChangeStatusError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ChangeStatusError); ok {
		return x.ChangeStatusError
	}
	return ChangeStatusErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFeedError() FeedErrorEnum_FeedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FeedError); ok {
		return x.FeedError
	}
	return FeedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetGeoTargetConstantSuggestionError() GeoTargetConstantSuggestionErrorEnum_GeoTargetConstantSuggestionError {
	if x, ok := m.GetErrorCode().(*ErrorCode_GeoTargetConstantSuggestionError); ok {
		return x.GeoTargetConstantSuggestionError
	}
	return GeoTargetConstantSuggestionErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignDraftError() CampaignDraftErrorEnum_CampaignDraftError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignDraftError); ok {
		return x.CampaignDraftError
	}
	return CampaignDraftErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFeedItemError() FeedItemErrorEnum_FeedItemError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FeedItemError); ok {
		return x.FeedItemError
	}
	return FeedItemErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetLabelError() LabelErrorEnum_LabelError {
	if x, ok := m.GetErrorCode().(*ErrorCode_LabelError); ok {
		return x.LabelError
	}
	return LabelErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetBillingSetupError() BillingSetupErrorEnum_BillingSetupError {
	if x, ok := m.GetErrorCode().(*ErrorCode_BillingSetupError); ok {
		return x.BillingSetupError
	}
	return BillingSetupErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCustomerClientLinkError() CustomerClientLinkErrorEnum_CustomerClientLinkError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CustomerClientLinkError); ok {
		return x.CustomerClientLinkError
	}
	return CustomerClientLinkErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCustomerManagerLinkError() CustomerManagerLinkErrorEnum_CustomerManagerLinkError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CustomerManagerLinkError); ok {
		return x.CustomerManagerLinkError
	}
	return CustomerManagerLinkErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFeedMappingError() FeedMappingErrorEnum_FeedMappingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FeedMappingError); ok {
		return x.FeedMappingError
	}
	return FeedMappingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCustomerFeedError() CustomerFeedErrorEnum_CustomerFeedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CustomerFeedError); ok {
		return x.CustomerFeedError
	}
	return CustomerFeedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdGroupFeedError() AdGroupFeedErrorEnum_AdGroupFeedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdGroupFeedError); ok {
		return x.AdGroupFeedError
	}
	return AdGroupFeedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignFeedError() CampaignFeedErrorEnum_CampaignFeedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignFeedError); ok {
		return x.CampaignFeedError
	}
	return CampaignFeedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCustomInterestError() CustomInterestErrorEnum_CustomInterestError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CustomInterestError); ok {
		return x.CustomInterestError
	}
	return CustomInterestErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCampaignExperimentError() CampaignExperimentErrorEnum_CampaignExperimentError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CampaignExperimentError); ok {
		return x.CampaignExperimentError
	}
	return CampaignExperimentErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetExtensionFeedItemError() ExtensionFeedItemErrorEnum_ExtensionFeedItemError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ExtensionFeedItemError); ok {
		return x.ExtensionFeedItemError
	}
	return ExtensionFeedItemErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAdParameterError() AdParameterErrorEnum_AdParameterError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AdParameterError); ok {
		return x.AdParameterError
	}
	return AdParameterErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFeedItemValidationError() FeedItemValidationErrorEnum_FeedItemValidationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FeedItemValidationError); ok {
		return x.FeedItemValidationError
	}
	return FeedItemValidationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetExtensionSettingError() ExtensionSettingErrorEnum_ExtensionSettingError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ExtensionSettingError); ok {
		return x.ExtensionSettingError
	}
	return ExtensionSettingErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetFeedItemTargetError() FeedItemTargetErrorEnum_FeedItemTargetError {
	if x, ok := m.GetErrorCode().(*ErrorCode_FeedItemTargetError); ok {
		return x.FeedItemTargetError
	}
	return FeedItemTargetErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetPolicyViolationError() PolicyViolationErrorEnum_PolicyViolationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_PolicyViolationError); ok {
		return x.PolicyViolationError
	}
	return PolicyViolationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetMutateJobError() MutateJobErrorEnum_MutateJobError {
	if x, ok := m.GetErrorCode().(*ErrorCode_MutateJobError); ok {
		return x.MutateJobError
	}
	return MutateJobErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetPartialFailureError() PartialFailureErrorEnum_PartialFailureError {
	if x, ok := m.GetErrorCode().(*ErrorCode_PartialFailureError); ok {
		return x.PartialFailureError
	}
	return PartialFailureErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetPolicyValidationParameterError() PolicyValidationParameterErrorEnum_PolicyValidationParameterError {
	if x, ok := m.GetErrorCode().(*ErrorCode_PolicyValidationParameterError); ok {
		return x.PolicyValidationParameterError
	}
	return PolicyValidationParameterErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetSizeLimitError() SizeLimitErrorEnum_SizeLimitError {
	if x, ok := m.GetErrorCode().(*ErrorCode_SizeLimitError); ok {
		return x.SizeLimitError
	}
	return SizeLimitErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetOfflineUserDataJobError() OfflineUserDataJobErrorEnum_OfflineUserDataJobError {
	if x, ok := m.GetErrorCode().(*ErrorCode_OfflineUserDataJobError); ok {
		return x.OfflineUserDataJobError
	}
	return OfflineUserDataJobErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetNotWhitelistedError() NotWhitelistedErrorEnum_NotWhitelistedError {
	if x, ok := m.GetErrorCode().(*ErrorCode_NotWhitelistedError); ok {
		return x.NotWhitelistedError
	}
	return NotWhitelistedErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetManagerLinkError() ManagerLinkErrorEnum_ManagerLinkError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ManagerLinkError); ok {
		return x.ManagerLinkError
	}
	return ManagerLinkErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetCurrencyCodeError() CurrencyCodeErrorEnum_CurrencyCodeError {
	if x, ok := m.GetErrorCode().(*ErrorCode_CurrencyCodeError); ok {
		return x.CurrencyCodeError
	}
	return CurrencyCodeErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAccessInvitationError() AccessInvitationErrorEnum_AccessInvitationError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AccessInvitationError); ok {
		return x.AccessInvitationError
	}
	return AccessInvitationErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetReachPlanError() ReachPlanErrorEnum_ReachPlanError {
	if x, ok := m.GetErrorCode().(*ErrorCode_ReachPlanError); ok {
		return x.ReachPlanError
	}
	return ReachPlanErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetInvoiceError() InvoiceErrorEnum_InvoiceError {
	if x, ok := m.GetErrorCode().(*ErrorCode_InvoiceError); ok {
		return x.InvoiceError
	}
	return InvoiceErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetPaymentsAccountError() PaymentsAccountErrorEnum_PaymentsAccountError {
	if x, ok := m.GetErrorCode().(*ErrorCode_PaymentsAccountError); ok {
		return x.PaymentsAccountError
	}
	return PaymentsAccountErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetTimeZoneError() TimeZoneErrorEnum_TimeZoneError {
	if x, ok := m.GetErrorCode().(*ErrorCode_TimeZoneError); ok {
		return x.TimeZoneError
	}
	return TimeZoneErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetAssetLinkError() AssetLinkErrorEnum_AssetLinkError {
	if x, ok := m.GetErrorCode().(*ErrorCode_AssetLinkError); ok {
		return x.AssetLinkError
	}
	return AssetLinkErrorEnum_UNSPECIFIED
}

func (m *ErrorCode) GetUserDataError() UserDataErrorEnum_UserDataError {
	if x, ok := m.GetErrorCode().(*ErrorCode_UserDataError); ok {
		return x.UserDataError
	}
	return UserDataErrorEnum_UNSPECIFIED
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ErrorCode) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ErrorCode_RequestError)(nil),
		(*ErrorCode_BiddingStrategyError)(nil),
		(*ErrorCode_UrlFieldError)(nil),
		(*ErrorCode_ListOperationError)(nil),
		(*ErrorCode_QueryError)(nil),
		(*ErrorCode_MutateError)(nil),
		(*ErrorCode_FieldMaskError)(nil),
		(*ErrorCode_AuthorizationError)(nil),
		(*ErrorCode_InternalError)(nil),
		(*ErrorCode_QuotaError)(nil),
		(*ErrorCode_AdError)(nil),
		(*ErrorCode_AdGroupError)(nil),
		(*ErrorCode_CampaignBudgetError)(nil),
		(*ErrorCode_CampaignError)(nil),
		(*ErrorCode_AuthenticationError)(nil),
		(*ErrorCode_AdGroupCriterionError)(nil),
		(*ErrorCode_AdCustomizerError)(nil),
		(*ErrorCode_AdGroupAdError)(nil),
		(*ErrorCode_AdSharingError)(nil),
		(*ErrorCode_AdxError)(nil),
		(*ErrorCode_AssetError)(nil),
		(*ErrorCode_BiddingError)(nil),
		(*ErrorCode_CampaignCriterionError)(nil),
		(*ErrorCode_CollectionSizeError)(nil),
		(*ErrorCode_CountryCodeError)(nil),
		(*ErrorCode_CriterionError)(nil),
		(*ErrorCode_CustomerError)(nil),
		(*ErrorCode_DateError)(nil),
		(*ErrorCode_DateRangeError)(nil),
		(*ErrorCode_DistinctError)(nil),
		(*ErrorCode_FeedAttributeReferenceError)(nil),
		(*ErrorCode_FunctionError)(nil),
		(*ErrorCode_FunctionParsingError)(nil),
		(*ErrorCode_IdError)(nil),
		(*ErrorCode_ImageError)(nil),
		(*ErrorCode_LanguageCodeError)(nil),
		(*ErrorCode_MediaBundleError)(nil),
		(*ErrorCode_MediaUploadError)(nil),
		(*ErrorCode_MediaFileError)(nil),
		(*ErrorCode_MultiplierError)(nil),
		(*ErrorCode_NewResourceCreationError)(nil),
		(*ErrorCode_NotEmptyError)(nil),
		(*ErrorCode_NullError)(nil),
		(*ErrorCode_OperatorError)(nil),
		(*ErrorCode_RangeError)(nil),
		(*ErrorCode_RecommendationError)(nil),
		(*ErrorCode_RegionCodeError)(nil),
		(*ErrorCode_SettingError)(nil),
		(*ErrorCode_StringFormatError)(nil),
		(*ErrorCode_StringLengthError)(nil),
		(*ErrorCode_OperationAccessDeniedError)(nil),
		(*ErrorCode_ResourceAccessDeniedError)(nil),
		(*ErrorCode_ResourceCountLimitExceededError)(nil),
		(*ErrorCode_YoutubeVideoRegistrationError)(nil),
		(*ErrorCode_AdGroupBidModifierError)(nil),
		(*ErrorCode_ContextError)(nil),
		(*ErrorCode_FieldError)(nil),
		(*ErrorCode_SharedSetError)(nil),
		(*ErrorCode_SharedCriterionError)(nil),
		(*ErrorCode_CampaignSharedSetError)(nil),
		(*ErrorCode_ConversionActionError)(nil),
		(*ErrorCode_ConversionAdjustmentUploadError)(nil),
		(*ErrorCode_ConversionUploadError)(nil),
		(*ErrorCode_HeaderError)(nil),
		(*ErrorCode_DatabaseError)(nil),
		(*ErrorCode_PolicyFindingError)(nil),
		(*ErrorCode_EnumError)(nil),
		(*ErrorCode_KeywordPlanError)(nil),
		(*ErrorCode_KeywordPlanCampaignError)(nil),
		(*ErrorCode_KeywordPlanNegativeKeywordError)(nil),
		(*ErrorCode_KeywordPlanAdGroupError)(nil),
		(*ErrorCode_KeywordPlanKeywordError)(nil),
		(*ErrorCode_KeywordPlanIdeaError)(nil),
		(*ErrorCode_AccountBudgetProposalError)(nil),
		(*ErrorCode_UserListError)(nil),
		(*ErrorCode_ChangeStatusError)(nil),
		(*ErrorCode_FeedError)(nil),
		(*ErrorCode_GeoTargetConstantSuggestionError)(nil),
		(*ErrorCode_CampaignDraftError)(nil),
		(*ErrorCode_FeedItemError)(nil),
		(*ErrorCode_LabelError)(nil),
		(*ErrorCode_BillingSetupError)(nil),
		(*ErrorCode_CustomerClientLinkError)(nil),
		(*ErrorCode_CustomerManagerLinkError)(nil),
		(*ErrorCode_FeedMappingError)(nil),
		(*ErrorCode_CustomerFeedError)(nil),
		(*ErrorCode_AdGroupFeedError)(nil),
		(*ErrorCode_CampaignFeedError)(nil),
		(*ErrorCode_CustomInterestError)(nil),
		(*ErrorCode_CampaignExperimentError)(nil),
		(*ErrorCode_ExtensionFeedItemError)(nil),
		(*ErrorCode_AdParameterError)(nil),
		(*ErrorCode_FeedItemValidationError)(nil),
		(*ErrorCode_ExtensionSettingError)(nil),
		(*ErrorCode_FeedItemTargetError)(nil),
		(*ErrorCode_PolicyViolationError)(nil),
		(*ErrorCode_MutateJobError)(nil),
		(*ErrorCode_PartialFailureError)(nil),
		(*ErrorCode_PolicyValidationParameterError)(nil),
		(*ErrorCode_SizeLimitError)(nil),
		(*ErrorCode_OfflineUserDataJobError)(nil),
		(*ErrorCode_NotWhitelistedError)(nil),
		(*ErrorCode_ManagerLinkError)(nil),
		(*ErrorCode_CurrencyCodeError)(nil),
		(*ErrorCode_AccessInvitationError)(nil),
		(*ErrorCode_ReachPlanError)(nil),
		(*ErrorCode_InvoiceError)(nil),
		(*ErrorCode_PaymentsAccountError)(nil),
		(*ErrorCode_TimeZoneError)(nil),
		(*ErrorCode_AssetLinkError)(nil),
		(*ErrorCode_UserDataError)(nil),
	}
}

// Describes the part of the request proto that caused the error.
type ErrorLocation struct {
	// A field path that indicates which field was invalid in the request.
	FieldPathElements    []*ErrorLocation_FieldPathElement `protobuf:"bytes,2,rep,name=field_path_elements,json=fieldPathElements,proto3" json:"field_path_elements,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ErrorLocation) Reset()         { *m = ErrorLocation{} }
func (m *ErrorLocation) String() string { return proto.CompactTextString(m) }
func (*ErrorLocation) ProtoMessage()    {}
func (*ErrorLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{3}
}

func (m *ErrorLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorLocation.Unmarshal(m, b)
}
func (m *ErrorLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorLocation.Marshal(b, m, deterministic)
}
func (m *ErrorLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorLocation.Merge(m, src)
}
func (m *ErrorLocation) XXX_Size() int {
	return xxx_messageInfo_ErrorLocation.Size(m)
}
func (m *ErrorLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorLocation.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorLocation proto.InternalMessageInfo

func (m *ErrorLocation) GetFieldPathElements() []*ErrorLocation_FieldPathElement {
	if m != nil {
		return m.FieldPathElements
	}
	return nil
}

// A part of a field path.
type ErrorLocation_FieldPathElement struct {
	// The name of a field or a oneof
	FieldName string `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	// If field_name is a repeated field, this is the element that failed
	Index                *wrappers.Int64Value `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ErrorLocation_FieldPathElement) Reset()         { *m = ErrorLocation_FieldPathElement{} }
func (m *ErrorLocation_FieldPathElement) String() string { return proto.CompactTextString(m) }
func (*ErrorLocation_FieldPathElement) ProtoMessage()    {}
func (*ErrorLocation_FieldPathElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{3, 0}
}

func (m *ErrorLocation_FieldPathElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorLocation_FieldPathElement.Unmarshal(m, b)
}
func (m *ErrorLocation_FieldPathElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorLocation_FieldPathElement.Marshal(b, m, deterministic)
}
func (m *ErrorLocation_FieldPathElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorLocation_FieldPathElement.Merge(m, src)
}
func (m *ErrorLocation_FieldPathElement) XXX_Size() int {
	return xxx_messageInfo_ErrorLocation_FieldPathElement.Size(m)
}
func (m *ErrorLocation_FieldPathElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorLocation_FieldPathElement.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorLocation_FieldPathElement proto.InternalMessageInfo

func (m *ErrorLocation_FieldPathElement) GetFieldName() string {
	if m != nil {
		return m.FieldName
	}
	return ""
}

func (m *ErrorLocation_FieldPathElement) GetIndex() *wrappers.Int64Value {
	if m != nil {
		return m.Index
	}
	return nil
}

// Additional error details.
type ErrorDetails struct {
	// The error code that should have been returned, but wasn't. This is used
	// when the error code is InternalError.ERROR_CODE_NOT_PUBLISHED.
	UnpublishedErrorCode string `protobuf:"bytes,1,opt,name=unpublished_error_code,json=unpublishedErrorCode,proto3" json:"unpublished_error_code,omitempty"`
	// Describes an ad policy violation.
	PolicyViolationDetails *PolicyViolationDetails `protobuf:"bytes,2,opt,name=policy_violation_details,json=policyViolationDetails,proto3" json:"policy_violation_details,omitempty"`
	// Describes policy violation findings.
	PolicyFindingDetails *PolicyFindingDetails `protobuf:"bytes,3,opt,name=policy_finding_details,json=policyFindingDetails,proto3" json:"policy_finding_details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ErrorDetails) Reset()         { *m = ErrorDetails{} }
func (m *ErrorDetails) String() string { return proto.CompactTextString(m) }
func (*ErrorDetails) ProtoMessage()    {}
func (*ErrorDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{4}
}

func (m *ErrorDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDetails.Unmarshal(m, b)
}
func (m *ErrorDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDetails.Marshal(b, m, deterministic)
}
func (m *ErrorDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDetails.Merge(m, src)
}
func (m *ErrorDetails) XXX_Size() int {
	return xxx_messageInfo_ErrorDetails.Size(m)
}
func (m *ErrorDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDetails.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDetails proto.InternalMessageInfo

func (m *ErrorDetails) GetUnpublishedErrorCode() string {
	if m != nil {
		return m.UnpublishedErrorCode
	}
	return ""
}

func (m *ErrorDetails) GetPolicyViolationDetails() *PolicyViolationDetails {
	if m != nil {
		return m.PolicyViolationDetails
	}
	return nil
}

func (m *ErrorDetails) GetPolicyFindingDetails() *PolicyFindingDetails {
	if m != nil {
		return m.PolicyFindingDetails
	}
	return nil
}

// Error returned as part of a mutate response.
// This error indicates single policy violation by some text
// in one of the fields.
type PolicyViolationDetails struct {
	// Human readable description of policy violation.
	ExternalPolicyDescription string `protobuf:"bytes,2,opt,name=external_policy_description,json=externalPolicyDescription,proto3" json:"external_policy_description,omitempty"`
	// Unique identifier for this violation.
	// If policy is exemptible, this key may be used to request exemption.
	Key *common.PolicyViolationKey `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	// Human readable name of the policy.
	ExternalPolicyName string `protobuf:"bytes,5,opt,name=external_policy_name,json=externalPolicyName,proto3" json:"external_policy_name,omitempty"`
	// Whether user can file an exemption request for this violation.
	IsExemptible         bool     `protobuf:"varint,6,opt,name=is_exemptible,json=isExemptible,proto3" json:"is_exemptible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PolicyViolationDetails) Reset()         { *m = PolicyViolationDetails{} }
func (m *PolicyViolationDetails) String() string { return proto.CompactTextString(m) }
func (*PolicyViolationDetails) ProtoMessage()    {}
func (*PolicyViolationDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{5}
}

func (m *PolicyViolationDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyViolationDetails.Unmarshal(m, b)
}
func (m *PolicyViolationDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyViolationDetails.Marshal(b, m, deterministic)
}
func (m *PolicyViolationDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyViolationDetails.Merge(m, src)
}
func (m *PolicyViolationDetails) XXX_Size() int {
	return xxx_messageInfo_PolicyViolationDetails.Size(m)
}
func (m *PolicyViolationDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyViolationDetails.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyViolationDetails proto.InternalMessageInfo

func (m *PolicyViolationDetails) GetExternalPolicyDescription() string {
	if m != nil {
		return m.ExternalPolicyDescription
	}
	return ""
}

func (m *PolicyViolationDetails) GetKey() *common.PolicyViolationKey {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PolicyViolationDetails) GetExternalPolicyName() string {
	if m != nil {
		return m.ExternalPolicyName
	}
	return ""
}

func (m *PolicyViolationDetails) GetIsExemptible() bool {
	if m != nil {
		return m.IsExemptible
	}
	return false
}

// Error returned as part of a mutate response.
// This error indicates one or more policy findings in the fields of a
// resource.
type PolicyFindingDetails struct {
	// The list of policy topics for the resource. Contains the PROHIBITED or
	// FULLY_LIMITED policy topic entries that prevented the resource from being
	// saved (among any other entries the resource may also have).
	PolicyTopicEntries   []*common.PolicyTopicEntry `protobuf:"bytes,1,rep,name=policy_topic_entries,json=policyTopicEntries,proto3" json:"policy_topic_entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *PolicyFindingDetails) Reset()         { *m = PolicyFindingDetails{} }
func (m *PolicyFindingDetails) String() string { return proto.CompactTextString(m) }
func (*PolicyFindingDetails) ProtoMessage()    {}
func (*PolicyFindingDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_37c8858a8ef846f0, []int{6}
}

func (m *PolicyFindingDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyFindingDetails.Unmarshal(m, b)
}
func (m *PolicyFindingDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyFindingDetails.Marshal(b, m, deterministic)
}
func (m *PolicyFindingDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyFindingDetails.Merge(m, src)
}
func (m *PolicyFindingDetails) XXX_Size() int {
	return xxx_messageInfo_PolicyFindingDetails.Size(m)
}
func (m *PolicyFindingDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyFindingDetails.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyFindingDetails proto.InternalMessageInfo

func (m *PolicyFindingDetails) GetPolicyTopicEntries() []*common.PolicyTopicEntry {
	if m != nil {
		return m.PolicyTopicEntries
	}
	return nil
}

func init() {
	proto.RegisterType((*GoogleAdsFailure)(nil), "google.ads.googleads.v3.errors.GoogleAdsFailure")
	proto.RegisterType((*GoogleAdsError)(nil), "google.ads.googleads.v3.errors.GoogleAdsError")
	proto.RegisterType((*ErrorCode)(nil), "google.ads.googleads.v3.errors.ErrorCode")
	proto.RegisterType((*ErrorLocation)(nil), "google.ads.googleads.v3.errors.ErrorLocation")
	proto.RegisterType((*ErrorLocation_FieldPathElement)(nil), "google.ads.googleads.v3.errors.ErrorLocation.FieldPathElement")
	proto.RegisterType((*ErrorDetails)(nil), "google.ads.googleads.v3.errors.ErrorDetails")
	proto.RegisterType((*PolicyViolationDetails)(nil), "google.ads.googleads.v3.errors.PolicyViolationDetails")
	proto.RegisterType((*PolicyFindingDetails)(nil), "google.ads.googleads.v3.errors.PolicyFindingDetails")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/errors/errors.proto", fileDescriptor_37c8858a8ef846f0)
}

var fileDescriptor_37c8858a8ef846f0 = []byte{
	// 4399 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x5c, 0xcd, 0x73, 0x1c, 0x37,
	0x76, 0x9f, 0x91, 0xb3, 0x96, 0x04, 0x49, 0x94, 0xd4, 0x92, 0x65, 0x58, 0x5a, 0x7b, 0xb5, 0xf4,
	0x6e, 0xa2, 0x6c, 0xd6, 0xa4, 0x4d, 0xca, 0x92, 0x45, 0xd9, 0x96, 0x87, 0x5f, 0x1a, 0xae, 0x29,
	0x89, 0x6e, 0xca, 0xf2, 0xae, 0x57, 0xc9, 0x18, 0xd3, 0x8d, 0x19, 0xc2, 0xec, 0x2f, 0xf7, 0x07,
	0x45, 0xaa, 0xd6, 0xc9, 0xee, 0x56, 0x25, 0x55, 0x49, 0x55, 0x52, 0x95, 0xa4, 0x2a, 0x87, 0x1c,
	0x72, 0xf0, 0x71, 0x0f, 0x7b, 0x48, 0x0e, 0xf9, 0x17, 0x52, 0xf9, 0x3f, 0x92, 0x43, 0xee, 0xb9,
	0xa7, 0x80, 0xfe, 0xc2, 0xd7, 0x0c, 0xd0, 0x39, 0x91, 0xfd, 0x03, 0x7e, 0xef, 0xa1, 0xd1, 0xc0,
	0xc3, 0x03, 0x1e, 0xde, 0x80, 0x3f, 0x99, 0xc6, 0xf1, 0x34, 0xc0, 0xcb, 0xc8, 0xcf, 0x96, 0xcb,
	0x7f, 0xe9, 0x7f, 0x47, 0xab, 0xcb, 0x38, 0x4d, 0xe3, 0x34, 0xab, 0xfe, 0x2c, 0x25, 0x69, 0x9c,
	0xc7, 0xce, 0x5b, 0x65, 0x8d, 0x25, 0xe4, 0x67, 0x4b, 0x4d, 0xe5, 0xa5, 0xa3, 0xd5, 0xa5, 0xb2,
	0xd6, 0xf5, 0x99, 0xc2, 0xbc, 0x38, 0x0c, 0xe3, 0x68, 0x39, 0x89, 0x03, 0xe2, 0x9d, 0x94, 0xc2,
	0xae, 0xff, 0xc4, 0x50, 0xf9, 0x08, 0x05, 0x05, 0xae, 0xea, 0x7e, 0x68, 0x68, 0x25, 0xf2, 0x3c,
	0x9c, 0x65, 0x23, 0x12, 0x1d, 0x91, 0x1c, 0xe5, 0x24, 0x8e, 0x46, 0xac, 0xa0, 0x62, 0xaf, 0x9b,
	0xd9, 0x71, 0x11, 0xe5, 0xa3, 0x71, 0xe1, 0x4f, 0x71, 0x3e, 0x4a, 0xd2, 0x38, 0x89, 0x33, 0x14,
	0x08, 0x32, 0x3e, 0x30, 0xc9, 0xf0, 0x47, 0x5e, 0x91, 0xe5, 0x71, 0x48, 0x5e, 0xe2, 0x54, 0x60,
	0xbe, 0x63, 0x66, 0xf2, 0xd5, 0xef, 0x98, 0xab, 0x4f, 0xd3, 0xb8, 0x48, 0x46, 0x12, 0xef, 0x13,
	0x5b, 0xde, 0x98, 0xf8, 0xa3, 0x30, 0xf6, 0xc9, 0x84, 0x48, 0x0d, 0xfd, 0xc8, 0x56, 0x82, 0x97,
	0x92, 0x1c, 0xa7, 0x72, 0x2f, 0xaf, 0xda, 0xd2, 0x3b, 0x76, 0x6b, 0x49, 0x9a, 0x60, 0x2c, 0xbe,
	0xef, 0x5d, 0x33, 0x33, 0x41, 0x29, 0x0a, 0x71, 0x2e, 0xbd, 0xe6, 0xfb, 0x66, 0x62, 0x76, 0x80,
	0x52, 0x12, 0x4d, 0x05, 0xda, 0x92, 0x91, 0x76, 0x2c, 0xd4, 0x7f, 0xd7, 0x54, 0x3f, 0xcb, 0x70,
	0xde, 0xad, 0x61, 0x8c, 0x11, 0x90, 0xe8, 0x50, 0xa0, 0xdd, 0x33, 0xd1, 0x8a, 0xfc, 0x00, 0x47,
	0x39, 0xf1, 0xd4, 0x89, 0xf1, 0x81, 0x05, 0x35, 0x4e, 0xc9, 0x4b, 0x95, 0xb9, 0x62, 0x60, 0x8e,
	0x89, 0xef, 0xcb, 0x3d, 0x78, 0xdf, 0x92, 0x93, 0xe5, 0x29, 0xca, 0xf1, 0xf4, 0xa4, 0x53, 0x53,
	0xc7, 0x24, 0x08, 0x18, 0x19, 0xe7, 0xd2, 0x10, 0x5b, 0x33, 0x30, 0x3d, 0x14, 0x26, 0x88, 0x4c,
	0xa3, 0x7a, 0xfa, 0x77, 0x99, 0x12, 0x0d, 0x57, 0x3f, 0x25, 0xee, 0xd9, 0xd2, 0xfd, 0x14, 0x4d,
	0xf2, 0x4e, 0xb3, 0xa9, 0xa1, 0xf2, 0xa4, 0x8f, 0xad, 0x49, 0xc7, 0x09, 0x4e, 0x49, 0x88, 0xa3,
	0xbc, 0x53, 0x27, 0x37, 0x7c, 0x65, 0x36, 0x5a, 0x6b, 0xa6, 0x53, 0x0b, 0xfb, 0x23, 0x79, 0xec,
	0x1b, 0x35, 0x1f, 0xa0, 0x68, 0x8a, 0x47, 0x59, 0x8e, 0xf2, 0x22, 0xeb, 0xf6, 0x79, 0xe3, 0x20,
	0xc0, 0x1e, 0x1b, 0xc0, 0x19, 0x79, 0x89, 0x3b, 0x8d, 0x62, 0x2f, 0x8e, 0x72, 0x7c, 0x2c, 0xb6,
	0xf4, 0x43, 0x33, 0xe7, 0x08, 0xa7, 0x19, 0xd5, 0x87, 0x3c, 0x65, 0xde, 0x3c, 0xec, 0xc0, 0xf6,
	0xbf, 0x2e, 0xb2, 0x9c, 0x7d, 0xa3, 0x22, 0x09, 0x62, 0xc9, 0xdc, 0x77, 0x68, 0x86, 0x86, 0x7d,
	0xd7, 0xc8, 0x2e, 0xa2, 0x3c, 0x3d, 0x19, 0x79, 0xb1, 0x2f, 0xf6, 0xd8, 0x6d, 0x13, 0x51, 0x3b,
	0x0f, 0x8c, 0x5f, 0xb7, 0x48, 0x53, 0x1c, 0x79, 0x1a, 0x7d, 0xc6, 0xaf, 0xcb, 0xd6, 0xdc, 0x11,
	0x89, 0x72, 0x9c, 0xe2, 0x4c, 0xfc, 0x52, 0x0f, 0xac, 0xb8, 0x38, 0x1d, 0x79, 0x01, 0xa1, 0xbd,
	0xac, 0x58, 0xd6, 0x55, 0x5b, 0x01, 0xdd, 0xde, 0xb5, 0x22, 0x29, 0x73, 0xe8, 0x13, 0x5b, 0x66,
	0x88, 0x22, 0x34, 0xc5, 0x69, 0xf7, 0x06, 0xfb, 0x28, 0x47, 0x63, 0x94, 0x89, 0x5d, 0xbc, 0x6c,
	0x26, 0xe1, 0x4e, 0xeb, 0x14, 0x23, 0xa4, 0x6c, 0xbe, 0x76, 0x6a, 0x1c, 0xc9, 0x72, 0x12, 0x79,
	0x79, 0xa7, 0xc6, 0xe1, 0xa8, 0x08, 0x3b, 0x19, 0x22, 0x7c, 0x9c, 0xe3, 0x88, 0x4d, 0x0b, 0xd6,
	0xff, 0x24, 0xc7, 0x61, 0xa7, 0x79, 0xd5, 0xf2, 0x33, 0x9c, 0xe7, 0xf2, 0x12, 0xb7, 0x61, 0x60,
	0x33, 0x9d, 0x28, 0xcf, 0x53, 0x32, 0x2e, 0x68, 0x27, 0xe1, 0x09, 0xa6, 0x03, 0xbf, 0xdb, 0x07,
	0x51, 0x06, 0xce, 0x6d, 0x1b, 0x82, 0xf2, 0xa6, 0xf7, 0xad, 0x59, 0x39, 0x4a, 0xe5, 0x85, 0xf1,
	0x81, 0x35, 0xf9, 0x08, 0x05, 0xc4, 0x57, 0x1d, 0x88, 0xbb, 0x36, 0x02, 0x42, 0x94, 0x24, 0x72,
	0x17, 0x9b, 0xfc, 0xaa, 0x09, 0xc1, 0x81, 0xdf, 0x69, 0xbc, 0x96, 0x8c, 0x10, 0x65, 0xdd, 0x26,
	0xd3, 0xa4, 0x88, 0x54, 0xfb, 0x7e, 0xdf, 0x96, 0x94, 0xa0, 0x34, 0x93, 0x5f, 0x6d, 0xc7, 0x40,
	0x9e, 0xe2, 0xb8, 0xfe, 0x16, 0x5e, 0x1c, 0x65, 0x39, 0x8a, 0xf2, 0x51, 0x56, 0x4c, 0xa7, 0x38,
	0x53, 0xda, 0xf1, 0x9e, 0x41, 0xd4, 0x01, 0x46, 0x7e, 0xc7, 0x7d, 0x0a, 0xf1, 0x3b, 0x7d, 0x07,
	0x12, 0xa2, 0x8e, 0x06, 0x80, 0x19, 0xf1, 0x48, 0xda, 0x77, 0xad, 0x18, 0x49, 0x47, 0x31, 0x91,
	0x26, 0x90, 0xc9, 0x90, 0x1e, 0xe2, 0x93, 0x17, 0x71, 0xea, 0x8f, 0x92, 0x00, 0xd1, 0x65, 0x56,
	0xb3, 0x2d, 0xe9, 0x24, 0x41, 0xeb, 0x8a, 0xdd, 0xed, 0x22, 0xa1, 0x8b, 0x01, 0x12, 0x88, 0xc4,
	0xc7, 0xa8, 0xd3, 0xbc, 0x14, 0xd8, 0xf5, 0x03, 0x2f, 0x60, 0xd8, 0x45, 0x40, 0x84, 0xa7, 0x28,
	0x27, 0x47, 0x58, 0x2b, 0xc9, 0x34, 0x40, 0x02, 0x34, 0xc6, 0xdd, 0xf6, 0xd8, 0x01, 0x8a, 0xa6,
	0x05, 0x1d, 0x55, 0x8a, 0x9b, 0x60, 0x72, 0xb4, 0x03, 0x92, 0xe5, 0xa3, 0x38, 0xc1, 0x69, 0x77,
	0x43, 0x34, 0x73, 0xb1, 0x35, 0x12, 0xb1, 0x4f, 0xd0, 0x68, 0x5c, 0x44, 0x7e, 0xd0, 0x6d, 0xfd,
	0x2c, 0x89, 0x13, 0x22, 0xd1, 0xec, 0xf4, 0x69, 0x9c, 0x3d, 0xa3, 0xbe, 0x22, 0xc8, 0x49, 0x12,
	0xc8, 0xc7, 0x01, 0xef, 0x19, 0x69, 0x79, 0x57, 0xcf, 0xa0, 0xa2, 0x7c, 0x1d, 0x8f, 0x3b, 0xcd,
	0xb6, 0x08, 0xbf, 0x18, 0xa5, 0x38, 0x8b, 0x8b, 0xd4, 0xc3, 0x23, 0x2f, 0xc5, 0xea, 0x47, 0x34,
	0xad, 0x80, 0x51, 0x9c, 0x8f, 0x70, 0x98, 0xe4, 0x27, 0x9d, 0x9c, 0x4b, 0xca, 0x7a, 0x71, 0x40,
	0x72, 0x4c, 0x87, 0x8f, 0xb4, 0xe6, 0x9a, 0x16, 0xe9, 0xa8, 0x08, 0x82, 0x4e, 0x2f, 0x19, 0x4f,
	0x26, 0x01, 0x89, 0xf0, 0xa8, 0xc8, 0x70, 0x3a, 0xa2, 0x8e, 0x9a, 0xd2, 0x4d, 0xa6, 0x63, 0xac,
	0x76, 0x7c, 0x57, 0xc7, 0x61, 0x3e, 0x8e, 0x88, 0xd4, 0xec, 0x55, 0x2b, 0x19, 0x71, 0xda, 0xa9,
	0x9f, 0x12, 0x94, 0xe6, 0x04, 0x05, 0xa3, 0x09, 0x22, 0x41, 0x91, 0xe2, 0x4e, 0x0b, 0x62, 0x82,
	0x4e, 0xe8, 0x16, 0x27, 0x1b, 0xd5, 0x87, 0x70, 0x5d, 0xa6, 0x75, 0x79, 0x9e, 0x38, 0x9a, 0x90,
	0x48, 0x39, 0x6c, 0xd8, 0xb6, 0xa3, 0x72, 0xde, 0x89, 0xfe, 0xb4, 0xe8, 0xbe, 0xa5, 0x1c, 0x12,
	0x07, 0xea, 0xb0, 0x34, 0x99, 0xc0, 0x6f, 0x0a, 0x9c, 0x9e, 0x74, 0x64, 0xc4, 0x39, 0xea, 0xc4,
	0x50, 0x1d, 0x71, 0xd3, 0x2c, 0x4d, 0x31, 0xf2, 0x0e, 0xd4, 0x85, 0xe9, 0x9e, 0x91, 0xe6, 0xc5,
	0x61, 0x88, 0x23, 0x8d, 0xb3, 0x77, 0xc7, 0x48, 0x9d, 0x52, 0x8a, 0x62, 0xd6, 0x57, 0x8c, 0xbc,
	0x6f, 0x0a, 0x79, 0xd7, 0x37, 0x30, 0x72, 0x2a, 0x43, 0x32, 0x7b, 0x92, 0x0c, 0x6d, 0x45, 0x94,
	0x23, 0x36, 0x20, 0x21, 0xc9, 0x47, 0xf8, 0xd8, 0xc3, 0xd8, 0x97, 0x24, 0x99, 0x5e, 0x40, 0xb7,
	0x87, 0x30, 0x8d, 0xb8, 0xea, 0x04, 0x45, 0xbf, 0xd3, 0x7e, 0xdf, 0x8e, 0xdc, 0xf5, 0xe8, 0x91,
	0x9d, 0x9c, 0x54, 0xef, 0xd9, 0x61, 0xc1, 0xce, 0x72, 0x76, 0x8c, 0x3a, 0x89, 0xd3, 0x10, 0xfd,
	0xbf, 0x98, 0x01, 0x8e, 0xa6, 0xf9, 0x41, 0x27, 0x53, 0x9f, 0x93, 0x10, 0x8f, 0x5e, 0xc6, 0x51,
	0xb7, 0x73, 0x8b, 0x22, 0x0d, 0x46, 0xea, 0xce, 0xc1, 0xc8, 0x6a, 0x6c, 0x75, 0x67, 0x16, 0xf3,
	0x48, 0x78, 0xd6, 0x96, 0x81, 0x75, 0x12, 0x17, 0x79, 0x31, 0xc6, 0xa3, 0x23, 0xe2, 0xe3, 0x78,
	0x44, 0x67, 0x0c, 0x3b, 0x27, 0x95, 0x07, 0x40, 0x15, 0xa2, 0x59, 0x66, 0x4f, 0xe3, 0x62, 0xb2,
	0xfc, 0x22, 0x45, 0x49, 0x82, 0xeb, 0x10, 0xce, 0xf5, 0xef, 0xd7, 0x6a, 0x12, 0xb2, 0x8c, 0xa2,
	0x28, 0x2e, 0xc3, 0x25, 0x55, 0xe9, 0xe2, 0x97, 0xe0, 0xd2, 0x43, 0x56, 0x3e, 0xf0, 0xb3, 0xed,
	0xd2, 0x9a, 0x3b, 0xdb, 0xe0, 0xd5, 0xb2, 0x09, 0xb0, 0x7f, 0xf3, 0x95, 0x5b, 0xe7, 0x56, 0x96,
	0x96, 0xe6, 0x47, 0x81, 0x96, 0x1a, 0x09, 0x5b, 0xf4, 0xd9, 0xad, 0xd8, 0x8b, 0xff, 0x71, 0x0a,
	0x2c, 0x88, 0x45, 0xce, 0x10, 0x00, 0x56, 0xc8, 0x66, 0x3e, 0xec, 0xdf, 0xec, 0xdf, 0x3a, 0xb7,
	0xf2, 0xc7, 0x26, 0xf1, 0x8c, 0xba, 0x11, 0xfb, 0xd8, 0x3d, 0x8b, 0xeb, 0x7f, 0x1d, 0x08, 0x4e,
	0x87, 0x38, 0xcb, 0xd0, 0x14, 0xc3, 0x53, 0x37, 0xfb, 0xb7, 0xce, 0xba, 0xf5, 0xa3, 0xf3, 0x00,
	0x9c, 0xce, 0x53, 0x32, 0x9d, 0xe2, 0x14, 0xbe, 0xc2, 0x14, 0xfc, 0x78, 0xa6, 0x82, 0x32, 0xf0,
	0xb4, 0xf4, 0x0c, 0x05, 0x05, 0x76, 0x6b, 0x96, 0xb3, 0x03, 0xce, 0x04, 0x71, 0x79, 0x78, 0x0e,
	0xff, 0x80, 0x49, 0x78, 0xc7, 0xaa, 0x89, 0xbb, 0x15, 0xc9, 0x6d, 0xe8, 0xce, 0x36, 0x38, 0xed,
	0xe3, 0x1c, 0x91, 0x20, 0x83, 0xdf, 0x63, 0x92, 0x7e, 0x6a, 0x25, 0x69, 0xb3, 0xe4, 0xb8, 0x35,
	0x79, 0xf1, 0xf7, 0x87, 0xe0, 0x6c, 0xd3, 0x0d, 0x8e, 0x0f, 0x2e, 0x08, 0x86, 0x90, 0x75, 0xe4,
	0xc2, 0xca, 0x47, 0x26, 0xd9, 0x6e, 0x49, 0x62, 0x82, 0xb6, 0xa2, 0x22, 0x14, 0x80, 0x61, 0xcf,
	0x3d, 0x9f, 0x72, 0xcf, 0xce, 0x5f, 0xf6, 0xc1, 0x35, 0xfd, 0x09, 0x3d, 0xeb, 0xf1, 0x85, 0x95,
	0x47, 0x26, 0x7d, 0xeb, 0x25, 0x7b, 0xbf, 0x22, 0xb7, 0x7a, 0x75, 0x05, 0xc3, 0x9e, 0x7b, 0x75,
	0xac, 0xc1, 0x1d, 0x02, 0x2e, 0x4a, 0x93, 0x95, 0x7d, 0xd7, 0x85, 0x95, 0x07, 0x26, 0xfd, 0x9f,
	0xa7, 0xc1, 0x36, 0x65, 0xb5, 0x8a, 0x05, 0x64, 0xd8, 0x73, 0x2f, 0x14, 0x3c, 0xe0, 0x7c, 0x0b,
	0xae, 0xea, 0x36, 0x0e, 0x6c, 0x14, 0x2c, 0xac, 0xec, 0x98, 0xf4, 0xed, 0x92, 0x2c, 0x7f, 0x52,
	0x53, 0x5b, 0xa5, 0x2a, 0x3c, 0xec, 0xb9, 0x4e, 0xa0, 0xa0, 0xce, 0x73, 0x70, 0x8e, 0x73, 0x10,
	0xd8, 0x88, 0x59, 0x58, 0xb9, 0x67, 0xd2, 0xfa, 0x19, 0xa5, 0xb4, 0xda, 0xda, 0xc7, 0x61, 0xcf,
	0x05, 0xdf, 0x34, 0x4f, 0xce, 0x57, 0xe0, 0x3c, 0xef, 0xc1, 0xc3, 0xd3, 0x4c, 0xfc, 0x7d, 0x93,
	0xf8, 0x47, 0x8c, 0xd3, 0xca, 0xe7, 0x9e, 0x87, 0x3d, 0xf7, 0x5c, 0xd8, 0x3e, 0x3a, 0x21, 0xb8,
	0x24, 0x1f, 0xad, 0xc0, 0x33, 0x4c, 0xcb, 0xc0, 0xa4, 0x85, 0x7d, 0x84, 0x47, 0x28, 0x3b, 0x6c,
	0x15, 0x89, 0xd0, 0xb0, 0xe7, 0x2e, 0x4c, 0x04, 0xc4, 0xf9, 0x15, 0xb8, 0xa2, 0x89, 0x57, 0xc1,
	0xb3, 0x76, 0x1f, 0x6b, 0xc0, 0x53, 0x5b, 0xad, 0x2a, 0x4c, 0x3f, 0x16, 0x52, 0x50, 0xe7, 0x00,
	0x2c, 0x88, 0xe7, 0x17, 0x10, 0xd8, 0x8d, 0xca, 0x9d, 0x8a, 0xd5, 0xea, 0x14, 0x10, 0x3a, 0x2a,
	0x09, 0x0f, 0x94, 0xc3, 0xa2, 0xf1, 0x02, 0xe1, 0x39, 0xdb, 0x61, 0x11, 0xe7, 0x88, 0x1f, 0x16,
	0xf5, 0x63, 0x39, 0x2c, 0xea, 0x27, 0x67, 0x0f, 0x9c, 0xa9, 0xb7, 0x8f, 0xf0, 0x3c, 0x13, 0xbd,
	0x6a, 0xec, 0x3a, 0x6e, 0x46, 0x0d, 0x9a, 0xb9, 0x74, 0x1a, 0x55, 0xb3, 0x08, 0x83, 0x05, 0xf1,
	0x8c, 0x05, 0x5e, 0xb0, 0xb3, 0x4f, 0x03, 0xff, 0x21, 0x25, 0xf1, 0xc2, 0x5b, 0x80, 0xda, 0x27,
	0xc4, 0x3d, 0x3b, 0xbf, 0xe9, 0x83, 0xd7, 0xb4, 0xa1, 0x3c, 0xb8, 0xc0, 0xd4, 0x7d, 0x6a, 0x52,
	0xb7, 0x51, 0x91, 0xd7, 0x19, 0xb7, 0xd5, 0xaa, 0xc1, 0x87, 0x3d, 0xf7, 0x8a, 0xa7, 0xc2, 0x74,
	0x10, 0x88, 0x87, 0x41, 0xf0, 0xa2, 0xdd, 0x20, 0xa8, 0x75, 0xa8, 0x5a, 0x9b, 0x41, 0xe0, 0xf1,
	0x80, 0xf3, 0xeb, 0x3e, 0xb8, 0xaa, 0x0b, 0xec, 0xc2, 0xcb, 0x76, 0x2f, 0x3b, 0x10, 0xb8, 0xe2,
	0x78, 0x97, 0x70, 0xfa, 0xb2, 0x48, 0x85, 0x9d, 0xbf, 0xe9, 0x03, 0x38, 0xeb, 0x4a, 0x00, 0x74,
	0x58, 0x33, 0x9e, 0x58, 0x7e, 0xe2, 0x8d, 0x9a, 0xad, 0x7c, 0x6b, 0xb1, 0x64, 0xd8, 0x73, 0x5f,
	0x43, 0xba, 0x02, 0xe7, 0x04, 0x5c, 0xd1, 0xdc, 0xc0, 0x80, 0x57, 0x58, 0x33, 0x1e, 0x9a, 0x9b,
	0xb1, 0xd1, 0x30, 0xf9, 0x26, 0x48, 0xe8, 0xb0, 0xe7, 0x5e, 0x46, 0x32, 0xe8, 0x44, 0xe0, 0xb2,
	0x72, 0x27, 0x03, 0xbe, 0x66, 0x67, 0xe7, 0xaa, 0xb7, 0x14, 0x67, 0x10, 0x0f, 0x51, 0x3b, 0x87,
	0x04, 0x84, 0x9a, 0x55, 0xf9, 0x8a, 0x02, 0x84, 0xb6, 0xea, 0xf6, 0x4b, 0x1a, 0xaf, 0x8e, 0x87,
	0x4a, 0x75, 0x3c, 0xe2, 0x3c, 0x05, 0x67, 0x9b, 0xab, 0x0d, 0xf0, 0x0d, 0xa6, 0xe7, 0x7d, 0xb3,
	0x9e, 0x63, 0x5e, 0xc3, 0x71, 0x2d, 0xfb, 0x0c, 0xaa, 0xfe, 0xa7, 0x46, 0x8c, 0xbb, 0x00, 0x01,
	0x0f, 0xed, 0x8c, 0xd8, 0x80, 0x52, 0x38, 0xc9, 0xcd, 0x23, 0x35, 0x62, 0xa8, 0x79, 0xa2, 0x1e,
	0x91, 0x70, 0x01, 0x01, 0x5e, 0xb7, 0xb3, 0x38, 0x95, 0x23, 0xa2, 0x78, 0x26, 0x8d, 0xc5, 0x19,
	0x73, 0xcf, 0xce, 0xdf, 0xf6, 0x01, 0x9c, 0x75, 0x01, 0x00, 0xbe, 0xc9, 0x34, 0x7e, 0x66, 0x3b,
	0xf1, 0x35, 0x33, 0x40, 0x5f, 0x34, 0xec, 0xb9, 0xd7, 0x3c, 0x6d, 0x49, 0x69, 0x01, 0x75, 0xd1,
	0x6e, 0xf8, 0x03, 0x4b, 0x0b, 0xd8, 0x90, 0xf7, 0xc9, 0x4b, 0x6e, 0x8d, 0xd7, 0xe0, 0xcc, 0x02,
	0xaa, 0xb0, 0x53, 0x00, 0x47, 0x8d, 0x1d, 0xc3, 0x90, 0xe9, 0xdf, 0x32, 0xeb, 0x67, 0x4c, 0xea,
	0xd4, 0xf2, 0xca, 0x45, 0x70, 0xd8, 0x73, 0x2f, 0x79, 0x12, 0xe6, 0x04, 0xe0, 0xa2, 0xfc, 0x01,
	0x6e, 0xda, 0x4d, 0x09, 0x5d, 0xc7, 0xcb, 0x1d, 0xbe, 0xe0, 0x89, 0x1d, 0x4d, 0xcd, 0xbc, 0x10,
	0xfa, 0x85, 0x5f, 0x5a, 0x9a, 0xf9, 0x8a, 0xc5, 0xe9, 0xe2, 0x11, 0x66, 0xe6, 0x79, 0xc0, 0xf9,
	0x39, 0x00, 0x6d, 0xf8, 0x15, 0xfe, 0x90, 0x69, 0xb9, 0x6b, 0xd2, 0xb2, 0x29, 0x38, 0x68, 0x9b,
	0x9c, 0x7b, 0x76, 0xd6, 0xe7, 0x9d, 0x33, 0x39, 0x4e, 0x0b, 0x17, 0xed, 0xba, 0x8c, 0x4a, 0x74,
	0x29, 0x4d, 0x54, 0xd2, 0x42, 0xb4, 0xcb, 0x7c, 0x01, 0xa1, 0x5d, 0x26, 0xc6, 0x77, 0xe1, 0xdb,
	0x76, 0x5d, 0xb6, 0x59, 0xb1, 0x38, 0x5d, 0x3c, 0x42, 0xbb, 0xcc, 0xe7, 0x01, 0xe7, 0xbb, 0x3e,
	0x78, 0x6b, 0x7e, 0x98, 0x15, 0xfe, 0x88, 0xa9, 0xfe, 0xa5, 0xd1, 0x09, 0xc5, 0xd8, 0x1f, 0xd4,
	0x42, 0xdc, 0x5a, 0x06, 0xe7, 0x91, 0xce, 0x2e, 0x1f, 0xf6, 0xdc, 0x1b, 0x93, 0xd9, 0xc5, 0xb4,
	0x3b, 0xc4, 0xf0, 0x21, 0xfc, 0xb1, 0x5d, 0x77, 0x6c, 0x57, 0x2c, 0xae, 0x15, 0x3c, 0x42, 0xbb,
	0x63, 0xc2, 0x03, 0x6c, 0xdb, 0xa6, 0x0f, 0x3a, 0xc2, 0x3f, 0xb4, 0xdb, 0xb6, 0xd5, 0x0a, 0xf6,
	0x4a, 0xb2, 0xaa, 0x99, 0x2f, 0xa0, 0xdb, 0xb6, 0x89, 0x06, 0xa7, 0x7e, 0x65, 0x1d, 0x40, 0x84,
	0x7f, 0x64, 0xe7, 0x57, 0xee, 0x70, 0xab, 0xe2, 0x4e, 0xeb, 0x57, 0x12, 0xbf, 0x59, 0x42, 0xb8,
	0x18, 0x23, 0xbc, 0x65, 0xb7, 0x84, 0xec, 0x50, 0x0a, 0x27, 0xb7, 0x79, 0xa4, 0x4b, 0x08, 0x69,
	0x9e, 0xa8, 0x43, 0xa1, 0x09, 0x37, 0xc1, 0xc8, 0xce, 0xa1, 0xd8, 0xad, 0xa8, 0xa2, 0x29, 0x53,
	0x50, 0xea, 0x50, 0x04, 0x32, 0x48, 0x6d, 0xa8, 0x1a, 0x3b, 0x82, 0x3f, 0xb1, 0xb3, 0xa1, 0x8f,
	0x28, 0x73, 0x9d, 0x11, 0xb9, 0x4d, 0x9a, 0x04, 0x52, 0x1b, 0x1a, 0x4a, 0x58, 0xab, 0x96, 0x0f,
	0x21, 0xc1, 0xbc, 0x83, 0xda, 0xcf, 0x19, 0x51, 0x52, 0xcb, 0x81, 0x8d, 0x5a, 0x0e, 0xa3, 0x86,
	0x48, 0x0e, 0x78, 0xc1, 0x67, 0x76, 0x86, 0x88, 0xc9, 0xdf, 0x26, 0xca, 0x9b, 0x36, 0x10, 0x35,
	0x44, 0xa1, 0x80, 0x38, 0x09, 0xb8, 0x24, 0xc7, 0xbb, 0xe0, 0x4f, 0x99, 0xba, 0x0d, 0xf3, 0xd6,
	0xb7, 0xe6, 0xf1, 0xdb, 0x5f, 0x01, 0x1b, 0xf6, 0xdc, 0x8b, 0xa1, 0x08, 0x39, 0xff, 0xd4, 0x07,
	0x37, 0xe6, 0x44, 0xb0, 0xe0, 0x3b, 0x4c, 0xfb, 0xe7, 0x26, 0xed, 0x8f, 0xf1, 0x0b, 0xb7, 0x92,
	0xb0, 0x51, 0x09, 0x68, 0x9b, 0x31, 0xab, 0x70, 0xd8, 0x73, 0x61, 0x34, 0xa3, 0xcc, 0x21, 0xe0,
	0xa2, 0x14, 0x17, 0x83, 0x4b, 0x76, 0x56, 0xe8, 0x71, 0x9c, 0x6f, 0x51, 0x16, 0xd7, 0x00, 0x1e,
	0xa1, 0x56, 0x28, 0xe2, 0x01, 0xba, 0x8e, 0xb5, 0x01, 0x31, 0xb8, 0x6c, 0xb7, 0x8e, 0x3d, 0x2e,
	0x02, 0x6e, 0x57, 0xdc, 0x3c, 0xd1, 0x75, 0x2c, 0xaa, 0x1f, 0xa8, 0x25, 0x15, 0x63, 0x56, 0xf0,
	0x5d, 0xbb, 0x77, 0x78, 0x52, 0xb1, 0x5a, 0x0d, 0x02, 0x42, 0xdf, 0x21, 0xe6, 0x01, 0x6a, 0x6f,
	0xf8, 0xc5, 0xf2, 0x3d, 0x3b, 0x7b, 0x23, 0x2d, 0x94, 0xc2, 0x22, 0x09, 0xd2, 0x76, 0x81, 0xa4,
	0x1b, 0x3a, 0x5d, 0x04, 0x05, 0xae, 0xd9, 0xf9, 0x6e, 0xae, 0xc0, 0xe5, 0xcf, 0xf4, 0x14, 0x9c,
	0xfa, 0x6e, 0xa9, 0x0a, 0x3b, 0xdf, 0x80, 0xcb, 0x4a, 0x20, 0x06, 0xae, 0xda, 0xcd, 0x0d, 0x97,
	0x11, 0x45, 0x73, 0x27, 0x61, 0x74, 0x6e, 0xa4, 0x22, 0x44, 0x1d, 0x75, 0x21, 0x04, 0x02, 0x6f,
	0xdb, 0x39, 0xea, 0xfb, 0x25, 0xa9, 0xd5, 0xc5, 0x03, 0xd4, 0x51, 0xcf, 0xb8, 0x67, 0x6a, 0xcb,
	0x35, 0x91, 0x08, 0xf8, 0xbe, 0x9d, 0x2d, 0xdf, 0x67, 0xd4, 0x6d, 0xc6, 0xe4, 0x14, 0xca, 0x28,
	0xb5, 0xe5, 0x99, 0x0c, 0x72, 0xaa, 0xf9, 0x50, 0x06, 0xbc, 0xd3, 0x45, 0xf5, 0x2e, 0x63, 0xca,
	0xaa, 0x39, 0xb4, 0x55, 0xcd, 0x81, 0xce, 0xbf, 0xf4, 0xc1, 0x9b, 0x73, 0x43, 0xc2, 0xf0, 0x2e,
	0x6b, 0xc5, 0x2f, 0xec, 0x66, 0x0a, 0x89, 0xa3, 0x01, 0x93, 0xb1, 0xc9, 0x44, 0xc8, 0xd3, 0x46,
	0x57, 0x3c, 0xec, 0xb9, 0xd7, 0xe3, 0x99, 0xa5, 0xce, 0x3f, 0xf7, 0xc1, 0xf7, 0xe7, 0x45, 0xe3,
	0xe0, 0x07, 0xac, 0x7d, 0x5f, 0x98, 0xc7, 0x5e, 0x29, 0x43, 0xdf, 0xbc, 0x99, 0xa5, 0xc3, 0x9e,
	0xfb, 0x46, 0x3a, 0xab, 0xd0, 0xf9, 0xb7, 0x3e, 0x78, 0xdb, 0x22, 0xce, 0x07, 0xef, 0xb1, 0x36,
	0x7a, 0xb6, 0x6d, 0x64, 0xbb, 0x99, 0x5d, 0x2a, 0x68, 0xab, 0x92, 0xa3, 0xb6, 0x74, 0x46, 0x9d,
	0x61, 0xcf, 0xfd, 0x41, 0x3a, 0xbf, 0x8a, 0xf3, 0xbb, 0x3e, 0xb8, 0x69, 0x0a, 0x14, 0xc1, 0x82,
	0x35, 0x79, 0x64, 0x6a, 0xf2, 0x2f, 0x4a, 0x39, 0xcf, 0xa8, 0x18, 0x97, 0x93, 0xd2, 0x36, 0x78,
	0x6e, 0x8d, 0x61, 0xcf, 0x7d, 0xf3, 0x64, 0x5e, 0x05, 0xe7, 0x1f, 0xfb, 0xe0, 0xc6, 0x9c, 0xac,
	0x14, 0x78, 0x9f, 0xb5, 0x73, 0xdf, 0xf2, 0x0c, 0x65, 0x9d, 0xf8, 0x8f, 0x2a, 0xbe, 0x72, 0x98,
	0x22, 0x97, 0x0d, 0x7b, 0xee, 0xeb, 0x48, 0x5f, 0x44, 0x4d, 0x92, 0x70, 0xed, 0x1b, 0x7e, 0x68,
	0x67, 0x92, 0x36, 0x4a, 0x12, 0xbf, 0x71, 0x6d, 0x01, 0x6a, 0x92, 0x3c, 0xee, 0x99, 0x2e, 0x26,
	0x7c, 0x04, 0xe3, 0x23, 0xbb, 0xc5, 0x44, 0x0a, 0x5f, 0x08, 0xb1, 0x0b, 0x30, 0x69, 0x03, 0x17,
	0x21, 0xb8, 0x24, 0x07, 0x7a, 0xe1, 0xc7, 0x76, 0x3e, 0xd5, 0x3e, 0xe3, 0xed, 0xf3, 0xc7, 0x2c,
	0x22, 0x44, 0x7d, 0xaa, 0x4c, 0x40, 0xd8, 0x1e, 0x43, 0x1f, 0x95, 0x86, 0x0f, 0xec, 0xf6, 0x18,
	0xa5, 0x0a, 0xcd, 0x5e, 0x5c, 0x57, 0x40, 0xf7, 0x18, 0x99, 0x06, 0x77, 0xfe, 0xae, 0x0f, 0xde,
	0x98, 0x99, 0x68, 0x00, 0x3f, 0xe9, 0x76, 0x22, 0xa3, 0xe9, 0x08, 0x7d, 0x11, 0x7f, 0x22, 0x23,
	0x96, 0x38, 0x7f, 0xdd, 0x07, 0xaf, 0xcf, 0xc8, 0x07, 0x80, 0x03, 0xbb, 0x13, 0xd2, 0x8d, 0x86,
	0x3e, 0x90, 0x36, 0x7e, 0xda, 0x92, 0x61, 0xcf, 0x7d, 0xcd, 0xd3, 0x15, 0x38, 0xff, 0xda, 0x07,
	0x8b, 0xe6, 0xec, 0x02, 0x98, 0xd9, 0xd9, 0x33, 0x4e, 0x79, 0x23, 0x48, 0x76, 0xff, 0x0d, 0x75,
	0xa8, 0x3d, 0xf3, 0xe6, 0x57, 0x91, 0x3b, 0x50, 0x68, 0x69, 0xdc, 0xb5, 0x03, 0x67, 0xb7, 0x4f,
	0x6c, 0x15, 0xd7, 0x81, 0x7c, 0x5b, 0xbe, 0x02, 0xe7, 0xf9, 0x5b, 0xb3, 0x70, 0xdd, 0x2e, 0x60,
	0x36, 0x64, 0x9c, 0x56, 0x2b, 0xf7, 0x3c, 0xec, 0xb9, 0xe7, 0x0e, 0xda, 0x47, 0x76, 0x48, 0x22,
	0xdc, 0xd0, 0x87, 0x1b, 0x96, 0x87, 0x24, 0x15, 0x4b, 0x38, 0x90, 0x69, 0x11, 0x76, 0x48, 0xc2,
	0x03, 0xce, 0xb7, 0xe0, 0xaa, 0xee, 0xee, 0x14, 0xdc, 0xb4, 0x0b, 0x96, 0xed, 0x31, 0xee, 0x76,
	0x49, 0x6d, 0x95, 0xaa, 0xf0, 0xb0, 0xe7, 0x3a, 0x89, 0x82, 0xd2, 0xed, 0x40, 0x7b, 0x71, 0x1f,
	0x6e, 0xdb, 0x6d, 0x07, 0xa8, 0x8a, 0x56, 0x57, 0xf3, 0x44, 0xb7, 0x03, 0xb8, 0x7e, 0xa0, 0x9b,
	0x58, 0xf5, 0x66, 0x2d, 0x7c, 0x68, 0xb7, 0x89, 0xfd, 0xb4, 0x64, 0xee, 0x05, 0x88, 0x9b, 0x66,
	0x32, 0x48, 0x37, 0xb1, 0x87, 0x12, 0xc6, 0xf6, 0x78, 0x73, 0xee, 0x04, 0xc3, 0xa1, 0xdd, 0x1e,
	0x8f, 0xd3, 0xa5, 0x46, 0x84, 0x66, 0x15, 0xd2, 0x3d, 0xde, 0xe1, 0x8c, 0x32, 0xe6, 0xc6, 0x58,
	0x5c, 0xd9, 0x85, 0x3b, 0x76, 0xd3, 0x9e, 0x6b, 0xc3, 0xe3, 0x4a, 0x50, 0x05, 0x69, 0xdb, 0xa9,
	0xab, 0x43, 0xa7, 0xfd, 0xe1, 0xfc, 0x2a, 0xcc, 0x33, 0x98, 0x73, 0x49, 0x1b, 0xfe, 0xcc, 0xce,
	0x33, 0xe0, 0x5a, 0xa2, 0xc4, 0x12, 0x67, 0x94, 0x51, 0xcf, 0xe0, 0x50, 0x5f, 0xe4, 0xfc, 0x43,
	0x1f, 0x5c, 0x9f, 0x7d, 0x7f, 0x1a, 0x7e, 0xda, 0xb9, 0x51, 0xf3, 0xba, 0x4e, 0xea, 0x32, 0xbe,
	0x51, 0x42, 0x57, 0xfd, 0x55, 0x1f, 0xbc, 0x3e, 0xe3, 0x4a, 0x38, 0xdc, 0xb5, 0x5b, 0x7c, 0x39,
	0xad, 0x3b, 0x3e, 0x46, 0xda, 0xe6, 0x34, 0x05, 0x74, 0xf1, 0x3d, 0xd4, 0xe0, 0x6c, 0xbb, 0x31,
	0x37, 0x91, 0x1a, 0x3e, 0xb2, 0xdb, 0x6e, 0x0c, 0x4a, 0x21, 0x65, 0x5c, 0x75, 0xaf, 0x12, 0xc1,
	0xb9, 0x74, 0x33, 0x8b, 0xe9, 0x76, 0x03, 0xcd, 0x2c, 0x65, 0x17, 0x47, 0xc4, 0x9b, 0x57, 0xf0,
	0xb1, 0xe5, 0xc5, 0x91, 0x0c, 0xa7, 0xbb, 0x84, 0xbf, 0x29, 0x23, 0x20, 0xec, 0xe2, 0x08, 0x0f,
	0xd0, 0x5d, 0x9f, 0x26, 0x61, 0x11, 0x3e, 0xb1, 0xdb, 0xf5, 0x6d, 0x30, 0xea, 0x3e, 0x63, 0x72,
	0xab, 0x95, 0x8c, 0xd2, 0x5d, 0x9f, 0x27, 0x83, 0xd4, 0xb4, 0xb6, 0xf9, 0x41, 0x70, 0xcf, 0xce,
	0xb4, 0x6e, 0x63, 0x7e, 0x1f, 0xd2, 0x3c, 0x51, 0xd3, 0x3a, 0xa9, 0x1f, 0x9c, 0x7f, 0xef, 0x83,
	0x1f, 0xd9, 0x64, 0xa0, 0xc0, 0xcf, 0x98, 0x52, 0x6c, 0xbc, 0x26, 0x86, 0xe3, 0xa7, 0x4c, 0xd4,
	0x46, 0x25, 0x69, 0xbf, 0x11, 0xd4, 0xb6, 0xc5, 0x54, 0x69, 0xd8, 0x73, 0x6f, 0x4e, 0x0d, 0x75,
	0xe8, 0x6a, 0xa7, 0xcb, 0xb4, 0x85, 0xae, 0xdd, 0x6a, 0x57, 0x5b, 0xd4, 0x4d, 0x4a, 0x55, 0xbd,
	0xc1, 0x16, 0xa6, 0xab, 0x9d, 0xa7, 0xa0, 0x74, 0xe0, 0x49, 0x19, 0x58, 0x70, 0xdf, 0xf2, 0xb4,
	0x1f, 0x63, 0x7f, 0x27, 0xc7, 0xa1, 0xf8, 0x6d, 0x1a, 0x84, 0x9d, 0xf6, 0xf3, 0x00, 0xdd, 0x56,
	0x70, 0x69, 0x15, 0xf0, 0xa9, 0xdd, 0xb6, 0x62, 0x97, 0x52, 0xf8, 0x63, 0xea, 0xfa, 0x91, 0x6e,
	0x2b, 0x82, 0xe6, 0x89, 0x0e, 0x6b, 0x4d, 0x9a, 0x35, 0xfc, 0xc2, 0x6e, 0x58, 0xaf, 0x97, 0xd4,
	0x7d, 0xca, 0xe4, 0x23, 0xac, 0x12, 0x4a, 0x87, 0xf5, 0x58, 0x06, 0x99, 0xed, 0x9d, 0x9d, 0xaf,
	0x09, 0x7f, 0x6e, 0x67, 0x7b, 0xeb, 0x68, 0xdb, 0x06, 0x13, 0xb0, 0x4b, 0xa2, 0x43, 0x35, 0x12,
	0x27, 0x95, 0x51, 0xdb, 0xeb, 0xe9, 0x8b, 0xd8, 0xaa, 0x3f, 0x27, 0x29, 0x13, 0xfe, 0xd2, 0x6e,
	0xd5, 0xaf, 0x35, 0x3f, 0x2a, 0x25, 0xe8, 0x9b, 0x25, 0x17, 0xd2, 0x55, 0xdf, 0x9b, 0x51, 0x46,
	0xbd, 0x20, 0x35, 0x7f, 0x0e, 0x3e, 0xb7, 0xf3, 0x82, 0xe8, 0x10, 0x7b, 0x54, 0x12, 0xc5, 0x71,
	0xc7, 0x83, 0xd4, 0x0b, 0x9a, 0x48, 0x18, 0x33, 0x7b, 0x6a, 0x76, 0x2b, 0xfc, 0x53, 0x4b, 0xb3,
	0x57, 0x51, 0x45, 0x63, 0xa4, 0xa0, 0xcc, 0xec, 0xc9, 0xa0, 0x73, 0xc4, 0xee, 0x7f, 0xc8, 0x3f,
	0x15, 0x01, 0xff, 0xcc, 0xee, 0x95, 0xab, 0x65, 0x5e, 0xd4, 0x2c, 0x83, 0xf4, 0x95, 0x91, 0x84,
	0xb1, 0x57, 0x56, 0x93, 0xe2, 0xe1, 0x57, 0x96, 0xaf, 0x5c, 0x51, 0xa5, 0x57, 0x96, 0x51, 0xf6,
	0xca, 0x32, 0x58, 0x86, 0xfb, 0x75, 0xe9, 0xcf, 0x10, 0x59, 0x86, 0xfb, 0x19, 0x79, 0xa7, 0xe2,
	0xca, 0x5d, 0x2e, 0xe0, 0x2c, 0xdc, 0xaf, 0xc2, 0xce, 0xdf, 0xf3, 0x3b, 0x6e, 0xf9, 0x47, 0x05,
	0xe0, 0xd8, 0x72, 0x56, 0xd6, 0x1e, 0x6b, 0xc3, 0xd7, 0x5c, 0x83, 0x12, 0xcb, 0xd8, 0xac, 0xd4,
	0x17, 0xb1, 0x53, 0x80, 0x99, 0x59, 0xbe, 0xd0, 0xb7, 0x3b, 0x05, 0xd8, 0xaa, 0x05, 0xa8, 0x26,
	0x58, 0x5f, 0x34, 0xec, 0xb9, 0xd7, 0xb0, 0xb6, 0x84, 0xce, 0x46, 0xf5, 0xc7, 0x48, 0x20, 0xb6,
	0x1d, 0x9a, 0x7b, 0x35, 0x91, 0x1f, 0x9a, 0x22, 0x58, 0x0e, 0x4d, 0x11, 0x63, 0x26, 0x73, 0x76,
	0x1a, 0x2e, 0x9c, 0xd8, 0x7d, 0x9c, 0xfa, 0x55, 0x9e, 0x35, 0x7c, 0x75, 0x31, 0x92, 0xca, 0xe8,
	0xc7, 0x99, 0xe8, 0x8b, 0xd8, 0x86, 0x7e, 0x46, 0x0a, 0x35, 0x9c, 0xda, 0x6d, 0xe8, 0x9b, 0xfe,
	0x57, 0x82, 0x00, 0xda, 0x12, 0xba, 0xa1, 0xc7, 0xba, 0x02, 0xe7, 0xb7, 0x7d, 0x70, 0x4d, 0x9f,
	0xe4, 0x0c, 0x0f, 0xec, 0x66, 0x50, 0xdd, 0x01, 0xa5, 0xfb, 0xa1, 0x76, 0x0c, 0x87, 0xd3, 0x19,
	0x34, 0x51, 0x61, 0x76, 0x76, 0xa6, 0xcf, 0x21, 0x82, 0xc4, 0xce, 0x7d, 0x2f, 0x77, 0xdd, 0xcf,
	0x6a, 0xb2, 0xbc, 0x1d, 0x17, 0x0b, 0xa8, 0xfb, 0x9e, 0x68, 0x70, 0x16, 0x86, 0x95, 0xb2, 0xf3,
	0x60, 0x60, 0x19, 0x86, 0x65, 0xbc, 0x9f, 0xc5, 0x63, 0xf9, 0x56, 0x70, 0x0d, 0xb1, 0x30, 0xac,
	0x80, 0x30, 0xe3, 0xa5, 0x4d, 0x1b, 0x83, 0x89, 0x5d, 0xd7, 0xef, 0x95, 0xe4, 0x2a, 0x49, 0x81,
	0x7b, 0x69, 0x15, 0xa7, 0x5d, 0x9f, 0xa8, 0xb0, 0xf3, 0xfb, 0x3e, 0xf8, 0xa1, 0x31, 0x0d, 0x0c,
	0xa6, 0xac, 0x3d, 0xc8, 0xf2, 0x2b, 0x34, 0x72, 0x34, 0xb3, 0x76, 0x7e, 0x95, 0x61, 0xcf, 0x7d,
	0x2b, 0x99, 0x5b, 0x83, 0x1d, 0xeb, 0x4a, 0x89, 0x38, 0xf0, 0xc8, 0xf2, 0x58, 0x97, 0xbc, 0xc4,
	0x65, 0xbc, 0xa0, 0x3d, 0x5a, 0x15, 0x20, 0x76, 0xac, 0x2b, 0x20, 0x6c, 0x17, 0x3e, 0x27, 0x2b,
	0x11, 0xbe, 0xb0, 0xb3, 0x20, 0x4f, 0x4a, 0x11, 0x74, 0xcb, 0xb4, 0x89, 0x72, 0x24, 0x8c, 0x93,
	0x19, 0x65, 0xd4, 0x82, 0xc4, 0xfa, 0x22, 0x36, 0x72, 0xb4, 0x89, 0x99, 0xf0, 0xd8, 0x6e, 0xe4,
	0x3c, 0x8e, 0xf3, 0x2f, 0x5a, 0xae, 0x10, 0xc2, 0x96, 0x71, 0x3a, 0x72, 0x22, 0x15, 0x66, 0x57,
	0x25, 0x54, 0x77, 0xef, 0xc4, 0xf2, 0xaa, 0x84, 0xce, 0xcd, 0xd3, 0xb8, 0x77, 0x97, 0x42, 0xd9,
	0xad, 0x63, 0xfe, 0x95, 0xf2, 0x4b, 0x29, 0xf0, 0xa5, 0xad, 0x7f, 0x55, 0x52, 0xa5, 0xeb, 0x75,
	0x32, 0x5a, 0xfa, 0x57, 0x12, 0xc8, 0xec, 0xf6, 0x8c, 0x1f, 0x59, 0x83, 0xbf, 0xb2, 0xbc, 0xeb,
	0xcb, 0xe8, 0x3b, 0x0d, 0x5b, 0xd8, 0xd2, 0xab, 0x25, 0xec, 0xae, 0xaf, 0xae, 0x80, 0x4e, 0x03,
	0x39, 0x45, 0x11, 0x7e, 0x6b, 0x37, 0x0d, 0x5c, 0xca, 0x13, 0xcf, 0xf7, 0x44, 0x88, 0x4e, 0x83,
	0x54, 0x40, 0x1c, 0x1f, 0x5c, 0x10, 0x7e, 0x64, 0x00, 0xfe, 0xb9, 0x5d, 0x40, 0x68, 0xa7, 0x24,
	0xf1, 0xf7, 0xfa, 0x5b, 0x60, 0xd8, 0x73, 0xcf, 0x13, 0xee, 0xb9, 0x5c, 0x07, 0xb4, 0xb9, 0xb0,
	0xf0, 0x2f, 0x2c, 0xd7, 0x81, 0x8a, 0x5d, 0x1d, 0x90, 0xf0, 0x26, 0x51, 0x2d, 0x60, 0xeb, 0x80,
	0x06, 0x77, 0xbe, 0x06, 0x17, 0xa5, 0x0c, 0x3a, 0xf8, 0xeb, 0xbe, 0xdd, 0x6e, 0xf5, 0x29, 0x09,
	0xf1, 0x97, 0x71, 0xc4, 0xbd, 0xb1, 0x80, 0xd0, 0xdd, 0x6a, 0xce, 0x03, 0x4e, 0x04, 0x2e, 0xc9,
	0xbf, 0x69, 0x06, 0x7f, 0xd3, 0xb7, 0xbc, 0xca, 0x4c, 0x89, 0xe2, 0x1c, 0x12, 0x21, 0x76, 0x95,
	0x59, 0x40, 0xe8, 0xbb, 0x49, 0x19, 0x7b, 0xf0, 0xb7, 0x7d, 0xfb, 0x23, 0x20, 0x6a, 0x86, 0xc4,
	0x23, 0xa0, 0x06, 0xa9, 0x8f, 0x80, 0x1a, 0x60, 0xfd, 0x3c, 0x9f, 0xda, 0xb6, 0xf8, 0x5f, 0x7d,
	0x70, 0x41, 0x48, 0x0a, 0x73, 0x22, 0x70, 0xa5, 0x0c, 0x00, 0x26, 0x28, 0x3f, 0x18, 0xe1, 0x00,
	0xb3, 0x4f, 0x01, 0x4f, 0xb1, 0x14, 0xbb, 0x8f, 0x3b, 0x25, 0x98, 0x95, 0x71, 0xc0, 0x3d, 0x94,
	0x1f, 0x6c, 0x95, 0x62, 0xdc, 0xcb, 0x13, 0x09, 0xc9, 0xae, 0xfb, 0xe0, 0x92, 0x5c, 0xcd, 0x79,
	0x13, 0x94, 0x41, 0xc3, 0x51, 0x84, 0xc2, 0x32, 0xfd, 0xee, 0xac, 0x7b, 0x96, 0x21, 0x8f, 0x51,
	0x88, 0x9d, 0xf7, 0xc0, 0xf7, 0x48, 0xe4, 0xe3, 0x63, 0x96, 0xdf, 0x75, 0x6e, 0xe5, 0x46, 0xdd,
	0xa8, 0x3a, 0xb5, 0x70, 0x69, 0x27, 0xca, 0xef, 0xdc, 0x2e, 0xb3, 0xe5, 0xca, 0x9a, 0x8b, 0xdf,
	0x9d, 0x02, 0xe7, 0xf9, 0x94, 0x35, 0xe7, 0x36, 0xb8, 0x56, 0x44, 0x49, 0x31, 0x0e, 0x48, 0x76,
	0x50, 0x1b, 0xea, 0x36, 0xdb, 0xef, 0xac, 0x7b, 0x95, 0x2b, 0x6d, 0x33, 0xda, 0x12, 0x00, 0x15,
	0x9f, 0xa8, 0x4e, 0x9c, 0x2b, 0x1b, 0x73, 0xa7, 0xa3, 0x57, 0x54, 0xa7, 0xd0, 0x5d, 0x4b, 0xb4,
	0xb8, 0xf3, 0x75, 0xe3, 0x85, 0xd5, 0x01, 0x91, 0x5a, 0x5f, 0x99, 0x34, 0x78, 0xbb, 0x53, 0x48,
	0xa4, 0xd6, 0x76, 0x35, 0xd1, 0xa0, 0x8b, 0xff, 0xdb, 0x07, 0xd7, 0xf4, 0xcd, 0x73, 0x3e, 0x06,
	0x37, 0xa8, 0xaf, 0xca, 0xb2, 0x88, 0xaa, 0xf6, 0xf8, 0x38, 0xf3, 0x52, 0x92, 0xb0, 0xf4, 0xc3,
	0x32, 0xb5, 0xf1, 0x8d, 0xba, 0x4a, 0x29, 0x64, 0xb3, 0xad, 0xe0, 0x6c, 0x82, 0x57, 0x0e, 0xf1,
	0x49, 0x95, 0xa6, 0xb8, 0x62, 0x4a, 0x74, 0x94, 0x1a, 0xf1, 0x29, 0x3e, 0x71, 0x29, 0xdd, 0x79,
	0x17, 0x5c, 0x95, 0x5b, 0xc1, 0x46, 0xc8, 0xf7, 0x98, 0x7a, 0x47, 0x54, 0xcf, 0x86, 0xca, 0xdb,
	0xe0, 0x02, 0xc9, 0x46, 0xf8, 0x18, 0x87, 0x49, 0x4e, 0xc6, 0x01, 0x86, 0xaf, 0xde, 0xec, 0xdf,
	0x3a, 0xe3, 0x9e, 0x27, 0xd9, 0x56, 0x83, 0x2d, 0xbe, 0x04, 0x57, 0x75, 0xbd, 0xe4, 0x8c, 0x9b,
	0x60, 0x54, 0x1e, 0x27, 0xc4, 0x1b, 0xe1, 0x28, 0x4f, 0x09, 0xae, 0xd3, 0x4d, 0xdf, 0xb5, 0x7b,
	0x8b, 0xa7, 0x94, 0xba, 0x15, 0xe5, 0xe9, 0x49, 0x1d, 0x71, 0x6a, 0x10, 0x82, 0xb3, 0xf5, 0xff,
	0x66, 0xd1, 0xcf, 0xd0, 0xf0, 0x15, 0xd7, 0xcf, 0xb1, 0x31, 0x98, 0xed, 0xd1, 0x11, 0xbe, 0xd7,
	0xff, 0x72, 0xb3, 0xaa, 0x3e, 0x8d, 0x03, 0x14, 0x4d, 0x97, 0xe2, 0x74, 0xba, 0x3c, 0xc5, 0x11,
	0x1b, 0xff, 0x75, 0x8e, 0x6e, 0x42, 0xb2, 0x59, 0x29, 0xbb, 0xf7, 0xcb, 0x3f, 0xdf, 0x9d, 0x7a,
	0xe5, 0xe1, 0x60, 0xf0, 0xbb, 0x53, 0x6f, 0x95, 0xc9, 0xaf, 0x4b, 0x03, 0x9f, 0x4b, 0x91, 0x5d,
	0x7a, 0xb6, 0x5a, 0x4e, 0xe6, 0xec, 0x3f, 0xeb, 0x0a, 0xcf, 0x07, 0x7e, 0xf6, 0xbc, 0xa9, 0xf0,
	0xfc, 0xd9, 0xea, 0xf3, 0xb2, 0xc2, 0xff, 0x9c, 0x5a, 0x2c, 0xd1, 0xb5, 0xb5, 0x81, 0x9f, 0xad,
	0xad, 0x35, 0x55, 0xd6, 0xd6, 0x9e, 0xad, 0xae, 0xad, 0x95, 0x95, 0xc6, 0xaf, 0xb2, 0xd6, 0xad,
	0xfe, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0x44, 0x2b, 0x29, 0xd8, 0x55, 0x00, 0x00,
}
