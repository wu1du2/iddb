// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/errors/customer_client_link_error.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible CustomerClientLink errors.
type CustomerClientLinkErrorEnum_CustomerClientLinkError int32

const (
	// Enum unspecified.
	CustomerClientLinkErrorEnum_UNSPECIFIED CustomerClientLinkErrorEnum_CustomerClientLinkError = 0
	// The received error code is not known in this version.
	CustomerClientLinkErrorEnum_UNKNOWN CustomerClientLinkErrorEnum_CustomerClientLinkError = 1
	// Trying to manage a client that already in being managed by customer.
	CustomerClientLinkErrorEnum_CLIENT_ALREADY_INVITED_BY_THIS_MANAGER CustomerClientLinkErrorEnum_CustomerClientLinkError = 2
	// Already managed by some other manager in the hierarchy.
	CustomerClientLinkErrorEnum_CLIENT_ALREADY_MANAGED_IN_HIERARCHY CustomerClientLinkErrorEnum_CustomerClientLinkError = 3
	// Attempt to create a cycle in the hierarchy.
	CustomerClientLinkErrorEnum_CYCLIC_LINK_NOT_ALLOWED CustomerClientLinkErrorEnum_CustomerClientLinkError = 4
	// Managed accounts has the maximum number of linked accounts.
	CustomerClientLinkErrorEnum_CUSTOMER_HAS_TOO_MANY_ACCOUNTS CustomerClientLinkErrorEnum_CustomerClientLinkError = 5
	// Invitor has the maximum pending invitations.
	CustomerClientLinkErrorEnum_CLIENT_HAS_TOO_MANY_INVITATIONS CustomerClientLinkErrorEnum_CustomerClientLinkError = 6
	// Attempt to change hidden status of a link that is not active.
	CustomerClientLinkErrorEnum_CANNOT_HIDE_OR_UNHIDE_MANAGER_ACCOUNTS CustomerClientLinkErrorEnum_CustomerClientLinkError = 7
	// Parent manager account has the maximum number of linked accounts.
	CustomerClientLinkErrorEnum_CUSTOMER_HAS_TOO_MANY_ACCOUNTS_AT_MANAGER CustomerClientLinkErrorEnum_CustomerClientLinkError = 8
	// Client has too many managers.
	CustomerClientLinkErrorEnum_CLIENT_HAS_TOO_MANY_MANAGERS CustomerClientLinkErrorEnum_CustomerClientLinkError = 9
)

var CustomerClientLinkErrorEnum_CustomerClientLinkError_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "UNKNOWN",
	2: "CLIENT_ALREADY_INVITED_BY_THIS_MANAGER",
	3: "CLIENT_ALREADY_MANAGED_IN_HIERARCHY",
	4: "CYCLIC_LINK_NOT_ALLOWED",
	5: "CUSTOMER_HAS_TOO_MANY_ACCOUNTS",
	6: "CLIENT_HAS_TOO_MANY_INVITATIONS",
	7: "CANNOT_HIDE_OR_UNHIDE_MANAGER_ACCOUNTS",
	8: "CUSTOMER_HAS_TOO_MANY_ACCOUNTS_AT_MANAGER",
	9: "CLIENT_HAS_TOO_MANY_MANAGERS",
}

var CustomerClientLinkErrorEnum_CustomerClientLinkError_value = map[string]int32{
	"UNSPECIFIED":                               0,
	"UNKNOWN":                                   1,
	"CLIENT_ALREADY_INVITED_BY_THIS_MANAGER":    2,
	"CLIENT_ALREADY_MANAGED_IN_HIERARCHY":       3,
	"CYCLIC_LINK_NOT_ALLOWED":                   4,
	"CUSTOMER_HAS_TOO_MANY_ACCOUNTS":            5,
	"CLIENT_HAS_TOO_MANY_INVITATIONS":           6,
	"CANNOT_HIDE_OR_UNHIDE_MANAGER_ACCOUNTS":    7,
	"CUSTOMER_HAS_TOO_MANY_ACCOUNTS_AT_MANAGER": 8,
	"CLIENT_HAS_TOO_MANY_MANAGERS":              9,
}

func (x CustomerClientLinkErrorEnum_CustomerClientLinkError) String() string {
	return proto.EnumName(CustomerClientLinkErrorEnum_CustomerClientLinkError_name, int32(x))
}

func (CustomerClientLinkErrorEnum_CustomerClientLinkError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3d9c8f09dbc13801, []int{0, 0}
}

// Container for enum describing possible CustomeClientLink errors.
type CustomerClientLinkErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerClientLinkErrorEnum) Reset()         { *m = CustomerClientLinkErrorEnum{} }
func (m *CustomerClientLinkErrorEnum) String() string { return proto.CompactTextString(m) }
func (*CustomerClientLinkErrorEnum) ProtoMessage()    {}
func (*CustomerClientLinkErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d9c8f09dbc13801, []int{0}
}

func (m *CustomerClientLinkErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerClientLinkErrorEnum.Unmarshal(m, b)
}
func (m *CustomerClientLinkErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerClientLinkErrorEnum.Marshal(b, m, deterministic)
}
func (m *CustomerClientLinkErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerClientLinkErrorEnum.Merge(m, src)
}
func (m *CustomerClientLinkErrorEnum) XXX_Size() int {
	return xxx_messageInfo_CustomerClientLinkErrorEnum.Size(m)
}
func (m *CustomerClientLinkErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerClientLinkErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerClientLinkErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v3.errors.CustomerClientLinkErrorEnum_CustomerClientLinkError", CustomerClientLinkErrorEnum_CustomerClientLinkError_name, CustomerClientLinkErrorEnum_CustomerClientLinkError_value)
	proto.RegisterType((*CustomerClientLinkErrorEnum)(nil), "google.ads.googleads.v3.errors.CustomerClientLinkErrorEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/errors/customer_client_link_error.proto", fileDescriptor_3d9c8f09dbc13801)
}

var fileDescriptor_3d9c8f09dbc13801 = []byte{
	// 466 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0x4f, 0x8b, 0xd3, 0x4e,
	0x18, 0xfe, 0x35, 0xfd, 0xb9, 0xab, 0xb3, 0x07, 0xc3, 0x5c, 0x16, 0xdc, 0x52, 0x25, 0x0b, 0x8a,
	0x82, 0xc9, 0x21, 0xb7, 0x78, 0x90, 0xe9, 0x64, 0x6c, 0x86, 0xcd, 0x4e, 0x4a, 0xfe, 0x74, 0x89,
	0x14, 0x86, 0xd8, 0x84, 0x10, 0xb6, 0xcd, 0x94, 0x4c, 0x76, 0xbf, 0x86, 0xdf, 0xc1, 0xa3, 0x1f,
	0xc5, 0x8f, 0xe2, 0xc5, 0xa3, 0x57, 0x49, 0x26, 0xad, 0x28, 0x76, 0x4f, 0x79, 0xc8, 0xfb, 0xfc,
	0x79, 0x87, 0xe7, 0x05, 0xef, 0x4b, 0x21, 0xca, 0x4d, 0x61, 0x65, 0xb9, 0xb4, 0x14, 0xec, 0xd0,
	0xbd, 0x6d, 0x15, 0x4d, 0x23, 0x1a, 0x69, 0xad, 0xef, 0x64, 0x2b, 0xb6, 0x45, 0xc3, 0xd7, 0x9b,
	0xaa, 0xa8, 0x5b, 0xbe, 0xa9, 0xea, 0x5b, 0xde, 0xcf, 0xcc, 0x5d, 0x23, 0x5a, 0x01, 0xa7, 0x4a,
	0x65, 0x66, 0xb9, 0x34, 0x0f, 0x06, 0xe6, 0xbd, 0x6d, 0x2a, 0x83, 0x67, 0x93, 0x7d, 0xc0, 0xae,
	0xb2, 0xb2, 0xba, 0x16, 0x6d, 0xd6, 0x56, 0xa2, 0x96, 0x4a, 0x6d, 0x7c, 0x1e, 0x83, 0x0b, 0x3c,
	0x44, 0xe0, 0x3e, 0xc1, 0xaf, 0xea, 0x5b, 0xd2, 0x49, 0x49, 0x7d, 0xb7, 0x35, 0x7e, 0x68, 0xe0,
	0xfc, 0xc8, 0x1c, 0x3e, 0x05, 0x67, 0x09, 0x8b, 0x16, 0x04, 0xd3, 0x0f, 0x94, 0xb8, 0xfa, 0x7f,
	0xf0, 0x0c, 0x9c, 0x26, 0xec, 0x8a, 0x05, 0x37, 0x4c, 0x1f, 0xc1, 0x37, 0xe0, 0x25, 0xf6, 0x29,
	0x61, 0x31, 0x47, 0x7e, 0x48, 0x90, 0x9b, 0x72, 0xca, 0x96, 0x34, 0x26, 0x2e, 0x9f, 0xa5, 0x3c,
	0xf6, 0x68, 0xc4, 0xaf, 0x11, 0x43, 0x73, 0x12, 0xea, 0x1a, 0x7c, 0x05, 0x2e, 0xff, 0xe2, 0xaa,
	0x99, 0xcb, 0x29, 0xe3, 0x1e, 0x25, 0x21, 0x0a, 0xb1, 0x97, 0xea, 0x63, 0x78, 0x01, 0xce, 0x71,
	0x8a, 0x7d, 0x8a, 0xb9, 0x4f, 0xd9, 0x15, 0x67, 0x41, 0xa7, 0xf0, 0x83, 0x1b, 0xe2, 0xea, 0xff,
	0x43, 0x03, 0x4c, 0x71, 0x12, 0xc5, 0xc1, 0x35, 0x09, 0xb9, 0x87, 0x22, 0x1e, 0x07, 0x41, 0xe7,
	0x93, 0x72, 0x84, 0x71, 0x90, 0xb0, 0x38, 0xd2, 0x1f, 0xc1, 0x4b, 0xf0, 0x7c, 0x48, 0xfa, 0x83,
	0xd1, 0xaf, 0x86, 0x62, 0x1a, 0xb0, 0x48, 0x3f, 0xe9, 0x57, 0x47, 0xac, 0x33, 0xf7, 0xa8, 0x4b,
	0x78, 0x10, 0xf2, 0x84, 0xf5, 0x68, 0xd8, 0xf8, 0xb7, 0xe1, 0x29, 0x7c, 0x0b, 0x5e, 0x3f, 0x1c,
	0xca, 0x51, 0x7c, 0x78, 0xe9, 0x63, 0xf8, 0x02, 0x4c, 0xfe, 0x95, 0x3f, 0x10, 0x22, 0xfd, 0xc9,
	0xec, 0xe7, 0x08, 0x18, 0x6b, 0xb1, 0x35, 0x1f, 0xae, 0x75, 0x36, 0x39, 0xd2, 0xca, 0xa2, 0xab,
	0x75, 0x31, 0xfa, 0xe8, 0x0e, 0xfa, 0x52, 0x6c, 0xb2, 0xba, 0x34, 0x45, 0x53, 0x5a, 0x65, 0x51,
	0xf7, 0xa5, 0xef, 0xef, 0x6c, 0x57, 0xc9, 0x63, 0x67, 0xf7, 0x4e, 0x7d, 0xbe, 0x68, 0xe3, 0x39,
	0x42, 0x5f, 0xb5, 0xe9, 0x5c, 0x99, 0xa1, 0x5c, 0x9a, 0x0a, 0x76, 0x68, 0x69, 0x9b, 0x7d, 0xa4,
	0xfc, 0xb6, 0x27, 0xac, 0x50, 0x2e, 0x57, 0x07, 0xc2, 0x6a, 0x69, 0xaf, 0x14, 0xe1, 0xbb, 0x66,
	0xa8, 0xbf, 0x8e, 0x83, 0x72, 0xe9, 0x38, 0x07, 0x8a, 0xe3, 0x2c, 0x6d, 0xc7, 0x51, 0xa4, 0x4f,
	0x27, 0xfd, 0x76, 0xf6, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x6d, 0x30, 0xaf, 0x13, 0x03,
	0x00, 0x00,
}
