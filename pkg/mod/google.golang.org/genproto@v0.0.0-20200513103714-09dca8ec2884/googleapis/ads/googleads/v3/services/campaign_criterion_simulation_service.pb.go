// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/services/campaign_criterion_simulation_service.proto

package services

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	resources "google.golang.org/genproto/googleapis/ads/googleads/v3/resources"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for
// [CampaignCriterionSimulationService.GetCampaignCriterionSimulation][google.ads.googleads.v3.services.CampaignCriterionSimulationService.GetCampaignCriterionSimulation].
type GetCampaignCriterionSimulationRequest struct {
	// Required. The resource name of the campaign criterion simulation to fetch.
	ResourceName         string   `protobuf:"bytes,1,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCampaignCriterionSimulationRequest) Reset()         { *m = GetCampaignCriterionSimulationRequest{} }
func (m *GetCampaignCriterionSimulationRequest) String() string { return proto.CompactTextString(m) }
func (*GetCampaignCriterionSimulationRequest) ProtoMessage()    {}
func (*GetCampaignCriterionSimulationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d3b7a1ec06fe4172, []int{0}
}

func (m *GetCampaignCriterionSimulationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCampaignCriterionSimulationRequest.Unmarshal(m, b)
}
func (m *GetCampaignCriterionSimulationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCampaignCriterionSimulationRequest.Marshal(b, m, deterministic)
}
func (m *GetCampaignCriterionSimulationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCampaignCriterionSimulationRequest.Merge(m, src)
}
func (m *GetCampaignCriterionSimulationRequest) XXX_Size() int {
	return xxx_messageInfo_GetCampaignCriterionSimulationRequest.Size(m)
}
func (m *GetCampaignCriterionSimulationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCampaignCriterionSimulationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCampaignCriterionSimulationRequest proto.InternalMessageInfo

func (m *GetCampaignCriterionSimulationRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

func init() {
	proto.RegisterType((*GetCampaignCriterionSimulationRequest)(nil), "google.ads.googleads.v3.services.GetCampaignCriterionSimulationRequest")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/services/campaign_criterion_simulation_service.proto", fileDescriptor_d3b7a1ec06fe4172)
}

var fileDescriptor_d3b7a1ec06fe4172 = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x31, 0x8b, 0xd4, 0x40,
	0x18, 0x65, 0x47, 0x10, 0x0c, 0xda, 0xa4, 0xf1, 0x5c, 0x45, 0x97, 0xe5, 0x44, 0xb9, 0x62, 0x06,
	0x8c, 0x58, 0x8c, 0x7a, 0x38, 0x7b, 0xc8, 0x5a, 0x88, 0x1c, 0x1e, 0x6c, 0x21, 0x0b, 0xcb, 0x5c,
	0x32, 0xc6, 0x81, 0x64, 0x26, 0xce, 0x37, 0x49, 0x23, 0x16, 0x5a, 0x5a, 0xd8, 0xf8, 0x0f, 0x2c,
	0xfd, 0x1f, 0x36, 0xd7, 0xda, 0x59, 0x59, 0x58, 0xf9, 0x13, 0xac, 0x24, 0x99, 0x4c, 0x6e, 0x0f,
	0x4c, 0x72, 0xdd, 0x23, 0xef, 0xe5, 0x7d, 0x2f, 0xef, 0xfb, 0x12, 0x3c, 0x4f, 0xb5, 0x4e, 0x33,
	0x41, 0x78, 0x02, 0xc4, 0xc1, 0x1a, 0x55, 0x11, 0x01, 0x61, 0x2a, 0x19, 0x0b, 0x20, 0x31, 0xcf,
	0x0b, 0x2e, 0x53, 0xb5, 0x89, 0x8d, 0xb4, 0xc2, 0x48, 0xad, 0x36, 0x20, 0xf3, 0x32, 0xe3, 0xb6,
	0x81, 0x4e, 0x86, 0x0b, 0xa3, 0xad, 0x0e, 0x67, 0xce, 0x02, 0xf3, 0x04, 0x70, 0xe7, 0x86, 0xab,
	0x08, 0x7b, 0xb7, 0xe9, 0xd3, 0xbe, 0x79, 0x46, 0x80, 0x2e, 0xcd, 0xe8, 0x40, 0x37, 0x68, 0x7a,
	0xc3, 0xdb, 0x14, 0x92, 0x70, 0xa5, 0xb4, 0x6d, 0x48, 0x68, 0xd9, 0xab, 0x5b, 0x6c, 0x9c, 0x49,
	0xa1, 0x6c, 0x4b, 0xdc, 0xda, 0x22, 0x5e, 0x4b, 0x91, 0x25, 0x9b, 0x63, 0xf1, 0x86, 0x57, 0x52,
	0x9b, 0x56, 0x70, 0x6d, 0x4b, 0xe0, 0x13, 0x39, 0x6a, 0xfe, 0x69, 0x12, 0xdc, 0x5e, 0x0a, 0x7b,
	0xd0, 0xa6, 0x3b, 0xf0, 0xe1, 0x8e, 0xba, 0x6c, 0x2f, 0xc5, 0xdb, 0x52, 0x80, 0x0d, 0x79, 0x70,
	0xc5, 0xbf, 0xbb, 0x51, 0x3c, 0x17, 0x3b, 0x93, 0xd9, 0xe4, 0xee, 0xa5, 0xc5, 0xa3, 0x5f, 0x0c,
	0xfd, 0x65, 0x0f, 0x82, 0xfb, 0xa7, 0xcd, 0xb4, 0xa8, 0x90, 0x80, 0x63, 0x9d, 0x93, 0x21, 0xef,
	0xcb, 0xde, 0xf2, 0x05, 0xcf, 0xc5, 0xbd, 0xef, 0x28, 0x98, 0x0f, 0xa8, 0x8f, 0x5c, 0xdd, 0xe1,
	0x07, 0x14, 0xdc, 0x1c, 0xce, 0x1c, 0x2e, 0xf1, 0xd8, 0xce, 0xf0, 0xb9, 0xbe, 0x7a, 0xba, 0xdf,
	0x6b, 0xd4, 0xad, 0x16, 0x0f, 0xd8, 0xcc, 0x57, 0x3f, 0xd9, 0xd9, 0xda, 0x3e, 0xfe, 0xf8, 0xfd,
	0x05, 0x3d, 0x09, 0xf7, 0xeb, 0xeb, 0x78, 0x77, 0x86, 0x79, 0x1c, 0x97, 0x60, 0x75, 0x2e, 0x0c,
	0x90, 0xbd, 0xee, 0x5c, 0xfe, 0xe3, 0x09, 0x64, 0xef, 0xfd, 0xf4, 0xfa, 0x09, 0xdb, 0xe9, 0x6b,
	0x7c, 0xf1, 0x19, 0x05, 0xbb, 0xb1, 0xce, 0x47, 0x3b, 0x58, 0xdc, 0x19, 0x6f, 0xfb, 0xb0, 0x3e,
	0x93, 0xc3, 0xc9, 0xab, 0x67, 0xad, 0x59, 0xaa, 0x33, 0xae, 0x52, 0xac, 0x4d, 0x4a, 0x52, 0xa1,
	0x9a, 0x23, 0x22, 0xa7, 0xe3, 0xfb, 0xff, 0xb8, 0x87, 0x1e, 0x7c, 0x45, 0x17, 0x96, 0x8c, 0x7d,
	0x43, 0xb3, 0xa5, 0x33, 0x64, 0x09, 0x60, 0x07, 0x6b, 0xb4, 0x8a, 0x70, 0x3b, 0x18, 0x4e, 0xbc,
	0x64, 0xcd, 0x12, 0x58, 0x77, 0x92, 0xf5, 0x2a, 0x5a, 0x7b, 0xc9, 0x1f, 0xb4, 0xeb, 0x9e, 0x53,
	0xca, 0x12, 0xa0, 0xb4, 0x13, 0x51, 0xba, 0x8a, 0x28, 0xf5, 0xb2, 0xe3, 0x8b, 0x4d, 0xce, 0xe8,
	0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x27, 0xb4, 0xc5, 0x0c, 0x18, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CampaignCriterionSimulationServiceClient is the client API for CampaignCriterionSimulationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CampaignCriterionSimulationServiceClient interface {
	// Returns the requested campaign criterion simulation in full detail.
	GetCampaignCriterionSimulation(ctx context.Context, in *GetCampaignCriterionSimulationRequest, opts ...grpc.CallOption) (*resources.CampaignCriterionSimulation, error)
}

type campaignCriterionSimulationServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCampaignCriterionSimulationServiceClient(cc grpc.ClientConnInterface) CampaignCriterionSimulationServiceClient {
	return &campaignCriterionSimulationServiceClient{cc}
}

func (c *campaignCriterionSimulationServiceClient) GetCampaignCriterionSimulation(ctx context.Context, in *GetCampaignCriterionSimulationRequest, opts ...grpc.CallOption) (*resources.CampaignCriterionSimulation, error) {
	out := new(resources.CampaignCriterionSimulation)
	err := c.cc.Invoke(ctx, "/google.ads.googleads.v3.services.CampaignCriterionSimulationService/GetCampaignCriterionSimulation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CampaignCriterionSimulationServiceServer is the server API for CampaignCriterionSimulationService service.
type CampaignCriterionSimulationServiceServer interface {
	// Returns the requested campaign criterion simulation in full detail.
	GetCampaignCriterionSimulation(context.Context, *GetCampaignCriterionSimulationRequest) (*resources.CampaignCriterionSimulation, error)
}

// UnimplementedCampaignCriterionSimulationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCampaignCriterionSimulationServiceServer struct {
}

func (*UnimplementedCampaignCriterionSimulationServiceServer) GetCampaignCriterionSimulation(ctx context.Context, req *GetCampaignCriterionSimulationRequest) (*resources.CampaignCriterionSimulation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCampaignCriterionSimulation not implemented")
}

func RegisterCampaignCriterionSimulationServiceServer(s *grpc.Server, srv CampaignCriterionSimulationServiceServer) {
	s.RegisterService(&_CampaignCriterionSimulationService_serviceDesc, srv)
}

func _CampaignCriterionSimulationService_GetCampaignCriterionSimulation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCampaignCriterionSimulationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CampaignCriterionSimulationServiceServer).GetCampaignCriterionSimulation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.ads.googleads.v3.services.CampaignCriterionSimulationService/GetCampaignCriterionSimulation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CampaignCriterionSimulationServiceServer).GetCampaignCriterionSimulation(ctx, req.(*GetCampaignCriterionSimulationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CampaignCriterionSimulationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.ads.googleads.v3.services.CampaignCriterionSimulationService",
	HandlerType: (*CampaignCriterionSimulationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetCampaignCriterionSimulation",
			Handler:    _CampaignCriterionSimulationService_GetCampaignCriterionSimulation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/ads/googleads/v3/services/campaign_criterion_simulation_service.proto",
}
