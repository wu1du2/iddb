// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/ads/googleads/v3/errors/offline_user_data_job_error.proto

package errors

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Enum describing possible request errors.
type OfflineUserDataJobErrorEnum_OfflineUserDataJobError int32

const (
	// Enum unspecified.
	OfflineUserDataJobErrorEnum_UNSPECIFIED OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 0
	// The received error code is not known in this version.
	OfflineUserDataJobErrorEnum_UNKNOWN OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 1
	// The user list ID provided for the job is invalid.
	OfflineUserDataJobErrorEnum_INVALID_USER_LIST_ID OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 3
	// Type of the user list is not applicable for the job.
	OfflineUserDataJobErrorEnum_INVALID_USER_LIST_TYPE OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 4
	// Customer is not whitelisted for using user ID in upload data.
	OfflineUserDataJobErrorEnum_NOT_WHITELISTED_FOR_USER_ID OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 5
	// Upload data is not compatible with the upload key type of the associated
	// user list.
	OfflineUserDataJobErrorEnum_INCOMPATIBLE_UPLOAD_KEY_TYPE OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 6
	// The user identifier is missing valid data.
	OfflineUserDataJobErrorEnum_MISSING_USER_IDENTIFIER OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 7
	// The mobile ID is malformed.
	OfflineUserDataJobErrorEnum_INVALID_MOBILE_ID_FORMAT OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 8
	// Request is exceeding the maximum number of user identifiers allowed.
	OfflineUserDataJobErrorEnum_TOO_MANY_USER_IDENTIFIERS OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 9
	// Customer is not whitelisted for store sales direct data.
	OfflineUserDataJobErrorEnum_NOT_WHITELISTED_FOR_STORE_SALES_DIRECT OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 10
	// The partner ID in store sales direct metadata is invalid.
	OfflineUserDataJobErrorEnum_INVALID_PARTNER_ID OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 11
	// The data in user identifier should not be encoded.
	OfflineUserDataJobErrorEnum_INVALID_ENCODING OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 12
	// The country code is invalid.
	OfflineUserDataJobErrorEnum_INVALID_COUNTRY_CODE OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 13
	// Incompatible user identifier when using third_party_user_id for store
	// sales direct first party data or not using third_party_user_id for store
	// sales third party data.
	OfflineUserDataJobErrorEnum_INCOMPATIBLE_USER_IDENTIFIER OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 14
	// A transaction time in the future is not allowed.
	OfflineUserDataJobErrorEnum_FUTURE_TRANSACTION_TIME OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 15
	// The conversion_action specified in transaction_attributes is used to
	// report conversions to a conversion action configured in Google Ads. This
	// error indicates there is no such conversion action in the account.
	OfflineUserDataJobErrorEnum_INVALID_CONVERSION_ACTION OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 16
	// Mobile ID is not supported for store sales direct data.
	OfflineUserDataJobErrorEnum_MOBILE_ID_NOT_SUPPORTED OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 17
	// When a remove-all operation is provided, it has to be the first operation
	// of the operation list.
	OfflineUserDataJobErrorEnum_INVALID_OPERATION_ORDER OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 18
	// Mixing creation and removal of offline data in the same job is not
	// allowed.
	OfflineUserDataJobErrorEnum_CONFLICTING_OPERATION OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 19
	// The external update ID already exists.
	OfflineUserDataJobErrorEnum_EXTERNAL_UPDATE_ID_ALREADY_EXISTS OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 21
	// Once the upload job is started, new operations cannot be added.
	OfflineUserDataJobErrorEnum_JOB_ALREADY_STARTED OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 22
	// Remove operation is not allowed for store sales direct updates.
	OfflineUserDataJobErrorEnum_REMOVE_NOT_SUPPORTED OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 23
	// Remove-all is not supported for store sales direct updates.
	OfflineUserDataJobErrorEnum_REMOVE_ALL_NOT_SUPPORTED OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 24
	// The SHA256 encoded value is malformed.
	OfflineUserDataJobErrorEnum_INVALID_SHA256_FORMAT OfflineUserDataJobErrorEnum_OfflineUserDataJobError = 25
)

var OfflineUserDataJobErrorEnum_OfflineUserDataJobError_name = map[int32]string{
	0:  "UNSPECIFIED",
	1:  "UNKNOWN",
	3:  "INVALID_USER_LIST_ID",
	4:  "INVALID_USER_LIST_TYPE",
	5:  "NOT_WHITELISTED_FOR_USER_ID",
	6:  "INCOMPATIBLE_UPLOAD_KEY_TYPE",
	7:  "MISSING_USER_IDENTIFIER",
	8:  "INVALID_MOBILE_ID_FORMAT",
	9:  "TOO_MANY_USER_IDENTIFIERS",
	10: "NOT_WHITELISTED_FOR_STORE_SALES_DIRECT",
	11: "INVALID_PARTNER_ID",
	12: "INVALID_ENCODING",
	13: "INVALID_COUNTRY_CODE",
	14: "INCOMPATIBLE_USER_IDENTIFIER",
	15: "FUTURE_TRANSACTION_TIME",
	16: "INVALID_CONVERSION_ACTION",
	17: "MOBILE_ID_NOT_SUPPORTED",
	18: "INVALID_OPERATION_ORDER",
	19: "CONFLICTING_OPERATION",
	21: "EXTERNAL_UPDATE_ID_ALREADY_EXISTS",
	22: "JOB_ALREADY_STARTED",
	23: "REMOVE_NOT_SUPPORTED",
	24: "REMOVE_ALL_NOT_SUPPORTED",
	25: "INVALID_SHA256_FORMAT",
}

var OfflineUserDataJobErrorEnum_OfflineUserDataJobError_value = map[string]int32{
	"UNSPECIFIED":                            0,
	"UNKNOWN":                                1,
	"INVALID_USER_LIST_ID":                   3,
	"INVALID_USER_LIST_TYPE":                 4,
	"NOT_WHITELISTED_FOR_USER_ID":            5,
	"INCOMPATIBLE_UPLOAD_KEY_TYPE":           6,
	"MISSING_USER_IDENTIFIER":                7,
	"INVALID_MOBILE_ID_FORMAT":               8,
	"TOO_MANY_USER_IDENTIFIERS":              9,
	"NOT_WHITELISTED_FOR_STORE_SALES_DIRECT": 10,
	"INVALID_PARTNER_ID":                     11,
	"INVALID_ENCODING":                       12,
	"INVALID_COUNTRY_CODE":                   13,
	"INCOMPATIBLE_USER_IDENTIFIER":           14,
	"FUTURE_TRANSACTION_TIME":                15,
	"INVALID_CONVERSION_ACTION":              16,
	"MOBILE_ID_NOT_SUPPORTED":                17,
	"INVALID_OPERATION_ORDER":                18,
	"CONFLICTING_OPERATION":                  19,
	"EXTERNAL_UPDATE_ID_ALREADY_EXISTS":      21,
	"JOB_ALREADY_STARTED":                    22,
	"REMOVE_NOT_SUPPORTED":                   23,
	"REMOVE_ALL_NOT_SUPPORTED":               24,
	"INVALID_SHA256_FORMAT":                  25,
}

func (x OfflineUserDataJobErrorEnum_OfflineUserDataJobError) String() string {
	return proto.EnumName(OfflineUserDataJobErrorEnum_OfflineUserDataJobError_name, int32(x))
}

func (OfflineUserDataJobErrorEnum_OfflineUserDataJobError) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_db791067efeb497d, []int{0, 0}
}

// Container for enum describing possible offline user data job errors.
type OfflineUserDataJobErrorEnum struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineUserDataJobErrorEnum) Reset()         { *m = OfflineUserDataJobErrorEnum{} }
func (m *OfflineUserDataJobErrorEnum) String() string { return proto.CompactTextString(m) }
func (*OfflineUserDataJobErrorEnum) ProtoMessage()    {}
func (*OfflineUserDataJobErrorEnum) Descriptor() ([]byte, []int) {
	return fileDescriptor_db791067efeb497d, []int{0}
}

func (m *OfflineUserDataJobErrorEnum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineUserDataJobErrorEnum.Unmarshal(m, b)
}
func (m *OfflineUserDataJobErrorEnum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineUserDataJobErrorEnum.Marshal(b, m, deterministic)
}
func (m *OfflineUserDataJobErrorEnum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineUserDataJobErrorEnum.Merge(m, src)
}
func (m *OfflineUserDataJobErrorEnum) XXX_Size() int {
	return xxx_messageInfo_OfflineUserDataJobErrorEnum.Size(m)
}
func (m *OfflineUserDataJobErrorEnum) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineUserDataJobErrorEnum.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineUserDataJobErrorEnum proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("google.ads.googleads.v3.errors.OfflineUserDataJobErrorEnum_OfflineUserDataJobError", OfflineUserDataJobErrorEnum_OfflineUserDataJobError_name, OfflineUserDataJobErrorEnum_OfflineUserDataJobError_value)
	proto.RegisterType((*OfflineUserDataJobErrorEnum)(nil), "google.ads.googleads.v3.errors.OfflineUserDataJobErrorEnum")
}

func init() {
	proto.RegisterFile("google/ads/googleads/v3/errors/offline_user_data_job_error.proto", fileDescriptor_db791067efeb497d)
}

var fileDescriptor_db791067efeb497d = []byte{
	// 651 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xcd, 0x6e, 0x13, 0x3b,
	0x14, 0xbe, 0x6d, 0x6f, 0xdb, 0x7b, 0xdd, 0x7b, 0xa9, 0x71, 0x7f, 0xd2, 0x9f, 0x50, 0x20, 0x12,
	0x2c, 0x58, 0x4c, 0x24, 0x22, 0x58, 0x0c, 0x1b, 0x9c, 0xb1, 0x93, 0xba, 0x9d, 0xd8, 0x23, 0xdb,
	0x93, 0x36, 0x28, 0x92, 0x35, 0x25, 0x69, 0x14, 0xd4, 0x66, 0xaa, 0x99, 0xb4, 0x0f, 0xc4, 0x92,
	0xe7, 0x60, 0xc5, 0x73, 0xb0, 0xe2, 0x05, 0xd8, 0x22, 0x8f, 0x3b, 0x01, 0xa5, 0x94, 0xd5, 0x1c,
	0x9d, 0xf3, 0x9d, 0xef, 0xfb, 0xce, 0xf1, 0x1c, 0xf0, 0x76, 0x94, 0xa6, 0xa3, 0x8b, 0x61, 0x3d,
	0x19, 0xe4, 0x75, 0x17, 0xda, 0xe8, 0xa6, 0x51, 0x1f, 0x66, 0x59, 0x9a, 0xe5, 0xf5, 0xf4, 0xfc,
	0xfc, 0x62, 0x3c, 0x19, 0x9a, 0xeb, 0x7c, 0x98, 0x99, 0x41, 0x32, 0x4d, 0xcc, 0x87, 0xf4, 0xcc,
	0x14, 0x45, 0xef, 0x2a, 0x4b, 0xa7, 0x29, 0x3a, 0x70, 0x6d, 0x5e, 0x32, 0xc8, 0xbd, 0x19, 0x83,
	0x77, 0xd3, 0xf0, 0x1c, 0xc3, 0x5e, 0xb5, 0x54, 0xb8, 0x1a, 0xd7, 0x93, 0xc9, 0x24, 0x9d, 0x26,
	0xd3, 0x71, 0x3a, 0xc9, 0x5d, 0x77, 0xed, 0xeb, 0x32, 0xd8, 0x17, 0x4e, 0x23, 0xce, 0x87, 0x19,
	0x49, 0xa6, 0xc9, 0x51, 0x7a, 0x46, 0x6d, 0x2b, 0x9d, 0x5c, 0x5f, 0xd6, 0x3e, 0x2f, 0x83, 0xca,
	0x3d, 0x75, 0xb4, 0x0e, 0xd6, 0x62, 0xae, 0x22, 0x1a, 0xb0, 0x16, 0xa3, 0x04, 0xfe, 0x85, 0xd6,
	0xc0, 0x6a, 0xcc, 0x8f, 0xb9, 0x38, 0xe1, 0x70, 0x01, 0xed, 0x80, 0x4d, 0xc6, 0xbb, 0x38, 0x64,
	0xc4, 0xc4, 0x8a, 0x4a, 0x13, 0x32, 0xa5, 0x0d, 0x23, 0x70, 0x09, 0xed, 0x81, 0xed, 0xbb, 0x15,
	0xdd, 0x8b, 0x28, 0xfc, 0x1b, 0x3d, 0x06, 0xfb, 0x5c, 0x68, 0x73, 0x72, 0xc8, 0x34, 0xb5, 0x79,
	0x4a, 0x4c, 0x4b, 0x48, 0x87, 0x63, 0x04, 0x2e, 0xa3, 0x27, 0xa0, 0xca, 0x78, 0x20, 0x3a, 0x11,
	0xd6, 0xac, 0x19, 0x52, 0x13, 0x47, 0xa1, 0xc0, 0xc4, 0x1c, 0xd3, 0x9e, 0xa3, 0x58, 0x41, 0xfb,
	0xa0, 0xd2, 0x61, 0x4a, 0x31, 0xde, 0x2e, 0xdb, 0x28, 0xd7, 0xd6, 0xa2, 0x84, 0xab, 0xa8, 0x0a,
	0x76, 0x4a, 0xed, 0x8e, 0x68, 0xb2, 0x90, 0x1a, 0x56, 0x28, 0x74, 0xb0, 0x86, 0xff, 0xa0, 0x47,
	0x60, 0x57, 0x0b, 0x61, 0x3a, 0x98, 0xf7, 0xe6, 0x7b, 0x15, 0xfc, 0x17, 0xbd, 0x00, 0xcf, 0x7f,
	0x67, 0x4e, 0x69, 0x21, 0xa9, 0x51, 0x38, 0xa4, 0xca, 0x10, 0x26, 0x69, 0xa0, 0x21, 0x40, 0xdb,
	0x00, 0x95, 0x42, 0x11, 0x96, 0x9a, 0x3b, 0xff, 0x6b, 0x68, 0x13, 0xc0, 0x32, 0x4f, 0x79, 0x20,
	0x08, 0xe3, 0x6d, 0xf8, 0xdf, 0xaf, 0xcb, 0x0a, 0x44, 0xcc, 0xb5, 0xec, 0x99, 0x40, 0x10, 0x0a,
	0xff, 0xbf, 0x3b, 0xef, 0xdc, 0x48, 0x0f, 0xec, 0xbc, 0xad, 0x58, 0xc7, 0x92, 0x1a, 0x2d, 0x31,
	0x57, 0x38, 0xd0, 0x4c, 0x70, 0xa3, 0x59, 0x87, 0xc2, 0x75, 0x3b, 0xd1, 0x4f, 0x62, 0xde, 0xa5,
	0x52, 0xd9, 0xa2, 0xc3, 0x40, 0x58, 0xec, 0x6a, 0xb6, 0x06, 0x3b, 0x9b, 0x8a, 0xa3, 0x48, 0x48,
	0x4d, 0x09, 0x7c, 0x68, 0x8b, 0x65, 0xaf, 0x88, 0xa8, 0xc4, 0x05, 0xaf, 0x90, 0x84, 0x4a, 0x88,
	0xd0, 0x2e, 0xd8, 0x0a, 0x04, 0x6f, 0x85, 0x2c, 0xd0, 0x76, 0xd3, 0x33, 0x00, 0xdc, 0x40, 0xcf,
	0xc0, 0x53, 0x7a, 0xaa, 0xa9, 0xe4, 0x38, 0x34, 0x71, 0x44, 0xb0, 0x2e, 0xd8, 0x71, 0x28, 0x29,
	0x26, 0x3d, 0x43, 0x4f, 0x99, 0xd2, 0x0a, 0x6e, 0xa1, 0x0a, 0xd8, 0x38, 0x12, 0xcd, 0x59, 0x5e,
	0x69, 0x5c, 0xe8, 0x6e, 0xdb, 0x65, 0x48, 0xda, 0x11, 0x5d, 0x3a, 0xe7, 0xa8, 0x62, 0x5f, 0xef,
	0xb6, 0x82, 0xc3, 0x70, 0xae, 0xba, 0x63, 0x2d, 0x95, 0x7e, 0xd5, 0x21, 0x7e, 0xf9, 0xea, 0x75,
	0xf9, 0xb0, 0xbb, 0xcd, 0xef, 0x0b, 0xa0, 0xf6, 0x3e, 0xbd, 0xf4, 0xfe, 0x7c, 0x2b, 0xcd, 0xea,
	0x3d, 0xbf, 0x7a, 0x64, 0x6f, 0x25, 0x5a, 0x78, 0x47, 0x6e, 0xfb, 0x47, 0xe9, 0x45, 0x32, 0x19,
	0x79, 0x69, 0x36, 0xaa, 0x8f, 0x86, 0x93, 0xe2, 0x92, 0xca, 0xeb, 0xbd, 0x1a, 0xe7, 0xf7, 0x1d,
	0xf3, 0x1b, 0xf7, 0xf9, 0xb8, 0xb8, 0xd4, 0xc6, 0xf8, 0xd3, 0xe2, 0x41, 0xdb, 0x91, 0xe1, 0x41,
	0xee, 0xb9, 0xd0, 0x46, 0xdd, 0x86, 0x57, 0x48, 0xe6, 0x5f, 0x4a, 0x40, 0x1f, 0x0f, 0xf2, 0xfe,
	0x0c, 0xd0, 0xef, 0x36, 0xfa, 0x0e, 0xf0, 0x6d, 0xb1, 0xe6, 0xb2, 0xbe, 0x8f, 0x07, 0xb9, 0xef,
	0xcf, 0x20, 0xbe, 0xdf, 0x6d, 0xf8, 0xbe, 0x03, 0x9d, 0xad, 0x14, 0xee, 0x1a, 0x3f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xd7, 0x8f, 0x4d, 0x7b, 0x69, 0x04, 0x00, 0x00,
}
